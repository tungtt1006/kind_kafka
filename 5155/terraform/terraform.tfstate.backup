{
  "version": 4,
  "terraform_version": "1.3.9",
  "serial": 138,
  "lineage": "9441009b-639e-18df-073c-20c6f46c13d9",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "cassandra",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "cassandra",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "write-cassandra",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "4.1.0",
                "chart": "cassandra",
                "name": "write-cassandra",
                "namespace": "default",
                "revision": 1,
                "values": "{\"dbUser\":{\"password\":\"adminpassword\",\"user\":\"cassandra\"},\"initDBConfigMap\":\"cassandra-initdb\",\"persistence\":{\"enabled\":true,\"size\":\"8Gi\"}}",
                "version": "10.0.2"
              }
            ],
            "name": "write-cassandra",
            "namespace": "default",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://charts.bitnami.com/bitnami",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "dbUser.password",
                "type": "",
                "value": "adminpassword"
              },
              {
                "name": "dbUser.user",
                "type": "",
                "value": "cassandra"
              },
              {
                "name": "initDBConfigMap",
                "type": "",
                "value": "cassandra-initdb"
              },
              {
                "name": "persistence.enabled",
                "type": "",
                "value": "true"
              },
              {
                "name": "persistence.size",
                "type": "",
                "value": "8Gi"
              }
            ],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": null,
            "verify": false,
            "version": "10.0.2",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "kubernetes_config_map_v1.cassandra-initdb"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "strimzi-kafka-operator",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "strimzi-kafka-operator",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "strimzi-kafka-operator",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "0.33.0",
                "chart": "strimzi-kafka-operator",
                "name": "strimzi-kafka-operator",
                "namespace": "operator",
                "revision": 1,
                "values": "{\"watchNamespaces\":[\"default\"]}",
                "version": "0.33.0"
              }
            ],
            "name": "strimzi-kafka-operator",
            "namespace": "operator",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://strimzi.io/charts/",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "watchNamespaces[0]",
                "type": "",
                "value": "default"
              }
            ],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": null,
            "verify": false,
            "version": "0.33.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_config_map_v1",
      "name": "cassandra-initdb",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": {},
            "data": {
              "init.cql": "    CREATE KEYSPACE quine WITH replication = {'class': 'SimpleStrategy', 'replication_factor': '1'};\n\n    USE quine;\n\n    CREATE TABLE domain_graph_nodes (\n        dgn_id bigint PRIMARY KEY,\n        data blob\n    );\n\n    CREATE TABLE domain_index_events (\n        quine_id blob,\n        timestamp bigint,\n        data blob,\n        dgn_id bigint,\n        PRIMARY KEY (quine_id, timestamp)\n    ) WITH CLUSTERING ORDER BY (timestamp ASC)\n        AND compaction = {'class': 'org.apache.cassandra.db.compaction.TimeWindowCompactionStrategy'};\n\n    CREATE TABLE journals (\n        quine_id blob,\n        timestamp bigint,\n        data blob,\n        PRIMARY KEY (quine_id, timestamp)\n    ) WITH CLUSTERING ORDER BY (timestamp ASC)\n        AND compaction = {'class': 'org.apache.cassandra.db.compaction.TimeWindowCompactionStrategy'};\n\n    CREATE TABLE meta_data (\n        key text PRIMARY KEY,\n        value blob\n    );\n\n    CREATE TABLE snapshots (\n        quine_id blob,\n        timestamp bigint,\n        multipart_index int,\n        data blob,\n        multipart_count int,\n        PRIMARY KEY (quine_id, timestamp, multipart_index)\n    ) WITH CLUSTERING ORDER BY (timestamp DESC, multipart_index ASC);\n\n    CREATE TABLE standing_queries (\n        query_id uuid PRIMARY KEY,\n        queries blob\n    );\n\n    CREATE TABLE standing_query_states (\n        quine_id blob,\n        standing_query_id uuid,\n        standing_query_part_id uuid,\n        data blob,\n        PRIMARY KEY (quine_id, standing_query_id, standing_query_part_id)\n    ) WITH CLUSTERING ORDER BY (standing_query_id ASC, standing_query_part_id ASC);\n"
            },
            "id": "default/cassandra-initdb",
            "immutable": false,
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "cassandra-initdb",
                "namespace": "default",
                "resource_version": "62359",
                "uid": "c1b5962b-0b78-4313-9eff-51d7c88b0f30"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_config_map_v1",
      "name": "quine-io",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": null,
            "data": {
              "kafka-ingest.yaml": "version: 1\ntitle: Kafka Ingest\ncontributor: https://github.com/landon9720\nsummary: Ingest Kafka topic messages as graph nodes\ndescription: Ingests each message in the Kafka topic \"quine\" as a graph node\ningestStreams:\n  - type: KafkaIngest\n    topics:\n      - quine\n    bootstrapServers: \"strimzi-kafka-kafka-bootstrap:9092\"\n    format:\n      type: CypherJson\n      query: |-\n        MATCH (n)\n        WHERE id(n) = idFrom($that)\n        SET n = $that\nstandingQueries:\n  - pattern:\n      type: Cypher\n      query: MATCH (n) RETURN DISTINCT id(n) AS id\n      mode: DistinctId\n    outputs:\n      toKafka:\n        type: WriteToKafka\n        topic: quine-output\n        bootstrapServers: \"strimzi-kafka-kafka-bootstrap:9092\"\n        format:\n          type: JSON\nnodeAppearances: [ ]\nquickQueries: [ ]\nsampleQueries: [ ]",
              "quine.conf": "quine {\n    store {\n        # store data in an Apache Cassandra instance\n        type = cassandra\n\n        # \"host:port\" strings at which Cassandra nodes can be accessed from\n        # the application\n        endpoints = [\n            ${CASSANDRA_ENDPOINTS}\n        ]\n\n        # the keyspace to use\n        keyspace = quine\n\n        # whether the application should create the keyspace if it does not\n        # yet exist\n        should-create-keyspace = false\n\n        # whether the application should create tables in the keyspace if\n        # they do not yet exist\n        should-create-tables = true\n\n        # how many copies of each datum the Cassandra cluster should retain\n        replication-factor = 1\n\n        # how many hosts must agree on a datum for Quine to consider that\n        # datum written/read\n        write-consistency = LOCAL_QUORUM\n        read-consistency = LOCAL_QUORUM\n\n        # passed through to Cassandra\n        local-datacenter = \"datacenter1\"\n\n        # how long to wait before considering a write operation failed\n        write-timeout = \"10s\"\n\n        # how long to wait before considering a read operation failed\n        read-timeout = \"10s\"\n\n        # if set, the number of nodes for which to optimize node creation\n        # latency\n        # bloom-filter-size =\n    }\n}\n# configuration for which data to save about nodes and when to do so\npersistence {\n    # whether to save node journals. \"true\" uses more disk space and\n    # enables more functionality, such as historical queries\n    journal-enabled = false\n\n    # one of [on-node-sleep, on-node-update, never]. When to save a\n    # snapshot of a node's current state, including any SingleId Standing\n    # Queries registered on the node\n    snapshot-schedule = on-node-sleep\n\n    # whether only a single snapshot should be retained per-node. If false,\n    # one snapshot will be saved at each timestamp against which a\n    # historical query is made\n    snapshot-singleton = true\n\n    # when to save Standing Query partial result (only applies for the\n    # `MultipleValues` mode -- `SingleId` Standing Queries always save when\n    # a node saves a snapshot, regardless of this setting)\n    standing-query-schedule = on-node-sleep\n}\ndatastax-java-driver {\n    advanced {\n        auth-provider {\n          class = PlainTextAuthProvider\n          username = ${CASSANDRA_USERNAME}\n          password = ${CASSANDRA_PASSWORD}\n        }\n    }\n}"
            },
            "id": "default/quine-config",
            "immutable": false,
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 0,
                "labels": null,
                "name": "quine-config",
                "namespace": "default",
                "resource_version": "63279",
                "uid": "9a5603f2-1787-4142-a24e-46673465ba81"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_deployment_v1",
      "name": "quine-io",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "default/quine-io",
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 1,
                "labels": {
                  "app": "quineio"
                },
                "name": "quine-io",
                "namespace": "default",
                "resource_version": "63308",
                "uid": "2a7fa3cd-5a90-406b-830a-c4f749226d89"
              }
            ],
            "spec": [
              {
                "min_ready_seconds": 0,
                "paused": false,
                "progress_deadline_seconds": 600,
                "replicas": "1",
                "revision_history_limit": 10,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "app": "quineio"
                    }
                  }
                ],
                "strategy": [
                  {
                    "rolling_update": [
                      {
                        "max_surge": "25%",
                        "max_unavailable": "25%"
                      }
                    ],
                    "type": "RollingUpdate"
                  }
                ],
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": null,
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "app": "quineio"
                        },
                        "name": "",
                        "namespace": "",
                        "resource_version": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": null,
                            "command": [
                              "sh",
                              "-c",
                              "#!sh \n java -Dconfig.file=/quine/quine.conf -jar quine-assembly-1.5.1.jar -r /quine/kafka-ingest.yaml --force-config"
                            ],
                            "env": [
                              {
                                "name": "CASSANDRA_ENDPOINTS",
                                "value": "cassandra.default.svc.cluster.local:9042",
                                "value_from": []
                              },
                              {
                                "name": "CASSANDRA_USERNAME",
                                "value": "cassandra",
                                "value_from": []
                              },
                              {
                                "name": "CASSANDRA_PASSWORD",
                                "value": "adminpassword",
                                "value_from": []
                              },
                              {
                                "name": "KAFKA_BOOTSTRAP_SERVER",
                                "value": "strimzi-kafka-kafka-bootstrap:9092",
                                "value_from": []
                              }
                            ],
                            "env_from": [],
                            "image": "thatdot/quine:1.5.1",
                            "image_pull_policy": "IfNotPresent",
                            "lifecycle": [],
                            "liveness_probe": [],
                            "name": "quine",
                            "port": [
                              {
                                "container_port": 8080,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "http",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [],
                            "resources": [
                              {
                                "limits": {},
                                "requests": {}
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_mount": [
                              {
                                "mount_path": "/quine",
                                "mount_propagation": "None",
                                "name": "config",
                                "read_only": false,
                                "sub_path": ""
                              }
                            ],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": true,
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [],
                        "init_container": [],
                        "node_name": "",
                        "node_selector": null,
                        "priority_class_name": "",
                        "readiness_gate": [],
                        "restart_policy": "Always",
                        "runtime_class_name": "",
                        "security_context": [],
                        "service_account_name": "",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "topology_spread_constraint": [],
                        "volume": [
                          {
                            "aws_elastic_block_store": [],
                            "azure_disk": [],
                            "azure_file": [],
                            "ceph_fs": [],
                            "cinder": [],
                            "config_map": [
                              {
                                "default_mode": "0644",
                                "items": [],
                                "name": "quine-config",
                                "optional": false
                              }
                            ],
                            "csi": [],
                            "downward_api": [],
                            "empty_dir": [],
                            "fc": [],
                            "flex_volume": [],
                            "flocker": [],
                            "gce_persistent_disk": [],
                            "git_repo": [],
                            "glusterfs": [],
                            "host_path": [],
                            "iscsi": [],
                            "local": [],
                            "name": "config",
                            "nfs": [],
                            "persistent_volume_claim": [],
                            "photon_persistent_disk": [],
                            "projected": [],
                            "quobyte": [],
                            "rbd": [],
                            "secret": [],
                            "vsphere_volume": []
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_rollout": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "helm_release.cassandra",
            "kubernetes_config_map_v1.quine-io",
            "kubernetes_manifest.strimzi-kafka"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "strimzi-kafka",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "kafka.strimzi.io/v1beta2",
                "kind": "Kafka",
                "metadata": {
                  "name": "strimzi-kafka",
                  "namespace": "default"
                },
                "spec": {
                  "entityOperator": {
                    "topicOperator": {},
                    "userOperator": {}
                  },
                  "kafka": {
                    "config": {
                      "default.replication.factor": 1,
                      "inter.broker.protocol.version": "3.3",
                      "min.insync.replicas": 1,
                      "offsets.topic.replication.factor": 1,
                      "transaction.state.log.min.isr": 1,
                      "transaction.state.log.replication.factor": 1
                    },
                    "listeners": [
                      {
                        "name": "plain",
                        "port": 9092,
                        "tls": false,
                        "type": "internal"
                      },
                      {
                        "name": "tls",
                        "port": 9093,
                        "tls": true,
                        "type": "internal"
                      }
                    ],
                    "replicas": 1,
                    "storage": {
                      "type": "jbod",
                      "volumes": [
                        {
                          "deleteClaim": false,
                          "id": 0,
                          "size": "5Gi",
                          "type": "persistent-claim"
                        }
                      ]
                    },
                    "version": "3.3.2"
                  },
                  "zookeeper": {
                    "replicas": 1,
                    "storage": {
                      "deleteClaim": false,
                      "size": "5Gi",
                      "type": "persistent-claim"
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "entityOperator": [
                        "object",
                        {
                          "topicOperator": [
                            "object",
                            {}
                          ],
                          "userOperator": [
                            "object",
                            {}
                          ]
                        }
                      ],
                      "kafka": [
                        "object",
                        {
                          "config": [
                            "object",
                            {
                              "default.replication.factor": "number",
                              "inter.broker.protocol.version": "string",
                              "min.insync.replicas": "number",
                              "offsets.topic.replication.factor": "number",
                              "transaction.state.log.min.isr": "number",
                              "transaction.state.log.replication.factor": "number"
                            }
                          ],
                          "listeners": [
                            "tuple",
                            [
                              [
                                "object",
                                {
                                  "name": "string",
                                  "port": "number",
                                  "tls": "bool",
                                  "type": "string"
                                }
                              ],
                              [
                                "object",
                                {
                                  "name": "string",
                                  "port": "number",
                                  "tls": "bool",
                                  "type": "string"
                                }
                              ]
                            ]
                          ],
                          "replicas": "number",
                          "storage": [
                            "object",
                            {
                              "type": "string",
                              "volumes": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "deleteClaim": "bool",
                                      "id": "number",
                                      "size": "string",
                                      "type": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ],
                          "version": "string"
                        }
                      ],
                      "zookeeper": [
                        "object",
                        {
                          "replicas": "number",
                          "storage": [
                            "object",
                            {
                              "deleteClaim": "bool",
                              "size": "string",
                              "type": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "kafka.strimzi.io/v1beta2",
                "kind": "Kafka",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "strimzi-kafka",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "clientsCa": {
                    "certificateExpirationPolicy": null,
                    "generateCertificateAuthority": null,
                    "generateSecretOwnerReference": null,
                    "renewalDays": null,
                    "validityDays": null
                  },
                  "clusterCa": {
                    "certificateExpirationPolicy": null,
                    "generateCertificateAuthority": null,
                    "generateSecretOwnerReference": null,
                    "renewalDays": null,
                    "validityDays": null
                  },
                  "cruiseControl": {
                    "brokerCapacity": {
                      "cpu": null,
                      "cpuUtilization": null,
                      "disk": null,
                      "inboundNetwork": null,
                      "outboundNetwork": null,
                      "overrides": null
                    },
                    "config": null,
                    "image": null,
                    "jvmOptions": {
                      "-XX": null,
                      "-Xms": null,
                      "-Xmx": null,
                      "gcLoggingEnabled": null,
                      "javaSystemProperties": null
                    },
                    "livenessProbe": {
                      "failureThreshold": null,
                      "initialDelaySeconds": null,
                      "periodSeconds": null,
                      "successThreshold": null,
                      "timeoutSeconds": null
                    },
                    "logging": {
                      "loggers": null,
                      "type": null,
                      "valueFrom": {
                        "configMapKeyRef": {
                          "key": null,
                          "name": null,
                          "optional": null
                        }
                      }
                    },
                    "metricsConfig": {
                      "type": null,
                      "valueFrom": {
                        "configMapKeyRef": {
                          "key": null,
                          "name": null,
                          "optional": null
                        }
                      }
                    },
                    "readinessProbe": {
                      "failureThreshold": null,
                      "initialDelaySeconds": null,
                      "periodSeconds": null,
                      "successThreshold": null,
                      "timeoutSeconds": null
                    },
                    "resources": {
                      "limits": null,
                      "requests": null
                    },
                    "template": {
                      "apiService": {
                        "ipFamilies": null,
                        "ipFamilyPolicy": null,
                        "metadata": {
                          "annotations": null,
                          "labels": null
                        }
                      },
                      "cruiseControlContainer": {
                        "env": null,
                        "securityContext": {
                          "allowPrivilegeEscalation": null,
                          "capabilities": {
                            "add": null,
                            "drop": null
                          },
                          "privileged": null,
                          "procMount": null,
                          "readOnlyRootFilesystem": null,
                          "runAsGroup": null,
                          "runAsNonRoot": null,
                          "runAsUser": null,
                          "seLinuxOptions": {
                            "level": null,
                            "role": null,
                            "type": null,
                            "user": null
                          },
                          "seccompProfile": {
                            "localhostProfile": null,
                            "type": null
                          },
                          "windowsOptions": {
                            "gmsaCredentialSpec": null,
                            "gmsaCredentialSpecName": null,
                            "hostProcess": null,
                            "runAsUserName": null
                          }
                        }
                      },
                      "deployment": {
                        "metadata": {
                          "annotations": null,
                          "labels": null
                        }
                      },
                      "pod": {
                        "affinity": {
                          "nodeAffinity": {
                            "preferredDuringSchedulingIgnoredDuringExecution": null,
                            "requiredDuringSchedulingIgnoredDuringExecution": {
                              "nodeSelectorTerms": null
                            }
                          },
                          "podAffinity": {
                            "preferredDuringSchedulingIgnoredDuringExecution": null,
                            "requiredDuringSchedulingIgnoredDuringExecution": null
                          },
                          "podAntiAffinity": {
                            "preferredDuringSchedulingIgnoredDuringExecution": null,
                            "requiredDuringSchedulingIgnoredDuringExecution": null
                          }
                        },
                        "enableServiceLinks": null,
                        "hostAliases": null,
                        "imagePullSecrets": null,
                        "metadata": {
                          "annotations": null,
                          "labels": null
                        },
                        "priorityClassName": null,
                        "schedulerName": null,
                        "securityContext": {
                          "fsGroup": null,
                          "fsGroupChangePolicy": null,
                          "runAsGroup": null,
                          "runAsNonRoot": null,
                          "runAsUser": null,
                          "seLinuxOptions": {
                            "level": null,
                            "role": null,
                            "type": null,
                            "user": null
                          },
                          "seccompProfile": {
                            "localhostProfile": null,
                            "type": null
                          },
                          "supplementalGroups": null,
                          "sysctls": null,
                          "windowsOptions": {
                            "gmsaCredentialSpec": null,
                            "gmsaCredentialSpecName": null,
                            "hostProcess": null,
                            "runAsUserName": null
                          }
                        },
                        "terminationGracePeriodSeconds": null,
                        "tmpDirSizeLimit": null,
                        "tolerations": null,
                        "topologySpreadConstraints": null
                      },
                      "podDisruptionBudget": {
                        "maxUnavailable": null,
                        "metadata": {
                          "annotations": null,
                          "labels": null
                        }
                      },
                      "serviceAccount": {
                        "metadata": {
                          "annotations": null,
                          "labels": null
                        }
                      },
                      "tlsSidecarContainer": {
                        "env": null,
                        "securityContext": {
                          "allowPrivilegeEscalation": null,
                          "capabilities": {
                            "add": null,
                            "drop": null
                          },
                          "privileged": null,
                          "procMount": null,
                          "readOnlyRootFilesystem": null,
                          "runAsGroup": null,
                          "runAsNonRoot": null,
                          "runAsUser": null,
                          "seLinuxOptions": {
                            "level": null,
                            "role": null,
                            "type": null,
                            "user": null
                          },
                          "seccompProfile": {
                            "localhostProfile": null,
                            "type": null
                          },
                          "windowsOptions": {
                            "gmsaCredentialSpec": null,
                            "gmsaCredentialSpecName": null,
                            "hostProcess": null,
                            "runAsUserName": null
                          }
                        }
                      }
                    },
                    "tlsSidecar": {
                      "image": null,
                      "livenessProbe": {
                        "failureThreshold": null,
                        "initialDelaySeconds": null,
                        "periodSeconds": null,
                        "successThreshold": null,
                        "timeoutSeconds": null
                      },
                      "logLevel": null,
                      "readinessProbe": {
                        "failureThreshold": null,
                        "initialDelaySeconds": null,
                        "periodSeconds": null,
                        "successThreshold": null,
                        "timeoutSeconds": null
                      },
                      "resources": {
                        "limits": null,
                        "requests": null
                      }
                    }
                  },
                  "entityOperator": {
                    "template": {
                      "deployment": {
                        "metadata": {
                          "annotations": null,
                          "labels": null
                        }
                      },
                      "entityOperatorRole": {
                        "metadata": {
                          "annotations": null,
                          "labels": null
                        }
                      },
                      "pod": {
                        "affinity": {
                          "nodeAffinity": {
                            "preferredDuringSchedulingIgnoredDuringExecution": null,
                            "requiredDuringSchedulingIgnoredDuringExecution": {
                              "nodeSelectorTerms": null
                            }
                          },
                          "podAffinity": {
                            "preferredDuringSchedulingIgnoredDuringExecution": null,
                            "requiredDuringSchedulingIgnoredDuringExecution": null
                          },
                          "podAntiAffinity": {
                            "preferredDuringSchedulingIgnoredDuringExecution": null,
                            "requiredDuringSchedulingIgnoredDuringExecution": null
                          }
                        },
                        "enableServiceLinks": null,
                        "hostAliases": null,
                        "imagePullSecrets": null,
                        "metadata": {
                          "annotations": null,
                          "labels": null
                        },
                        "priorityClassName": null,
                        "schedulerName": null,
                        "securityContext": {
                          "fsGroup": null,
                          "fsGroupChangePolicy": null,
                          "runAsGroup": null,
                          "runAsNonRoot": null,
                          "runAsUser": null,
                          "seLinuxOptions": {
                            "level": null,
                            "role": null,
                            "type": null,
                            "user": null
                          },
                          "seccompProfile": {
                            "localhostProfile": null,
                            "type": null
                          },
                          "supplementalGroups": null,
                          "sysctls": null,
                          "windowsOptions": {
                            "gmsaCredentialSpec": null,
                            "gmsaCredentialSpecName": null,
                            "hostProcess": null,
                            "runAsUserName": null
                          }
                        },
                        "terminationGracePeriodSeconds": null,
                        "tmpDirSizeLimit": null,
                        "tolerations": null,
                        "topologySpreadConstraints": null
                      },
                      "serviceAccount": {
                        "metadata": {
                          "annotations": null,
                          "labels": null
                        }
                      },
                      "tlsSidecarContainer": {
                        "env": null,
                        "securityContext": {
                          "allowPrivilegeEscalation": null,
                          "capabilities": {
                            "add": null,
                            "drop": null
                          },
                          "privileged": null,
                          "procMount": null,
                          "readOnlyRootFilesystem": null,
                          "runAsGroup": null,
                          "runAsNonRoot": null,
                          "runAsUser": null,
                          "seLinuxOptions": {
                            "level": null,
                            "role": null,
                            "type": null,
                            "user": null
                          },
                          "seccompProfile": {
                            "localhostProfile": null,
                            "type": null
                          },
                          "windowsOptions": {
                            "gmsaCredentialSpec": null,
                            "gmsaCredentialSpecName": null,
                            "hostProcess": null,
                            "runAsUserName": null
                          }
                        }
                      },
                      "topicOperatorContainer": {
                        "env": null,
                        "securityContext": {
                          "allowPrivilegeEscalation": null,
                          "capabilities": {
                            "add": null,
                            "drop": null
                          },
                          "privileged": null,
                          "procMount": null,
                          "readOnlyRootFilesystem": null,
                          "runAsGroup": null,
                          "runAsNonRoot": null,
                          "runAsUser": null,
                          "seLinuxOptions": {
                            "level": null,
                            "role": null,
                            "type": null,
                            "user": null
                          },
                          "seccompProfile": {
                            "localhostProfile": null,
                            "type": null
                          },
                          "windowsOptions": {
                            "gmsaCredentialSpec": null,
                            "gmsaCredentialSpecName": null,
                            "hostProcess": null,
                            "runAsUserName": null
                          }
                        }
                      },
                      "topicOperatorRoleBinding": {
                        "metadata": {
                          "annotations": null,
                          "labels": null
                        }
                      },
                      "userOperatorContainer": {
                        "env": null,
                        "securityContext": {
                          "allowPrivilegeEscalation": null,
                          "capabilities": {
                            "add": null,
                            "drop": null
                          },
                          "privileged": null,
                          "procMount": null,
                          "readOnlyRootFilesystem": null,
                          "runAsGroup": null,
                          "runAsNonRoot": null,
                          "runAsUser": null,
                          "seLinuxOptions": {
                            "level": null,
                            "role": null,
                            "type": null,
                            "user": null
                          },
                          "seccompProfile": {
                            "localhostProfile": null,
                            "type": null
                          },
                          "windowsOptions": {
                            "gmsaCredentialSpec": null,
                            "gmsaCredentialSpecName": null,
                            "hostProcess": null,
                            "runAsUserName": null
                          }
                        }
                      },
                      "userOperatorRoleBinding": {
                        "metadata": {
                          "annotations": null,
                          "labels": null
                        }
                      }
                    },
                    "tlsSidecar": {
                      "image": null,
                      "livenessProbe": {
                        "failureThreshold": null,
                        "initialDelaySeconds": null,
                        "periodSeconds": null,
                        "successThreshold": null,
                        "timeoutSeconds": null
                      },
                      "logLevel": null,
                      "readinessProbe": {
                        "failureThreshold": null,
                        "initialDelaySeconds": null,
                        "periodSeconds": null,
                        "successThreshold": null,
                        "timeoutSeconds": null
                      },
                      "resources": {
                        "limits": null,
                        "requests": null
                      }
                    },
                    "topicOperator": {
                      "image": null,
                      "jvmOptions": {
                        "-XX": null,
                        "-Xms": null,
                        "-Xmx": null,
                        "gcLoggingEnabled": null,
                        "javaSystemProperties": null
                      },
                      "livenessProbe": {
                        "failureThreshold": null,
                        "initialDelaySeconds": null,
                        "periodSeconds": null,
                        "successThreshold": null,
                        "timeoutSeconds": null
                      },
                      "logging": {
                        "loggers": null,
                        "type": null,
                        "valueFrom": {
                          "configMapKeyRef": {
                            "key": null,
                            "name": null,
                            "optional": null
                          }
                        }
                      },
                      "readinessProbe": {
                        "failureThreshold": null,
                        "initialDelaySeconds": null,
                        "periodSeconds": null,
                        "successThreshold": null,
                        "timeoutSeconds": null
                      },
                      "reconciliationIntervalSeconds": null,
                      "resources": {
                        "limits": null,
                        "requests": null
                      },
                      "startupProbe": {
                        "failureThreshold": null,
                        "initialDelaySeconds": null,
                        "periodSeconds": null,
                        "successThreshold": null,
                        "timeoutSeconds": null
                      },
                      "topicMetadataMaxAttempts": null,
                      "watchedNamespace": null,
                      "zookeeperSessionTimeoutSeconds": null
                    },
                    "userOperator": {
                      "image": null,
                      "jvmOptions": {
                        "-XX": null,
                        "-Xms": null,
                        "-Xmx": null,
                        "gcLoggingEnabled": null,
                        "javaSystemProperties": null
                      },
                      "livenessProbe": {
                        "failureThreshold": null,
                        "initialDelaySeconds": null,
                        "periodSeconds": null,
                        "successThreshold": null,
                        "timeoutSeconds": null
                      },
                      "logging": {
                        "loggers": null,
                        "type": null,
                        "valueFrom": {
                          "configMapKeyRef": {
                            "key": null,
                            "name": null,
                            "optional": null
                          }
                        }
                      },
                      "readinessProbe": {
                        "failureThreshold": null,
                        "initialDelaySeconds": null,
                        "periodSeconds": null,
                        "successThreshold": null,
                        "timeoutSeconds": null
                      },
                      "reconciliationIntervalSeconds": null,
                      "resources": {
                        "limits": null,
                        "requests": null
                      },
                      "secretPrefix": null,
                      "watchedNamespace": null,
                      "zookeeperSessionTimeoutSeconds": null
                    }
                  },
                  "jmxTrans": {
                    "image": null,
                    "kafkaQueries": null,
                    "logLevel": null,
                    "outputDefinitions": null,
                    "resources": {
                      "limits": null,
                      "requests": null
                    },
                    "template": {
                      "container": {
                        "env": null,
                        "securityContext": {
                          "allowPrivilegeEscalation": null,
                          "capabilities": {
                            "add": null,
                            "drop": null
                          },
                          "privileged": null,
                          "procMount": null,
                          "readOnlyRootFilesystem": null,
                          "runAsGroup": null,
                          "runAsNonRoot": null,
                          "runAsUser": null,
                          "seLinuxOptions": {
                            "level": null,
                            "role": null,
                            "type": null,
                            "user": null
                          },
                          "seccompProfile": {
                            "localhostProfile": null,
                            "type": null
                          },
                          "windowsOptions": {
                            "gmsaCredentialSpec": null,
                            "gmsaCredentialSpecName": null,
                            "hostProcess": null,
                            "runAsUserName": null
                          }
                        }
                      },
                      "deployment": {
                        "metadata": {
                          "annotations": null,
                          "labels": null
                        }
                      },
                      "pod": {
                        "affinity": {
                          "nodeAffinity": {
                            "preferredDuringSchedulingIgnoredDuringExecution": null,
                            "requiredDuringSchedulingIgnoredDuringExecution": {
                              "nodeSelectorTerms": null
                            }
                          },
                          "podAffinity": {
                            "preferredDuringSchedulingIgnoredDuringExecution": null,
                            "requiredDuringSchedulingIgnoredDuringExecution": null
                          },
                          "podAntiAffinity": {
                            "preferredDuringSchedulingIgnoredDuringExecution": null,
                            "requiredDuringSchedulingIgnoredDuringExecution": null
                          }
                        },
                        "enableServiceLinks": null,
                        "hostAliases": null,
                        "imagePullSecrets": null,
                        "metadata": {
                          "annotations": null,
                          "labels": null
                        },
                        "priorityClassName": null,
                        "schedulerName": null,
                        "securityContext": {
                          "fsGroup": null,
                          "fsGroupChangePolicy": null,
                          "runAsGroup": null,
                          "runAsNonRoot": null,
                          "runAsUser": null,
                          "seLinuxOptions": {
                            "level": null,
                            "role": null,
                            "type": null,
                            "user": null
                          },
                          "seccompProfile": {
                            "localhostProfile": null,
                            "type": null
                          },
                          "supplementalGroups": null,
                          "sysctls": null,
                          "windowsOptions": {
                            "gmsaCredentialSpec": null,
                            "gmsaCredentialSpecName": null,
                            "hostProcess": null,
                            "runAsUserName": null
                          }
                        },
                        "terminationGracePeriodSeconds": null,
                        "tmpDirSizeLimit": null,
                        "tolerations": null,
                        "topologySpreadConstraints": null
                      },
                      "serviceAccount": {
                        "metadata": {
                          "annotations": null,
                          "labels": null
                        }
                      }
                    }
                  },
                  "kafka": {
                    "authorization": {
                      "allowOnError": null,
                      "authorizerClass": null,
                      "clientId": null,
                      "connectTimeoutSeconds": null,
                      "delegateToKafkaAcls": null,
                      "disableTlsHostnameVerification": null,
                      "enableMetrics": null,
                      "expireAfterMs": null,
                      "grantsRefreshPeriodSeconds": null,
                      "grantsRefreshPoolSize": null,
                      "initialCacheCapacity": null,
                      "maximumCacheSize": null,
                      "readTimeoutSeconds": null,
                      "superUsers": null,
                      "supportsAdminApi": null,
                      "tlsTrustedCertificates": null,
                      "tokenEndpointUri": null,
                      "type": null,
                      "url": null
                    },
                    "brokerRackInitImage": null,
                    "config": {
                      "default.replication.factor": 1,
                      "inter.broker.protocol.version": "3.3",
                      "min.insync.replicas": 1,
                      "offsets.topic.replication.factor": 1,
                      "transaction.state.log.min.isr": 1,
                      "transaction.state.log.replication.factor": 1
                    },
                    "image": null,
                    "jmxOptions": {
                      "authentication": {
                        "type": null
                      }
                    },
                    "jvmOptions": {
                      "-XX": null,
                      "-Xms": null,
                      "-Xmx": null,
                      "gcLoggingEnabled": null,
                      "javaSystemProperties": null
                    },
                    "listeners": [
                      {
                        "authentication": {
                          "accessTokenIsJwt": null,
                          "checkAccessTokenType": null,
                          "checkAudience": null,
                          "checkIssuer": null,
                          "clientAudience": null,
                          "clientId": null,
                          "clientScope": null,
                          "clientSecret": {
                            "key": null,
                            "secretName": null
                          },
                          "connectTimeoutSeconds": null,
                          "customClaimCheck": null,
                          "disableTlsHostnameVerification": null,
                          "enableECDSA": null,
                          "enableMetrics": null,
                          "enableOauthBearer": null,
                          "enablePlain": null,
                          "failFast": null,
                          "fallbackUserNameClaim": null,
                          "fallbackUserNamePrefix": null,
                          "groupsClaim": null,
                          "groupsClaimDelimiter": null,
                          "introspectionEndpointUri": null,
                          "jwksEndpointUri": null,
                          "jwksExpirySeconds": null,
                          "jwksIgnoreKeyUse": null,
                          "jwksMinRefreshPauseSeconds": null,
                          "jwksRefreshSeconds": null,
                          "listenerConfig": null,
                          "maxSecondsWithoutReauthentication": null,
                          "readTimeoutSeconds": null,
                          "sasl": null,
                          "secrets": null,
                          "tlsTrustedCertificates": null,
                          "tokenEndpointUri": null,
                          "type": null,
                          "userInfoEndpointUri": null,
                          "userNameClaim": null,
                          "validIssuerUri": null,
                          "validTokenType": null
                        },
                        "configuration": {
                          "bootstrap": {
                            "alternativeNames": null,
                            "annotations": null,
                            "host": null,
                            "labels": null,
                            "loadBalancerIP": null,
                            "nodePort": null
                          },
                          "brokerCertChainAndKey": {
                            "certificate": null,
                            "key": null,
                            "secretName": null
                          },
                          "brokers": null,
                          "class": null,
                          "createBootstrapService": null,
                          "externalTrafficPolicy": null,
                          "finalizers": null,
                          "ipFamilies": null,
                          "ipFamilyPolicy": null,
                          "loadBalancerSourceRanges": null,
                          "maxConnectionCreationRate": null,
                          "maxConnections": null,
                          "preferredNodePortAddressType": null,
                          "useServiceDnsDomain": null
                        },
                        "name": "plain",
                        "networkPolicyPeers": null,
                        "port": 9092,
                        "tls": false,
                        "type": "internal"
                      },
                      {
                        "authentication": {
                          "accessTokenIsJwt": null,
                          "checkAccessTokenType": null,
                          "checkAudience": null,
                          "checkIssuer": null,
                          "clientAudience": null,
                          "clientId": null,
                          "clientScope": null,
                          "clientSecret": {
                            "key": null,
                            "secretName": null
                          },
                          "connectTimeoutSeconds": null,
                          "customClaimCheck": null,
                          "disableTlsHostnameVerification": null,
                          "enableECDSA": null,
                          "enableMetrics": null,
                          "enableOauthBearer": null,
                          "enablePlain": null,
                          "failFast": null,
                          "fallbackUserNameClaim": null,
                          "fallbackUserNamePrefix": null,
                          "groupsClaim": null,
                          "groupsClaimDelimiter": null,
                          "introspectionEndpointUri": null,
                          "jwksEndpointUri": null,
                          "jwksExpirySeconds": null,
                          "jwksIgnoreKeyUse": null,
                          "jwksMinRefreshPauseSeconds": null,
                          "jwksRefreshSeconds": null,
                          "listenerConfig": null,
                          "maxSecondsWithoutReauthentication": null,
                          "readTimeoutSeconds": null,
                          "sasl": null,
                          "secrets": null,
                          "tlsTrustedCertificates": null,
                          "tokenEndpointUri": null,
                          "type": null,
                          "userInfoEndpointUri": null,
                          "userNameClaim": null,
                          "validIssuerUri": null,
                          "validTokenType": null
                        },
                        "configuration": {
                          "bootstrap": {
                            "alternativeNames": null,
                            "annotations": null,
                            "host": null,
                            "labels": null,
                            "loadBalancerIP": null,
                            "nodePort": null
                          },
                          "brokerCertChainAndKey": {
                            "certificate": null,
                            "key": null,
                            "secretName": null
                          },
                          "brokers": null,
                          "class": null,
                          "createBootstrapService": null,
                          "externalTrafficPolicy": null,
                          "finalizers": null,
                          "ipFamilies": null,
                          "ipFamilyPolicy": null,
                          "loadBalancerSourceRanges": null,
                          "maxConnectionCreationRate": null,
                          "maxConnections": null,
                          "preferredNodePortAddressType": null,
                          "useServiceDnsDomain": null
                        },
                        "name": "tls",
                        "networkPolicyPeers": null,
                        "port": 9093,
                        "tls": true,
                        "type": "internal"
                      }
                    ],
                    "livenessProbe": {
                      "failureThreshold": null,
                      "initialDelaySeconds": null,
                      "periodSeconds": null,
                      "successThreshold": null,
                      "timeoutSeconds": null
                    },
                    "logging": {
                      "loggers": null,
                      "type": null,
                      "valueFrom": {
                        "configMapKeyRef": {
                          "key": null,
                          "name": null,
                          "optional": null
                        }
                      }
                    },
                    "metricsConfig": {
                      "type": null,
                      "valueFrom": {
                        "configMapKeyRef": {
                          "key": null,
                          "name": null,
                          "optional": null
                        }
                      }
                    },
                    "rack": {
                      "topologyKey": null
                    },
                    "readinessProbe": {
                      "failureThreshold": null,
                      "initialDelaySeconds": null,
                      "periodSeconds": null,
                      "successThreshold": null,
                      "timeoutSeconds": null
                    },
                    "replicas": 1,
                    "resources": {
                      "limits": null,
                      "requests": null
                    },
                    "storage": {
                      "class": null,
                      "deleteClaim": null,
                      "id": null,
                      "overrides": null,
                      "selector": null,
                      "size": null,
                      "sizeLimit": null,
                      "type": "jbod",
                      "volumes": [
                        {
                          "class": null,
                          "deleteClaim": false,
                          "id": 0,
                          "overrides": null,
                          "selector": null,
                          "size": "5Gi",
                          "sizeLimit": null,
                          "type": "persistent-claim"
                        }
                      ]
                    },
                    "template": {
                      "bootstrapService": {
                        "ipFamilies": null,
                        "ipFamilyPolicy": null,
                        "metadata": {
                          "annotations": null,
                          "labels": null
                        }
                      },
                      "brokersService": {
                        "ipFamilies": null,
                        "ipFamilyPolicy": null,
                        "metadata": {
                          "annotations": null,
                          "labels": null
                        }
                      },
                      "clusterCaCert": {
                        "metadata": {
                          "annotations": null,
                          "labels": null
                        }
                      },
                      "clusterRoleBinding": {
                        "metadata": {
                          "annotations": null,
                          "labels": null
                        }
                      },
                      "externalBootstrapIngress": {
                        "metadata": {
                          "annotations": null,
                          "labels": null
                        }
                      },
                      "externalBootstrapRoute": {
                        "metadata": {
                          "annotations": null,
                          "labels": null
                        }
                      },
                      "externalBootstrapService": {
                        "metadata": {
                          "annotations": null,
                          "labels": null
                        }
                      },
                      "initContainer": {
                        "env": null,
                        "securityContext": {
                          "allowPrivilegeEscalation": null,
                          "capabilities": {
                            "add": null,
                            "drop": null
                          },
                          "privileged": null,
                          "procMount": null,
                          "readOnlyRootFilesystem": null,
                          "runAsGroup": null,
                          "runAsNonRoot": null,
                          "runAsUser": null,
                          "seLinuxOptions": {
                            "level": null,
                            "role": null,
                            "type": null,
                            "user": null
                          },
                          "seccompProfile": {
                            "localhostProfile": null,
                            "type": null
                          },
                          "windowsOptions": {
                            "gmsaCredentialSpec": null,
                            "gmsaCredentialSpecName": null,
                            "hostProcess": null,
                            "runAsUserName": null
                          }
                        }
                      },
                      "jmxSecret": {
                        "metadata": {
                          "annotations": null,
                          "labels": null
                        }
                      },
                      "kafkaContainer": {
                        "env": null,
                        "securityContext": {
                          "allowPrivilegeEscalation": null,
                          "capabilities": {
                            "add": null,
                            "drop": null
                          },
                          "privileged": null,
                          "procMount": null,
                          "readOnlyRootFilesystem": null,
                          "runAsGroup": null,
                          "runAsNonRoot": null,
                          "runAsUser": null,
                          "seLinuxOptions": {
                            "level": null,
                            "role": null,
                            "type": null,
                            "user": null
                          },
                          "seccompProfile": {
                            "localhostProfile": null,
                            "type": null
                          },
                          "windowsOptions": {
                            "gmsaCredentialSpec": null,
                            "gmsaCredentialSpecName": null,
                            "hostProcess": null,
                            "runAsUserName": null
                          }
                        }
                      },
                      "perPodIngress": {
                        "metadata": {
                          "annotations": null,
                          "labels": null
                        }
                      },
                      "perPodRoute": {
                        "metadata": {
                          "annotations": null,
                          "labels": null
                        }
                      },
                      "perPodService": {
                        "metadata": {
                          "annotations": null,
                          "labels": null
                        }
                      },
                      "persistentVolumeClaim": {
                        "metadata": {
                          "annotations": null,
                          "labels": null
                        }
                      },
                      "pod": {
                        "affinity": {
                          "nodeAffinity": {
                            "preferredDuringSchedulingIgnoredDuringExecution": null,
                            "requiredDuringSchedulingIgnoredDuringExecution": {
                              "nodeSelectorTerms": null
                            }
                          },
                          "podAffinity": {
                            "preferredDuringSchedulingIgnoredDuringExecution": null,
                            "requiredDuringSchedulingIgnoredDuringExecution": null
                          },
                          "podAntiAffinity": {
                            "preferredDuringSchedulingIgnoredDuringExecution": null,
                            "requiredDuringSchedulingIgnoredDuringExecution": null
                          }
                        },
                        "enableServiceLinks": null,
                        "hostAliases": null,
                        "imagePullSecrets": null,
                        "metadata": {
                          "annotations": null,
                          "labels": null
                        },
                        "priorityClassName": null,
                        "schedulerName": null,
                        "securityContext": {
                          "fsGroup": null,
                          "fsGroupChangePolicy": null,
                          "runAsGroup": null,
                          "runAsNonRoot": null,
                          "runAsUser": null,
                          "seLinuxOptions": {
                            "level": null,
                            "role": null,
                            "type": null,
                            "user": null
                          },
                          "seccompProfile": {
                            "localhostProfile": null,
                            "type": null
                          },
                          "supplementalGroups": null,
                          "sysctls": null,
                          "windowsOptions": {
                            "gmsaCredentialSpec": null,
                            "gmsaCredentialSpecName": null,
                            "hostProcess": null,
                            "runAsUserName": null
                          }
                        },
                        "terminationGracePeriodSeconds": null,
                        "tmpDirSizeLimit": null,
                        "tolerations": null,
                        "topologySpreadConstraints": null
                      },
                      "podDisruptionBudget": {
                        "maxUnavailable": null,
                        "metadata": {
                          "annotations": null,
                          "labels": null
                        }
                      },
                      "podSet": {
                        "metadata": {
                          "annotations": null,
                          "labels": null
                        }
                      },
                      "serviceAccount": {
                        "metadata": {
                          "annotations": null,
                          "labels": null
                        }
                      },
                      "statefulset": {
                        "metadata": {
                          "annotations": null,
                          "labels": null
                        },
                        "podManagementPolicy": null
                      }
                    },
                    "version": "3.3.2"
                  },
                  "kafkaExporter": {
                    "enableSaramaLogging": null,
                    "groupRegex": null,
                    "image": null,
                    "livenessProbe": {
                      "failureThreshold": null,
                      "initialDelaySeconds": null,
                      "periodSeconds": null,
                      "successThreshold": null,
                      "timeoutSeconds": null
                    },
                    "logging": null,
                    "readinessProbe": {
                      "failureThreshold": null,
                      "initialDelaySeconds": null,
                      "periodSeconds": null,
                      "successThreshold": null,
                      "timeoutSeconds": null
                    },
                    "resources": {
                      "limits": null,
                      "requests": null
                    },
                    "template": {
                      "container": {
                        "env": null,
                        "securityContext": {
                          "allowPrivilegeEscalation": null,
                          "capabilities": {
                            "add": null,
                            "drop": null
                          },
                          "privileged": null,
                          "procMount": null,
                          "readOnlyRootFilesystem": null,
                          "runAsGroup": null,
                          "runAsNonRoot": null,
                          "runAsUser": null,
                          "seLinuxOptions": {
                            "level": null,
                            "role": null,
                            "type": null,
                            "user": null
                          },
                          "seccompProfile": {
                            "localhostProfile": null,
                            "type": null
                          },
                          "windowsOptions": {
                            "gmsaCredentialSpec": null,
                            "gmsaCredentialSpecName": null,
                            "hostProcess": null,
                            "runAsUserName": null
                          }
                        }
                      },
                      "deployment": {
                        "deploymentStrategy": null,
                        "metadata": {
                          "annotations": null,
                          "labels": null
                        }
                      },
                      "pod": {
                        "affinity": {
                          "nodeAffinity": {
                            "preferredDuringSchedulingIgnoredDuringExecution": null,
                            "requiredDuringSchedulingIgnoredDuringExecution": {
                              "nodeSelectorTerms": null
                            }
                          },
                          "podAffinity": {
                            "preferredDuringSchedulingIgnoredDuringExecution": null,
                            "requiredDuringSchedulingIgnoredDuringExecution": null
                          },
                          "podAntiAffinity": {
                            "preferredDuringSchedulingIgnoredDuringExecution": null,
                            "requiredDuringSchedulingIgnoredDuringExecution": null
                          }
                        },
                        "enableServiceLinks": null,
                        "hostAliases": null,
                        "imagePullSecrets": null,
                        "metadata": {
                          "annotations": null,
                          "labels": null
                        },
                        "priorityClassName": null,
                        "schedulerName": null,
                        "securityContext": {
                          "fsGroup": null,
                          "fsGroupChangePolicy": null,
                          "runAsGroup": null,
                          "runAsNonRoot": null,
                          "runAsUser": null,
                          "seLinuxOptions": {
                            "level": null,
                            "role": null,
                            "type": null,
                            "user": null
                          },
                          "seccompProfile": {
                            "localhostProfile": null,
                            "type": null
                          },
                          "supplementalGroups": null,
                          "sysctls": null,
                          "windowsOptions": {
                            "gmsaCredentialSpec": null,
                            "gmsaCredentialSpecName": null,
                            "hostProcess": null,
                            "runAsUserName": null
                          }
                        },
                        "terminationGracePeriodSeconds": null,
                        "tmpDirSizeLimit": null,
                        "tolerations": null,
                        "topologySpreadConstraints": null
                      },
                      "service": {
                        "metadata": {
                          "annotations": null,
                          "labels": null
                        }
                      },
                      "serviceAccount": {
                        "metadata": {
                          "annotations": null,
                          "labels": null
                        }
                      }
                    },
                    "topicRegex": null
                  },
                  "maintenanceTimeWindows": null,
                  "zookeeper": {
                    "config": null,
                    "image": null,
                    "jmxOptions": {
                      "authentication": {
                        "type": null
                      }
                    },
                    "jvmOptions": {
                      "-XX": null,
                      "-Xms": null,
                      "-Xmx": null,
                      "gcLoggingEnabled": null,
                      "javaSystemProperties": null
                    },
                    "livenessProbe": {
                      "failureThreshold": null,
                      "initialDelaySeconds": null,
                      "periodSeconds": null,
                      "successThreshold": null,
                      "timeoutSeconds": null
                    },
                    "logging": {
                      "loggers": null,
                      "type": null,
                      "valueFrom": {
                        "configMapKeyRef": {
                          "key": null,
                          "name": null,
                          "optional": null
                        }
                      }
                    },
                    "metricsConfig": {
                      "type": null,
                      "valueFrom": {
                        "configMapKeyRef": {
                          "key": null,
                          "name": null,
                          "optional": null
                        }
                      }
                    },
                    "readinessProbe": {
                      "failureThreshold": null,
                      "initialDelaySeconds": null,
                      "periodSeconds": null,
                      "successThreshold": null,
                      "timeoutSeconds": null
                    },
                    "replicas": 1,
                    "resources": {
                      "limits": null,
                      "requests": null
                    },
                    "storage": {
                      "class": null,
                      "deleteClaim": false,
                      "id": null,
                      "overrides": null,
                      "selector": null,
                      "size": "5Gi",
                      "sizeLimit": null,
                      "type": "persistent-claim"
                    },
                    "template": {
                      "clientService": {
                        "ipFamilies": null,
                        "ipFamilyPolicy": null,
                        "metadata": {
                          "annotations": null,
                          "labels": null
                        }
                      },
                      "jmxSecret": {
                        "metadata": {
                          "annotations": null,
                          "labels": null
                        }
                      },
                      "nodesService": {
                        "ipFamilies": null,
                        "ipFamilyPolicy": null,
                        "metadata": {
                          "annotations": null,
                          "labels": null
                        }
                      },
                      "persistentVolumeClaim": {
                        "metadata": {
                          "annotations": null,
                          "labels": null
                        }
                      },
                      "pod": {
                        "affinity": {
                          "nodeAffinity": {
                            "preferredDuringSchedulingIgnoredDuringExecution": null,
                            "requiredDuringSchedulingIgnoredDuringExecution": {
                              "nodeSelectorTerms": null
                            }
                          },
                          "podAffinity": {
                            "preferredDuringSchedulingIgnoredDuringExecution": null,
                            "requiredDuringSchedulingIgnoredDuringExecution": null
                          },
                          "podAntiAffinity": {
                            "preferredDuringSchedulingIgnoredDuringExecution": null,
                            "requiredDuringSchedulingIgnoredDuringExecution": null
                          }
                        },
                        "enableServiceLinks": null,
                        "hostAliases": null,
                        "imagePullSecrets": null,
                        "metadata": {
                          "annotations": null,
                          "labels": null
                        },
                        "priorityClassName": null,
                        "schedulerName": null,
                        "securityContext": {
                          "fsGroup": null,
                          "fsGroupChangePolicy": null,
                          "runAsGroup": null,
                          "runAsNonRoot": null,
                          "runAsUser": null,
                          "seLinuxOptions": {
                            "level": null,
                            "role": null,
                            "type": null,
                            "user": null
                          },
                          "seccompProfile": {
                            "localhostProfile": null,
                            "type": null
                          },
                          "supplementalGroups": null,
                          "sysctls": null,
                          "windowsOptions": {
                            "gmsaCredentialSpec": null,
                            "gmsaCredentialSpecName": null,
                            "hostProcess": null,
                            "runAsUserName": null
                          }
                        },
                        "terminationGracePeriodSeconds": null,
                        "tmpDirSizeLimit": null,
                        "tolerations": null,
                        "topologySpreadConstraints": null
                      },
                      "podDisruptionBudget": {
                        "maxUnavailable": null,
                        "metadata": {
                          "annotations": null,
                          "labels": null
                        }
                      },
                      "podSet": {
                        "metadata": {
                          "annotations": null,
                          "labels": null
                        }
                      },
                      "serviceAccount": {
                        "metadata": {
                          "annotations": null,
                          "labels": null
                        }
                      },
                      "statefulset": {
                        "metadata": {
                          "annotations": null,
                          "labels": null
                        },
                        "podManagementPolicy": null
                      },
                      "zookeeperContainer": {
                        "env": null,
                        "securityContext": {
                          "allowPrivilegeEscalation": null,
                          "capabilities": {
                            "add": null,
                            "drop": null
                          },
                          "privileged": null,
                          "procMount": null,
                          "readOnlyRootFilesystem": null,
                          "runAsGroup": null,
                          "runAsNonRoot": null,
                          "runAsUser": null,
                          "seLinuxOptions": {
                            "level": null,
                            "role": null,
                            "type": null,
                            "user": null
                          },
                          "seccompProfile": {
                            "localhostProfile": null,
                            "type": null
                          },
                          "windowsOptions": {
                            "gmsaCredentialSpec": null,
                            "gmsaCredentialSpecName": null,
                            "hostProcess": null,
                            "runAsUserName": null
                          }
                        }
                      }
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "clientsCa": [
                        "object",
                        {
                          "certificateExpirationPolicy": "string",
                          "generateCertificateAuthority": "bool",
                          "generateSecretOwnerReference": "bool",
                          "renewalDays": "number",
                          "validityDays": "number"
                        }
                      ],
                      "clusterCa": [
                        "object",
                        {
                          "certificateExpirationPolicy": "string",
                          "generateCertificateAuthority": "bool",
                          "generateSecretOwnerReference": "bool",
                          "renewalDays": "number",
                          "validityDays": "number"
                        }
                      ],
                      "cruiseControl": [
                        "object",
                        {
                          "brokerCapacity": [
                            "object",
                            {
                              "cpu": "string",
                              "cpuUtilization": "number",
                              "disk": "string",
                              "inboundNetwork": "string",
                              "outboundNetwork": "string",
                              "overrides": [
                                "list",
                                [
                                  "object",
                                  {
                                    "brokers": [
                                      "list",
                                      "number"
                                    ],
                                    "cpu": "string",
                                    "inboundNetwork": "string",
                                    "outboundNetwork": "string"
                                  }
                                ]
                              ]
                            }
                          ],
                          "config": "dynamic",
                          "image": "string",
                          "jvmOptions": [
                            "object",
                            {
                              "-XX": "dynamic",
                              "-Xms": "string",
                              "-Xmx": "string",
                              "gcLoggingEnabled": "bool",
                              "javaSystemProperties": [
                                "list",
                                [
                                  "object",
                                  {
                                    "name": "string",
                                    "value": "string"
                                  }
                                ]
                              ]
                            }
                          ],
                          "livenessProbe": [
                            "object",
                            {
                              "failureThreshold": "number",
                              "initialDelaySeconds": "number",
                              "periodSeconds": "number",
                              "successThreshold": "number",
                              "timeoutSeconds": "number"
                            }
                          ],
                          "logging": [
                            "object",
                            {
                              "loggers": "dynamic",
                              "type": "string",
                              "valueFrom": [
                                "object",
                                {
                                  "configMapKeyRef": [
                                    "object",
                                    {
                                      "key": "string",
                                      "name": "string",
                                      "optional": "bool"
                                    }
                                  ]
                                }
                              ]
                            }
                          ],
                          "metricsConfig": [
                            "object",
                            {
                              "type": "string",
                              "valueFrom": [
                                "object",
                                {
                                  "configMapKeyRef": [
                                    "object",
                                    {
                                      "key": "string",
                                      "name": "string",
                                      "optional": "bool"
                                    }
                                  ]
                                }
                              ]
                            }
                          ],
                          "readinessProbe": [
                            "object",
                            {
                              "failureThreshold": "number",
                              "initialDelaySeconds": "number",
                              "periodSeconds": "number",
                              "successThreshold": "number",
                              "timeoutSeconds": "number"
                            }
                          ],
                          "resources": [
                            "object",
                            {
                              "limits": "dynamic",
                              "requests": "dynamic"
                            }
                          ],
                          "template": [
                            "object",
                            {
                              "apiService": [
                                "object",
                                {
                                  "ipFamilies": [
                                    "list",
                                    "string"
                                  ],
                                  "ipFamilyPolicy": "string",
                                  "metadata": [
                                    "object",
                                    {
                                      "annotations": "dynamic",
                                      "labels": "dynamic"
                                    }
                                  ]
                                }
                              ],
                              "cruiseControlContainer": [
                                "object",
                                {
                                  "env": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "name": "string",
                                        "value": "string"
                                      }
                                    ]
                                  ],
                                  "securityContext": [
                                    "object",
                                    {
                                      "allowPrivilegeEscalation": "bool",
                                      "capabilities": [
                                        "object",
                                        {
                                          "add": [
                                            "list",
                                            "string"
                                          ],
                                          "drop": [
                                            "list",
                                            "string"
                                          ]
                                        }
                                      ],
                                      "privileged": "bool",
                                      "procMount": "string",
                                      "readOnlyRootFilesystem": "bool",
                                      "runAsGroup": "number",
                                      "runAsNonRoot": "bool",
                                      "runAsUser": "number",
                                      "seLinuxOptions": [
                                        "object",
                                        {
                                          "level": "string",
                                          "role": "string",
                                          "type": "string",
                                          "user": "string"
                                        }
                                      ],
                                      "seccompProfile": [
                                        "object",
                                        {
                                          "localhostProfile": "string",
                                          "type": "string"
                                        }
                                      ],
                                      "windowsOptions": [
                                        "object",
                                        {
                                          "gmsaCredentialSpec": "string",
                                          "gmsaCredentialSpecName": "string",
                                          "hostProcess": "bool",
                                          "runAsUserName": "string"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "deployment": [
                                "object",
                                {
                                  "metadata": [
                                    "object",
                                    {
                                      "annotations": "dynamic",
                                      "labels": "dynamic"
                                    }
                                  ]
                                }
                              ],
                              "pod": [
                                "object",
                                {
                                  "affinity": [
                                    "object",
                                    {
                                      "nodeAffinity": [
                                        "object",
                                        {
                                          "preferredDuringSchedulingIgnoredDuringExecution": [
                                            "list",
                                            [
                                              "object",
                                              {
                                                "preference": [
                                                  "object",
                                                  {
                                                    "matchExpressions": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "key": "string",
                                                          "operator": "string",
                                                          "values": [
                                                            "list",
                                                            "string"
                                                          ]
                                                        }
                                                      ]
                                                    ],
                                                    "matchFields": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "key": "string",
                                                          "operator": "string",
                                                          "values": [
                                                            "list",
                                                            "string"
                                                          ]
                                                        }
                                                      ]
                                                    ]
                                                  }
                                                ],
                                                "weight": "number"
                                              }
                                            ]
                                          ],
                                          "requiredDuringSchedulingIgnoredDuringExecution": [
                                            "object",
                                            {
                                              "nodeSelectorTerms": [
                                                "list",
                                                [
                                                  "object",
                                                  {
                                                    "matchExpressions": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "key": "string",
                                                          "operator": "string",
                                                          "values": [
                                                            "list",
                                                            "string"
                                                          ]
                                                        }
                                                      ]
                                                    ],
                                                    "matchFields": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "key": "string",
                                                          "operator": "string",
                                                          "values": [
                                                            "list",
                                                            "string"
                                                          ]
                                                        }
                                                      ]
                                                    ]
                                                  }
                                                ]
                                              ]
                                            }
                                          ]
                                        }
                                      ],
                                      "podAffinity": [
                                        "object",
                                        {
                                          "preferredDuringSchedulingIgnoredDuringExecution": [
                                            "tuple",
                                            [
                                              [
                                                "object",
                                                {
                                                  "podAffinityTerm": [
                                                    "object",
                                                    {
                                                      "labelSelector": [
                                                        "object",
                                                        {
                                                          "matchExpressions": [
                                                            "list",
                                                            [
                                                              "object",
                                                              {
                                                                "key": "string",
                                                                "operator": "string",
                                                                "values": [
                                                                  "list",
                                                                  "string"
                                                                ]
                                                              }
                                                            ]
                                                          ],
                                                          "matchLabels": "dynamic"
                                                        }
                                                      ],
                                                      "namespaceSelector": [
                                                        "object",
                                                        {
                                                          "matchExpressions": [
                                                            "list",
                                                            [
                                                              "object",
                                                              {
                                                                "key": "string",
                                                                "operator": "string",
                                                                "values": [
                                                                  "list",
                                                                  "string"
                                                                ]
                                                              }
                                                            ]
                                                          ],
                                                          "matchLabels": "dynamic"
                                                        }
                                                      ],
                                                      "namespaces": [
                                                        "list",
                                                        "string"
                                                      ],
                                                      "topologyKey": "string"
                                                    }
                                                  ],
                                                  "weight": "number"
                                                }
                                              ]
                                            ]
                                          ],
                                          "requiredDuringSchedulingIgnoredDuringExecution": [
                                            "tuple",
                                            [
                                              [
                                                "object",
                                                {
                                                  "labelSelector": [
                                                    "object",
                                                    {
                                                      "matchExpressions": [
                                                        "list",
                                                        [
                                                          "object",
                                                          {
                                                            "key": "string",
                                                            "operator": "string",
                                                            "values": [
                                                              "list",
                                                              "string"
                                                            ]
                                                          }
                                                        ]
                                                      ],
                                                      "matchLabels": "dynamic"
                                                    }
                                                  ],
                                                  "namespaceSelector": [
                                                    "object",
                                                    {
                                                      "matchExpressions": [
                                                        "list",
                                                        [
                                                          "object",
                                                          {
                                                            "key": "string",
                                                            "operator": "string",
                                                            "values": [
                                                              "list",
                                                              "string"
                                                            ]
                                                          }
                                                        ]
                                                      ],
                                                      "matchLabels": "dynamic"
                                                    }
                                                  ],
                                                  "namespaces": [
                                                    "list",
                                                    "string"
                                                  ],
                                                  "topologyKey": "string"
                                                }
                                              ]
                                            ]
                                          ]
                                        }
                                      ],
                                      "podAntiAffinity": [
                                        "object",
                                        {
                                          "preferredDuringSchedulingIgnoredDuringExecution": [
                                            "tuple",
                                            [
                                              [
                                                "object",
                                                {
                                                  "podAffinityTerm": [
                                                    "object",
                                                    {
                                                      "labelSelector": [
                                                        "object",
                                                        {
                                                          "matchExpressions": [
                                                            "list",
                                                            [
                                                              "object",
                                                              {
                                                                "key": "string",
                                                                "operator": "string",
                                                                "values": [
                                                                  "list",
                                                                  "string"
                                                                ]
                                                              }
                                                            ]
                                                          ],
                                                          "matchLabels": "dynamic"
                                                        }
                                                      ],
                                                      "namespaceSelector": [
                                                        "object",
                                                        {
                                                          "matchExpressions": [
                                                            "list",
                                                            [
                                                              "object",
                                                              {
                                                                "key": "string",
                                                                "operator": "string",
                                                                "values": [
                                                                  "list",
                                                                  "string"
                                                                ]
                                                              }
                                                            ]
                                                          ],
                                                          "matchLabels": "dynamic"
                                                        }
                                                      ],
                                                      "namespaces": [
                                                        "list",
                                                        "string"
                                                      ],
                                                      "topologyKey": "string"
                                                    }
                                                  ],
                                                  "weight": "number"
                                                }
                                              ]
                                            ]
                                          ],
                                          "requiredDuringSchedulingIgnoredDuringExecution": [
                                            "tuple",
                                            [
                                              [
                                                "object",
                                                {
                                                  "labelSelector": [
                                                    "object",
                                                    {
                                                      "matchExpressions": [
                                                        "list",
                                                        [
                                                          "object",
                                                          {
                                                            "key": "string",
                                                            "operator": "string",
                                                            "values": [
                                                              "list",
                                                              "string"
                                                            ]
                                                          }
                                                        ]
                                                      ],
                                                      "matchLabels": "dynamic"
                                                    }
                                                  ],
                                                  "namespaceSelector": [
                                                    "object",
                                                    {
                                                      "matchExpressions": [
                                                        "list",
                                                        [
                                                          "object",
                                                          {
                                                            "key": "string",
                                                            "operator": "string",
                                                            "values": [
                                                              "list",
                                                              "string"
                                                            ]
                                                          }
                                                        ]
                                                      ],
                                                      "matchLabels": "dynamic"
                                                    }
                                                  ],
                                                  "namespaces": [
                                                    "list",
                                                    "string"
                                                  ],
                                                  "topologyKey": "string"
                                                }
                                              ]
                                            ]
                                          ]
                                        }
                                      ]
                                    }
                                  ],
                                  "enableServiceLinks": "bool",
                                  "hostAliases": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "hostnames": [
                                          "list",
                                          "string"
                                        ],
                                        "ip": "string"
                                      }
                                    ]
                                  ],
                                  "imagePullSecrets": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "name": "string"
                                      }
                                    ]
                                  ],
                                  "metadata": [
                                    "object",
                                    {
                                      "annotations": "dynamic",
                                      "labels": "dynamic"
                                    }
                                  ],
                                  "priorityClassName": "string",
                                  "schedulerName": "string",
                                  "securityContext": [
                                    "object",
                                    {
                                      "fsGroup": "number",
                                      "fsGroupChangePolicy": "string",
                                      "runAsGroup": "number",
                                      "runAsNonRoot": "bool",
                                      "runAsUser": "number",
                                      "seLinuxOptions": [
                                        "object",
                                        {
                                          "level": "string",
                                          "role": "string",
                                          "type": "string",
                                          "user": "string"
                                        }
                                      ],
                                      "seccompProfile": [
                                        "object",
                                        {
                                          "localhostProfile": "string",
                                          "type": "string"
                                        }
                                      ],
                                      "supplementalGroups": [
                                        "list",
                                        "number"
                                      ],
                                      "sysctls": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "name": "string",
                                            "value": "string"
                                          }
                                        ]
                                      ],
                                      "windowsOptions": [
                                        "object",
                                        {
                                          "gmsaCredentialSpec": "string",
                                          "gmsaCredentialSpecName": "string",
                                          "hostProcess": "bool",
                                          "runAsUserName": "string"
                                        }
                                      ]
                                    }
                                  ],
                                  "terminationGracePeriodSeconds": "number",
                                  "tmpDirSizeLimit": "string",
                                  "tolerations": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "effect": "string",
                                        "key": "string",
                                        "operator": "string",
                                        "tolerationSeconds": "number",
                                        "value": "string"
                                      }
                                    ]
                                  ],
                                  "topologySpreadConstraints": [
                                    "tuple",
                                    [
                                      [
                                        "object",
                                        {
                                          "labelSelector": [
                                            "object",
                                            {
                                              "matchExpressions": [
                                                "list",
                                                [
                                                  "object",
                                                  {
                                                    "key": "string",
                                                    "operator": "string",
                                                    "values": [
                                                      "list",
                                                      "string"
                                                    ]
                                                  }
                                                ]
                                              ],
                                              "matchLabels": "dynamic"
                                            }
                                          ],
                                          "matchLabelKeys": [
                                            "list",
                                            "string"
                                          ],
                                          "maxSkew": "number",
                                          "minDomains": "number",
                                          "nodeAffinityPolicy": "string",
                                          "nodeTaintsPolicy": "string",
                                          "topologyKey": "string",
                                          "whenUnsatisfiable": "string"
                                        }
                                      ]
                                    ]
                                  ]
                                }
                              ],
                              "podDisruptionBudget": [
                                "object",
                                {
                                  "maxUnavailable": "number",
                                  "metadata": [
                                    "object",
                                    {
                                      "annotations": "dynamic",
                                      "labels": "dynamic"
                                    }
                                  ]
                                }
                              ],
                              "serviceAccount": [
                                "object",
                                {
                                  "metadata": [
                                    "object",
                                    {
                                      "annotations": "dynamic",
                                      "labels": "dynamic"
                                    }
                                  ]
                                }
                              ],
                              "tlsSidecarContainer": [
                                "object",
                                {
                                  "env": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "name": "string",
                                        "value": "string"
                                      }
                                    ]
                                  ],
                                  "securityContext": [
                                    "object",
                                    {
                                      "allowPrivilegeEscalation": "bool",
                                      "capabilities": [
                                        "object",
                                        {
                                          "add": [
                                            "list",
                                            "string"
                                          ],
                                          "drop": [
                                            "list",
                                            "string"
                                          ]
                                        }
                                      ],
                                      "privileged": "bool",
                                      "procMount": "string",
                                      "readOnlyRootFilesystem": "bool",
                                      "runAsGroup": "number",
                                      "runAsNonRoot": "bool",
                                      "runAsUser": "number",
                                      "seLinuxOptions": [
                                        "object",
                                        {
                                          "level": "string",
                                          "role": "string",
                                          "type": "string",
                                          "user": "string"
                                        }
                                      ],
                                      "seccompProfile": [
                                        "object",
                                        {
                                          "localhostProfile": "string",
                                          "type": "string"
                                        }
                                      ],
                                      "windowsOptions": [
                                        "object",
                                        {
                                          "gmsaCredentialSpec": "string",
                                          "gmsaCredentialSpecName": "string",
                                          "hostProcess": "bool",
                                          "runAsUserName": "string"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ],
                          "tlsSidecar": [
                            "object",
                            {
                              "image": "string",
                              "livenessProbe": [
                                "object",
                                {
                                  "failureThreshold": "number",
                                  "initialDelaySeconds": "number",
                                  "periodSeconds": "number",
                                  "successThreshold": "number",
                                  "timeoutSeconds": "number"
                                }
                              ],
                              "logLevel": "string",
                              "readinessProbe": [
                                "object",
                                {
                                  "failureThreshold": "number",
                                  "initialDelaySeconds": "number",
                                  "periodSeconds": "number",
                                  "successThreshold": "number",
                                  "timeoutSeconds": "number"
                                }
                              ],
                              "resources": [
                                "object",
                                {
                                  "limits": "dynamic",
                                  "requests": "dynamic"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "entityOperator": [
                        "object",
                        {
                          "template": [
                            "object",
                            {
                              "deployment": [
                                "object",
                                {
                                  "metadata": [
                                    "object",
                                    {
                                      "annotations": "dynamic",
                                      "labels": "dynamic"
                                    }
                                  ]
                                }
                              ],
                              "entityOperatorRole": [
                                "object",
                                {
                                  "metadata": [
                                    "object",
                                    {
                                      "annotations": "dynamic",
                                      "labels": "dynamic"
                                    }
                                  ]
                                }
                              ],
                              "pod": [
                                "object",
                                {
                                  "affinity": [
                                    "object",
                                    {
                                      "nodeAffinity": [
                                        "object",
                                        {
                                          "preferredDuringSchedulingIgnoredDuringExecution": [
                                            "list",
                                            [
                                              "object",
                                              {
                                                "preference": [
                                                  "object",
                                                  {
                                                    "matchExpressions": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "key": "string",
                                                          "operator": "string",
                                                          "values": [
                                                            "list",
                                                            "string"
                                                          ]
                                                        }
                                                      ]
                                                    ],
                                                    "matchFields": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "key": "string",
                                                          "operator": "string",
                                                          "values": [
                                                            "list",
                                                            "string"
                                                          ]
                                                        }
                                                      ]
                                                    ]
                                                  }
                                                ],
                                                "weight": "number"
                                              }
                                            ]
                                          ],
                                          "requiredDuringSchedulingIgnoredDuringExecution": [
                                            "object",
                                            {
                                              "nodeSelectorTerms": [
                                                "list",
                                                [
                                                  "object",
                                                  {
                                                    "matchExpressions": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "key": "string",
                                                          "operator": "string",
                                                          "values": [
                                                            "list",
                                                            "string"
                                                          ]
                                                        }
                                                      ]
                                                    ],
                                                    "matchFields": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "key": "string",
                                                          "operator": "string",
                                                          "values": [
                                                            "list",
                                                            "string"
                                                          ]
                                                        }
                                                      ]
                                                    ]
                                                  }
                                                ]
                                              ]
                                            }
                                          ]
                                        }
                                      ],
                                      "podAffinity": [
                                        "object",
                                        {
                                          "preferredDuringSchedulingIgnoredDuringExecution": [
                                            "tuple",
                                            [
                                              [
                                                "object",
                                                {
                                                  "podAffinityTerm": [
                                                    "object",
                                                    {
                                                      "labelSelector": [
                                                        "object",
                                                        {
                                                          "matchExpressions": [
                                                            "list",
                                                            [
                                                              "object",
                                                              {
                                                                "key": "string",
                                                                "operator": "string",
                                                                "values": [
                                                                  "list",
                                                                  "string"
                                                                ]
                                                              }
                                                            ]
                                                          ],
                                                          "matchLabels": "dynamic"
                                                        }
                                                      ],
                                                      "namespaceSelector": [
                                                        "object",
                                                        {
                                                          "matchExpressions": [
                                                            "list",
                                                            [
                                                              "object",
                                                              {
                                                                "key": "string",
                                                                "operator": "string",
                                                                "values": [
                                                                  "list",
                                                                  "string"
                                                                ]
                                                              }
                                                            ]
                                                          ],
                                                          "matchLabels": "dynamic"
                                                        }
                                                      ],
                                                      "namespaces": [
                                                        "list",
                                                        "string"
                                                      ],
                                                      "topologyKey": "string"
                                                    }
                                                  ],
                                                  "weight": "number"
                                                }
                                              ]
                                            ]
                                          ],
                                          "requiredDuringSchedulingIgnoredDuringExecution": [
                                            "tuple",
                                            [
                                              [
                                                "object",
                                                {
                                                  "labelSelector": [
                                                    "object",
                                                    {
                                                      "matchExpressions": [
                                                        "list",
                                                        [
                                                          "object",
                                                          {
                                                            "key": "string",
                                                            "operator": "string",
                                                            "values": [
                                                              "list",
                                                              "string"
                                                            ]
                                                          }
                                                        ]
                                                      ],
                                                      "matchLabels": "dynamic"
                                                    }
                                                  ],
                                                  "namespaceSelector": [
                                                    "object",
                                                    {
                                                      "matchExpressions": [
                                                        "list",
                                                        [
                                                          "object",
                                                          {
                                                            "key": "string",
                                                            "operator": "string",
                                                            "values": [
                                                              "list",
                                                              "string"
                                                            ]
                                                          }
                                                        ]
                                                      ],
                                                      "matchLabels": "dynamic"
                                                    }
                                                  ],
                                                  "namespaces": [
                                                    "list",
                                                    "string"
                                                  ],
                                                  "topologyKey": "string"
                                                }
                                              ]
                                            ]
                                          ]
                                        }
                                      ],
                                      "podAntiAffinity": [
                                        "object",
                                        {
                                          "preferredDuringSchedulingIgnoredDuringExecution": [
                                            "tuple",
                                            [
                                              [
                                                "object",
                                                {
                                                  "podAffinityTerm": [
                                                    "object",
                                                    {
                                                      "labelSelector": [
                                                        "object",
                                                        {
                                                          "matchExpressions": [
                                                            "list",
                                                            [
                                                              "object",
                                                              {
                                                                "key": "string",
                                                                "operator": "string",
                                                                "values": [
                                                                  "list",
                                                                  "string"
                                                                ]
                                                              }
                                                            ]
                                                          ],
                                                          "matchLabels": "dynamic"
                                                        }
                                                      ],
                                                      "namespaceSelector": [
                                                        "object",
                                                        {
                                                          "matchExpressions": [
                                                            "list",
                                                            [
                                                              "object",
                                                              {
                                                                "key": "string",
                                                                "operator": "string",
                                                                "values": [
                                                                  "list",
                                                                  "string"
                                                                ]
                                                              }
                                                            ]
                                                          ],
                                                          "matchLabels": "dynamic"
                                                        }
                                                      ],
                                                      "namespaces": [
                                                        "list",
                                                        "string"
                                                      ],
                                                      "topologyKey": "string"
                                                    }
                                                  ],
                                                  "weight": "number"
                                                }
                                              ]
                                            ]
                                          ],
                                          "requiredDuringSchedulingIgnoredDuringExecution": [
                                            "tuple",
                                            [
                                              [
                                                "object",
                                                {
                                                  "labelSelector": [
                                                    "object",
                                                    {
                                                      "matchExpressions": [
                                                        "list",
                                                        [
                                                          "object",
                                                          {
                                                            "key": "string",
                                                            "operator": "string",
                                                            "values": [
                                                              "list",
                                                              "string"
                                                            ]
                                                          }
                                                        ]
                                                      ],
                                                      "matchLabels": "dynamic"
                                                    }
                                                  ],
                                                  "namespaceSelector": [
                                                    "object",
                                                    {
                                                      "matchExpressions": [
                                                        "list",
                                                        [
                                                          "object",
                                                          {
                                                            "key": "string",
                                                            "operator": "string",
                                                            "values": [
                                                              "list",
                                                              "string"
                                                            ]
                                                          }
                                                        ]
                                                      ],
                                                      "matchLabels": "dynamic"
                                                    }
                                                  ],
                                                  "namespaces": [
                                                    "list",
                                                    "string"
                                                  ],
                                                  "topologyKey": "string"
                                                }
                                              ]
                                            ]
                                          ]
                                        }
                                      ]
                                    }
                                  ],
                                  "enableServiceLinks": "bool",
                                  "hostAliases": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "hostnames": [
                                          "list",
                                          "string"
                                        ],
                                        "ip": "string"
                                      }
                                    ]
                                  ],
                                  "imagePullSecrets": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "name": "string"
                                      }
                                    ]
                                  ],
                                  "metadata": [
                                    "object",
                                    {
                                      "annotations": "dynamic",
                                      "labels": "dynamic"
                                    }
                                  ],
                                  "priorityClassName": "string",
                                  "schedulerName": "string",
                                  "securityContext": [
                                    "object",
                                    {
                                      "fsGroup": "number",
                                      "fsGroupChangePolicy": "string",
                                      "runAsGroup": "number",
                                      "runAsNonRoot": "bool",
                                      "runAsUser": "number",
                                      "seLinuxOptions": [
                                        "object",
                                        {
                                          "level": "string",
                                          "role": "string",
                                          "type": "string",
                                          "user": "string"
                                        }
                                      ],
                                      "seccompProfile": [
                                        "object",
                                        {
                                          "localhostProfile": "string",
                                          "type": "string"
                                        }
                                      ],
                                      "supplementalGroups": [
                                        "list",
                                        "number"
                                      ],
                                      "sysctls": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "name": "string",
                                            "value": "string"
                                          }
                                        ]
                                      ],
                                      "windowsOptions": [
                                        "object",
                                        {
                                          "gmsaCredentialSpec": "string",
                                          "gmsaCredentialSpecName": "string",
                                          "hostProcess": "bool",
                                          "runAsUserName": "string"
                                        }
                                      ]
                                    }
                                  ],
                                  "terminationGracePeriodSeconds": "number",
                                  "tmpDirSizeLimit": "string",
                                  "tolerations": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "effect": "string",
                                        "key": "string",
                                        "operator": "string",
                                        "tolerationSeconds": "number",
                                        "value": "string"
                                      }
                                    ]
                                  ],
                                  "topologySpreadConstraints": [
                                    "tuple",
                                    [
                                      [
                                        "object",
                                        {
                                          "labelSelector": [
                                            "object",
                                            {
                                              "matchExpressions": [
                                                "list",
                                                [
                                                  "object",
                                                  {
                                                    "key": "string",
                                                    "operator": "string",
                                                    "values": [
                                                      "list",
                                                      "string"
                                                    ]
                                                  }
                                                ]
                                              ],
                                              "matchLabels": "dynamic"
                                            }
                                          ],
                                          "matchLabelKeys": [
                                            "list",
                                            "string"
                                          ],
                                          "maxSkew": "number",
                                          "minDomains": "number",
                                          "nodeAffinityPolicy": "string",
                                          "nodeTaintsPolicy": "string",
                                          "topologyKey": "string",
                                          "whenUnsatisfiable": "string"
                                        }
                                      ]
                                    ]
                                  ]
                                }
                              ],
                              "serviceAccount": [
                                "object",
                                {
                                  "metadata": [
                                    "object",
                                    {
                                      "annotations": "dynamic",
                                      "labels": "dynamic"
                                    }
                                  ]
                                }
                              ],
                              "tlsSidecarContainer": [
                                "object",
                                {
                                  "env": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "name": "string",
                                        "value": "string"
                                      }
                                    ]
                                  ],
                                  "securityContext": [
                                    "object",
                                    {
                                      "allowPrivilegeEscalation": "bool",
                                      "capabilities": [
                                        "object",
                                        {
                                          "add": [
                                            "list",
                                            "string"
                                          ],
                                          "drop": [
                                            "list",
                                            "string"
                                          ]
                                        }
                                      ],
                                      "privileged": "bool",
                                      "procMount": "string",
                                      "readOnlyRootFilesystem": "bool",
                                      "runAsGroup": "number",
                                      "runAsNonRoot": "bool",
                                      "runAsUser": "number",
                                      "seLinuxOptions": [
                                        "object",
                                        {
                                          "level": "string",
                                          "role": "string",
                                          "type": "string",
                                          "user": "string"
                                        }
                                      ],
                                      "seccompProfile": [
                                        "object",
                                        {
                                          "localhostProfile": "string",
                                          "type": "string"
                                        }
                                      ],
                                      "windowsOptions": [
                                        "object",
                                        {
                                          "gmsaCredentialSpec": "string",
                                          "gmsaCredentialSpecName": "string",
                                          "hostProcess": "bool",
                                          "runAsUserName": "string"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "topicOperatorContainer": [
                                "object",
                                {
                                  "env": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "name": "string",
                                        "value": "string"
                                      }
                                    ]
                                  ],
                                  "securityContext": [
                                    "object",
                                    {
                                      "allowPrivilegeEscalation": "bool",
                                      "capabilities": [
                                        "object",
                                        {
                                          "add": [
                                            "list",
                                            "string"
                                          ],
                                          "drop": [
                                            "list",
                                            "string"
                                          ]
                                        }
                                      ],
                                      "privileged": "bool",
                                      "procMount": "string",
                                      "readOnlyRootFilesystem": "bool",
                                      "runAsGroup": "number",
                                      "runAsNonRoot": "bool",
                                      "runAsUser": "number",
                                      "seLinuxOptions": [
                                        "object",
                                        {
                                          "level": "string",
                                          "role": "string",
                                          "type": "string",
                                          "user": "string"
                                        }
                                      ],
                                      "seccompProfile": [
                                        "object",
                                        {
                                          "localhostProfile": "string",
                                          "type": "string"
                                        }
                                      ],
                                      "windowsOptions": [
                                        "object",
                                        {
                                          "gmsaCredentialSpec": "string",
                                          "gmsaCredentialSpecName": "string",
                                          "hostProcess": "bool",
                                          "runAsUserName": "string"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "topicOperatorRoleBinding": [
                                "object",
                                {
                                  "metadata": [
                                    "object",
                                    {
                                      "annotations": "dynamic",
                                      "labels": "dynamic"
                                    }
                                  ]
                                }
                              ],
                              "userOperatorContainer": [
                                "object",
                                {
                                  "env": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "name": "string",
                                        "value": "string"
                                      }
                                    ]
                                  ],
                                  "securityContext": [
                                    "object",
                                    {
                                      "allowPrivilegeEscalation": "bool",
                                      "capabilities": [
                                        "object",
                                        {
                                          "add": [
                                            "list",
                                            "string"
                                          ],
                                          "drop": [
                                            "list",
                                            "string"
                                          ]
                                        }
                                      ],
                                      "privileged": "bool",
                                      "procMount": "string",
                                      "readOnlyRootFilesystem": "bool",
                                      "runAsGroup": "number",
                                      "runAsNonRoot": "bool",
                                      "runAsUser": "number",
                                      "seLinuxOptions": [
                                        "object",
                                        {
                                          "level": "string",
                                          "role": "string",
                                          "type": "string",
                                          "user": "string"
                                        }
                                      ],
                                      "seccompProfile": [
                                        "object",
                                        {
                                          "localhostProfile": "string",
                                          "type": "string"
                                        }
                                      ],
                                      "windowsOptions": [
                                        "object",
                                        {
                                          "gmsaCredentialSpec": "string",
                                          "gmsaCredentialSpecName": "string",
                                          "hostProcess": "bool",
                                          "runAsUserName": "string"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "userOperatorRoleBinding": [
                                "object",
                                {
                                  "metadata": [
                                    "object",
                                    {
                                      "annotations": "dynamic",
                                      "labels": "dynamic"
                                    }
                                  ]
                                }
                              ]
                            }
                          ],
                          "tlsSidecar": [
                            "object",
                            {
                              "image": "string",
                              "livenessProbe": [
                                "object",
                                {
                                  "failureThreshold": "number",
                                  "initialDelaySeconds": "number",
                                  "periodSeconds": "number",
                                  "successThreshold": "number",
                                  "timeoutSeconds": "number"
                                }
                              ],
                              "logLevel": "string",
                              "readinessProbe": [
                                "object",
                                {
                                  "failureThreshold": "number",
                                  "initialDelaySeconds": "number",
                                  "periodSeconds": "number",
                                  "successThreshold": "number",
                                  "timeoutSeconds": "number"
                                }
                              ],
                              "resources": [
                                "object",
                                {
                                  "limits": "dynamic",
                                  "requests": "dynamic"
                                }
                              ]
                            }
                          ],
                          "topicOperator": [
                            "object",
                            {
                              "image": "string",
                              "jvmOptions": [
                                "object",
                                {
                                  "-XX": "dynamic",
                                  "-Xms": "string",
                                  "-Xmx": "string",
                                  "gcLoggingEnabled": "bool",
                                  "javaSystemProperties": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "name": "string",
                                        "value": "string"
                                      }
                                    ]
                                  ]
                                }
                              ],
                              "livenessProbe": [
                                "object",
                                {
                                  "failureThreshold": "number",
                                  "initialDelaySeconds": "number",
                                  "periodSeconds": "number",
                                  "successThreshold": "number",
                                  "timeoutSeconds": "number"
                                }
                              ],
                              "logging": [
                                "object",
                                {
                                  "loggers": "dynamic",
                                  "type": "string",
                                  "valueFrom": [
                                    "object",
                                    {
                                      "configMapKeyRef": [
                                        "object",
                                        {
                                          "key": "string",
                                          "name": "string",
                                          "optional": "bool"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "readinessProbe": [
                                "object",
                                {
                                  "failureThreshold": "number",
                                  "initialDelaySeconds": "number",
                                  "periodSeconds": "number",
                                  "successThreshold": "number",
                                  "timeoutSeconds": "number"
                                }
                              ],
                              "reconciliationIntervalSeconds": "number",
                              "resources": [
                                "object",
                                {
                                  "limits": "dynamic",
                                  "requests": "dynamic"
                                }
                              ],
                              "startupProbe": [
                                "object",
                                {
                                  "failureThreshold": "number",
                                  "initialDelaySeconds": "number",
                                  "periodSeconds": "number",
                                  "successThreshold": "number",
                                  "timeoutSeconds": "number"
                                }
                              ],
                              "topicMetadataMaxAttempts": "number",
                              "watchedNamespace": "string",
                              "zookeeperSessionTimeoutSeconds": "number"
                            }
                          ],
                          "userOperator": [
                            "object",
                            {
                              "image": "string",
                              "jvmOptions": [
                                "object",
                                {
                                  "-XX": "dynamic",
                                  "-Xms": "string",
                                  "-Xmx": "string",
                                  "gcLoggingEnabled": "bool",
                                  "javaSystemProperties": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "name": "string",
                                        "value": "string"
                                      }
                                    ]
                                  ]
                                }
                              ],
                              "livenessProbe": [
                                "object",
                                {
                                  "failureThreshold": "number",
                                  "initialDelaySeconds": "number",
                                  "periodSeconds": "number",
                                  "successThreshold": "number",
                                  "timeoutSeconds": "number"
                                }
                              ],
                              "logging": [
                                "object",
                                {
                                  "loggers": "dynamic",
                                  "type": "string",
                                  "valueFrom": [
                                    "object",
                                    {
                                      "configMapKeyRef": [
                                        "object",
                                        {
                                          "key": "string",
                                          "name": "string",
                                          "optional": "bool"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "readinessProbe": [
                                "object",
                                {
                                  "failureThreshold": "number",
                                  "initialDelaySeconds": "number",
                                  "periodSeconds": "number",
                                  "successThreshold": "number",
                                  "timeoutSeconds": "number"
                                }
                              ],
                              "reconciliationIntervalSeconds": "number",
                              "resources": [
                                "object",
                                {
                                  "limits": "dynamic",
                                  "requests": "dynamic"
                                }
                              ],
                              "secretPrefix": "string",
                              "watchedNamespace": "string",
                              "zookeeperSessionTimeoutSeconds": "number"
                            }
                          ]
                        }
                      ],
                      "jmxTrans": [
                        "object",
                        {
                          "image": "string",
                          "kafkaQueries": [
                            "list",
                            [
                              "object",
                              {
                                "attributes": [
                                  "list",
                                  "string"
                                ],
                                "outputs": [
                                  "list",
                                  "string"
                                ],
                                "targetMBean": "string"
                              }
                            ]
                          ],
                          "logLevel": "string",
                          "outputDefinitions": [
                            "list",
                            [
                              "object",
                              {
                                "flushDelayInSeconds": "number",
                                "host": "string",
                                "name": "string",
                                "outputType": "string",
                                "port": "number",
                                "typeNames": [
                                  "list",
                                  "string"
                                ]
                              }
                            ]
                          ],
                          "resources": [
                            "object",
                            {
                              "limits": "dynamic",
                              "requests": "dynamic"
                            }
                          ],
                          "template": [
                            "object",
                            {
                              "container": [
                                "object",
                                {
                                  "env": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "name": "string",
                                        "value": "string"
                                      }
                                    ]
                                  ],
                                  "securityContext": [
                                    "object",
                                    {
                                      "allowPrivilegeEscalation": "bool",
                                      "capabilities": [
                                        "object",
                                        {
                                          "add": [
                                            "list",
                                            "string"
                                          ],
                                          "drop": [
                                            "list",
                                            "string"
                                          ]
                                        }
                                      ],
                                      "privileged": "bool",
                                      "procMount": "string",
                                      "readOnlyRootFilesystem": "bool",
                                      "runAsGroup": "number",
                                      "runAsNonRoot": "bool",
                                      "runAsUser": "number",
                                      "seLinuxOptions": [
                                        "object",
                                        {
                                          "level": "string",
                                          "role": "string",
                                          "type": "string",
                                          "user": "string"
                                        }
                                      ],
                                      "seccompProfile": [
                                        "object",
                                        {
                                          "localhostProfile": "string",
                                          "type": "string"
                                        }
                                      ],
                                      "windowsOptions": [
                                        "object",
                                        {
                                          "gmsaCredentialSpec": "string",
                                          "gmsaCredentialSpecName": "string",
                                          "hostProcess": "bool",
                                          "runAsUserName": "string"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "deployment": [
                                "object",
                                {
                                  "metadata": [
                                    "object",
                                    {
                                      "annotations": "dynamic",
                                      "labels": "dynamic"
                                    }
                                  ]
                                }
                              ],
                              "pod": [
                                "object",
                                {
                                  "affinity": [
                                    "object",
                                    {
                                      "nodeAffinity": [
                                        "object",
                                        {
                                          "preferredDuringSchedulingIgnoredDuringExecution": [
                                            "list",
                                            [
                                              "object",
                                              {
                                                "preference": [
                                                  "object",
                                                  {
                                                    "matchExpressions": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "key": "string",
                                                          "operator": "string",
                                                          "values": [
                                                            "list",
                                                            "string"
                                                          ]
                                                        }
                                                      ]
                                                    ],
                                                    "matchFields": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "key": "string",
                                                          "operator": "string",
                                                          "values": [
                                                            "list",
                                                            "string"
                                                          ]
                                                        }
                                                      ]
                                                    ]
                                                  }
                                                ],
                                                "weight": "number"
                                              }
                                            ]
                                          ],
                                          "requiredDuringSchedulingIgnoredDuringExecution": [
                                            "object",
                                            {
                                              "nodeSelectorTerms": [
                                                "list",
                                                [
                                                  "object",
                                                  {
                                                    "matchExpressions": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "key": "string",
                                                          "operator": "string",
                                                          "values": [
                                                            "list",
                                                            "string"
                                                          ]
                                                        }
                                                      ]
                                                    ],
                                                    "matchFields": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "key": "string",
                                                          "operator": "string",
                                                          "values": [
                                                            "list",
                                                            "string"
                                                          ]
                                                        }
                                                      ]
                                                    ]
                                                  }
                                                ]
                                              ]
                                            }
                                          ]
                                        }
                                      ],
                                      "podAffinity": [
                                        "object",
                                        {
                                          "preferredDuringSchedulingIgnoredDuringExecution": [
                                            "tuple",
                                            [
                                              [
                                                "object",
                                                {
                                                  "podAffinityTerm": [
                                                    "object",
                                                    {
                                                      "labelSelector": [
                                                        "object",
                                                        {
                                                          "matchExpressions": [
                                                            "list",
                                                            [
                                                              "object",
                                                              {
                                                                "key": "string",
                                                                "operator": "string",
                                                                "values": [
                                                                  "list",
                                                                  "string"
                                                                ]
                                                              }
                                                            ]
                                                          ],
                                                          "matchLabels": "dynamic"
                                                        }
                                                      ],
                                                      "namespaceSelector": [
                                                        "object",
                                                        {
                                                          "matchExpressions": [
                                                            "list",
                                                            [
                                                              "object",
                                                              {
                                                                "key": "string",
                                                                "operator": "string",
                                                                "values": [
                                                                  "list",
                                                                  "string"
                                                                ]
                                                              }
                                                            ]
                                                          ],
                                                          "matchLabels": "dynamic"
                                                        }
                                                      ],
                                                      "namespaces": [
                                                        "list",
                                                        "string"
                                                      ],
                                                      "topologyKey": "string"
                                                    }
                                                  ],
                                                  "weight": "number"
                                                }
                                              ]
                                            ]
                                          ],
                                          "requiredDuringSchedulingIgnoredDuringExecution": [
                                            "tuple",
                                            [
                                              [
                                                "object",
                                                {
                                                  "labelSelector": [
                                                    "object",
                                                    {
                                                      "matchExpressions": [
                                                        "list",
                                                        [
                                                          "object",
                                                          {
                                                            "key": "string",
                                                            "operator": "string",
                                                            "values": [
                                                              "list",
                                                              "string"
                                                            ]
                                                          }
                                                        ]
                                                      ],
                                                      "matchLabels": "dynamic"
                                                    }
                                                  ],
                                                  "namespaceSelector": [
                                                    "object",
                                                    {
                                                      "matchExpressions": [
                                                        "list",
                                                        [
                                                          "object",
                                                          {
                                                            "key": "string",
                                                            "operator": "string",
                                                            "values": [
                                                              "list",
                                                              "string"
                                                            ]
                                                          }
                                                        ]
                                                      ],
                                                      "matchLabels": "dynamic"
                                                    }
                                                  ],
                                                  "namespaces": [
                                                    "list",
                                                    "string"
                                                  ],
                                                  "topologyKey": "string"
                                                }
                                              ]
                                            ]
                                          ]
                                        }
                                      ],
                                      "podAntiAffinity": [
                                        "object",
                                        {
                                          "preferredDuringSchedulingIgnoredDuringExecution": [
                                            "tuple",
                                            [
                                              [
                                                "object",
                                                {
                                                  "podAffinityTerm": [
                                                    "object",
                                                    {
                                                      "labelSelector": [
                                                        "object",
                                                        {
                                                          "matchExpressions": [
                                                            "list",
                                                            [
                                                              "object",
                                                              {
                                                                "key": "string",
                                                                "operator": "string",
                                                                "values": [
                                                                  "list",
                                                                  "string"
                                                                ]
                                                              }
                                                            ]
                                                          ],
                                                          "matchLabels": "dynamic"
                                                        }
                                                      ],
                                                      "namespaceSelector": [
                                                        "object",
                                                        {
                                                          "matchExpressions": [
                                                            "list",
                                                            [
                                                              "object",
                                                              {
                                                                "key": "string",
                                                                "operator": "string",
                                                                "values": [
                                                                  "list",
                                                                  "string"
                                                                ]
                                                              }
                                                            ]
                                                          ],
                                                          "matchLabels": "dynamic"
                                                        }
                                                      ],
                                                      "namespaces": [
                                                        "list",
                                                        "string"
                                                      ],
                                                      "topologyKey": "string"
                                                    }
                                                  ],
                                                  "weight": "number"
                                                }
                                              ]
                                            ]
                                          ],
                                          "requiredDuringSchedulingIgnoredDuringExecution": [
                                            "tuple",
                                            [
                                              [
                                                "object",
                                                {
                                                  "labelSelector": [
                                                    "object",
                                                    {
                                                      "matchExpressions": [
                                                        "list",
                                                        [
                                                          "object",
                                                          {
                                                            "key": "string",
                                                            "operator": "string",
                                                            "values": [
                                                              "list",
                                                              "string"
                                                            ]
                                                          }
                                                        ]
                                                      ],
                                                      "matchLabels": "dynamic"
                                                    }
                                                  ],
                                                  "namespaceSelector": [
                                                    "object",
                                                    {
                                                      "matchExpressions": [
                                                        "list",
                                                        [
                                                          "object",
                                                          {
                                                            "key": "string",
                                                            "operator": "string",
                                                            "values": [
                                                              "list",
                                                              "string"
                                                            ]
                                                          }
                                                        ]
                                                      ],
                                                      "matchLabels": "dynamic"
                                                    }
                                                  ],
                                                  "namespaces": [
                                                    "list",
                                                    "string"
                                                  ],
                                                  "topologyKey": "string"
                                                }
                                              ]
                                            ]
                                          ]
                                        }
                                      ]
                                    }
                                  ],
                                  "enableServiceLinks": "bool",
                                  "hostAliases": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "hostnames": [
                                          "list",
                                          "string"
                                        ],
                                        "ip": "string"
                                      }
                                    ]
                                  ],
                                  "imagePullSecrets": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "name": "string"
                                      }
                                    ]
                                  ],
                                  "metadata": [
                                    "object",
                                    {
                                      "annotations": "dynamic",
                                      "labels": "dynamic"
                                    }
                                  ],
                                  "priorityClassName": "string",
                                  "schedulerName": "string",
                                  "securityContext": [
                                    "object",
                                    {
                                      "fsGroup": "number",
                                      "fsGroupChangePolicy": "string",
                                      "runAsGroup": "number",
                                      "runAsNonRoot": "bool",
                                      "runAsUser": "number",
                                      "seLinuxOptions": [
                                        "object",
                                        {
                                          "level": "string",
                                          "role": "string",
                                          "type": "string",
                                          "user": "string"
                                        }
                                      ],
                                      "seccompProfile": [
                                        "object",
                                        {
                                          "localhostProfile": "string",
                                          "type": "string"
                                        }
                                      ],
                                      "supplementalGroups": [
                                        "list",
                                        "number"
                                      ],
                                      "sysctls": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "name": "string",
                                            "value": "string"
                                          }
                                        ]
                                      ],
                                      "windowsOptions": [
                                        "object",
                                        {
                                          "gmsaCredentialSpec": "string",
                                          "gmsaCredentialSpecName": "string",
                                          "hostProcess": "bool",
                                          "runAsUserName": "string"
                                        }
                                      ]
                                    }
                                  ],
                                  "terminationGracePeriodSeconds": "number",
                                  "tmpDirSizeLimit": "string",
                                  "tolerations": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "effect": "string",
                                        "key": "string",
                                        "operator": "string",
                                        "tolerationSeconds": "number",
                                        "value": "string"
                                      }
                                    ]
                                  ],
                                  "topologySpreadConstraints": [
                                    "tuple",
                                    [
                                      [
                                        "object",
                                        {
                                          "labelSelector": [
                                            "object",
                                            {
                                              "matchExpressions": [
                                                "list",
                                                [
                                                  "object",
                                                  {
                                                    "key": "string",
                                                    "operator": "string",
                                                    "values": [
                                                      "list",
                                                      "string"
                                                    ]
                                                  }
                                                ]
                                              ],
                                              "matchLabels": "dynamic"
                                            }
                                          ],
                                          "matchLabelKeys": [
                                            "list",
                                            "string"
                                          ],
                                          "maxSkew": "number",
                                          "minDomains": "number",
                                          "nodeAffinityPolicy": "string",
                                          "nodeTaintsPolicy": "string",
                                          "topologyKey": "string",
                                          "whenUnsatisfiable": "string"
                                        }
                                      ]
                                    ]
                                  ]
                                }
                              ],
                              "serviceAccount": [
                                "object",
                                {
                                  "metadata": [
                                    "object",
                                    {
                                      "annotations": "dynamic",
                                      "labels": "dynamic"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "kafka": [
                        "object",
                        {
                          "authorization": [
                            "object",
                            {
                              "allowOnError": "bool",
                              "authorizerClass": "string",
                              "clientId": "string",
                              "connectTimeoutSeconds": "number",
                              "delegateToKafkaAcls": "bool",
                              "disableTlsHostnameVerification": "bool",
                              "enableMetrics": "bool",
                              "expireAfterMs": "number",
                              "grantsRefreshPeriodSeconds": "number",
                              "grantsRefreshPoolSize": "number",
                              "initialCacheCapacity": "number",
                              "maximumCacheSize": "number",
                              "readTimeoutSeconds": "number",
                              "superUsers": [
                                "list",
                                "string"
                              ],
                              "supportsAdminApi": "bool",
                              "tlsTrustedCertificates": [
                                "list",
                                [
                                  "object",
                                  {
                                    "certificate": "string",
                                    "secretName": "string"
                                  }
                                ]
                              ],
                              "tokenEndpointUri": "string",
                              "type": "string",
                              "url": "string"
                            }
                          ],
                          "brokerRackInitImage": "string",
                          "config": [
                            "object",
                            {
                              "default.replication.factor": "number",
                              "inter.broker.protocol.version": "string",
                              "min.insync.replicas": "number",
                              "offsets.topic.replication.factor": "number",
                              "transaction.state.log.min.isr": "number",
                              "transaction.state.log.replication.factor": "number"
                            }
                          ],
                          "image": "string",
                          "jmxOptions": [
                            "object",
                            {
                              "authentication": [
                                "object",
                                {
                                  "type": "string"
                                }
                              ]
                            }
                          ],
                          "jvmOptions": [
                            "object",
                            {
                              "-XX": "dynamic",
                              "-Xms": "string",
                              "-Xmx": "string",
                              "gcLoggingEnabled": "bool",
                              "javaSystemProperties": [
                                "list",
                                [
                                  "object",
                                  {
                                    "name": "string",
                                    "value": "string"
                                  }
                                ]
                              ]
                            }
                          ],
                          "listeners": [
                            "tuple",
                            [
                              [
                                "object",
                                {
                                  "authentication": [
                                    "object",
                                    {
                                      "accessTokenIsJwt": "bool",
                                      "checkAccessTokenType": "bool",
                                      "checkAudience": "bool",
                                      "checkIssuer": "bool",
                                      "clientAudience": "string",
                                      "clientId": "string",
                                      "clientScope": "string",
                                      "clientSecret": [
                                        "object",
                                        {
                                          "key": "string",
                                          "secretName": "string"
                                        }
                                      ],
                                      "connectTimeoutSeconds": "number",
                                      "customClaimCheck": "string",
                                      "disableTlsHostnameVerification": "bool",
                                      "enableECDSA": "bool",
                                      "enableMetrics": "bool",
                                      "enableOauthBearer": "bool",
                                      "enablePlain": "bool",
                                      "failFast": "bool",
                                      "fallbackUserNameClaim": "string",
                                      "fallbackUserNamePrefix": "string",
                                      "groupsClaim": "string",
                                      "groupsClaimDelimiter": "string",
                                      "introspectionEndpointUri": "string",
                                      "jwksEndpointUri": "string",
                                      "jwksExpirySeconds": "number",
                                      "jwksIgnoreKeyUse": "bool",
                                      "jwksMinRefreshPauseSeconds": "number",
                                      "jwksRefreshSeconds": "number",
                                      "listenerConfig": "dynamic",
                                      "maxSecondsWithoutReauthentication": "number",
                                      "readTimeoutSeconds": "number",
                                      "sasl": "bool",
                                      "secrets": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "key": "string",
                                            "secretName": "string"
                                          }
                                        ]
                                      ],
                                      "tlsTrustedCertificates": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "certificate": "string",
                                            "secretName": "string"
                                          }
                                        ]
                                      ],
                                      "tokenEndpointUri": "string",
                                      "type": "string",
                                      "userInfoEndpointUri": "string",
                                      "userNameClaim": "string",
                                      "validIssuerUri": "string",
                                      "validTokenType": "string"
                                    }
                                  ],
                                  "configuration": [
                                    "object",
                                    {
                                      "bootstrap": [
                                        "object",
                                        {
                                          "alternativeNames": [
                                            "list",
                                            "string"
                                          ],
                                          "annotations": "dynamic",
                                          "host": "string",
                                          "labels": "dynamic",
                                          "loadBalancerIP": "string",
                                          "nodePort": "number"
                                        }
                                      ],
                                      "brokerCertChainAndKey": [
                                        "object",
                                        {
                                          "certificate": "string",
                                          "key": "string",
                                          "secretName": "string"
                                        }
                                      ],
                                      "brokers": [
                                        "tuple",
                                        [
                                          [
                                            "object",
                                            {
                                              "advertisedHost": "string",
                                              "advertisedPort": "number",
                                              "annotations": "dynamic",
                                              "broker": "number",
                                              "host": "string",
                                              "labels": "dynamic",
                                              "loadBalancerIP": "string",
                                              "nodePort": "number"
                                            }
                                          ]
                                        ]
                                      ],
                                      "class": "string",
                                      "createBootstrapService": "bool",
                                      "externalTrafficPolicy": "string",
                                      "finalizers": [
                                        "list",
                                        "string"
                                      ],
                                      "ipFamilies": [
                                        "list",
                                        "string"
                                      ],
                                      "ipFamilyPolicy": "string",
                                      "loadBalancerSourceRanges": [
                                        "list",
                                        "string"
                                      ],
                                      "maxConnectionCreationRate": "number",
                                      "maxConnections": "number",
                                      "preferredNodePortAddressType": "string",
                                      "useServiceDnsDomain": "bool"
                                    }
                                  ],
                                  "name": "string",
                                  "networkPolicyPeers": [
                                    "tuple",
                                    [
                                      [
                                        "object",
                                        {
                                          "ipBlock": [
                                            "object",
                                            {
                                              "cidr": "string",
                                              "except": [
                                                "list",
                                                "string"
                                              ]
                                            }
                                          ],
                                          "namespaceSelector": [
                                            "object",
                                            {
                                              "matchExpressions": [
                                                "list",
                                                [
                                                  "object",
                                                  {
                                                    "key": "string",
                                                    "operator": "string",
                                                    "values": [
                                                      "list",
                                                      "string"
                                                    ]
                                                  }
                                                ]
                                              ],
                                              "matchLabels": "dynamic"
                                            }
                                          ],
                                          "podSelector": [
                                            "object",
                                            {
                                              "matchExpressions": [
                                                "list",
                                                [
                                                  "object",
                                                  {
                                                    "key": "string",
                                                    "operator": "string",
                                                    "values": [
                                                      "list",
                                                      "string"
                                                    ]
                                                  }
                                                ]
                                              ],
                                              "matchLabels": "dynamic"
                                            }
                                          ]
                                        }
                                      ]
                                    ]
                                  ],
                                  "port": "number",
                                  "tls": "bool",
                                  "type": "string"
                                }
                              ],
                              [
                                "object",
                                {
                                  "authentication": [
                                    "object",
                                    {
                                      "accessTokenIsJwt": "bool",
                                      "checkAccessTokenType": "bool",
                                      "checkAudience": "bool",
                                      "checkIssuer": "bool",
                                      "clientAudience": "string",
                                      "clientId": "string",
                                      "clientScope": "string",
                                      "clientSecret": [
                                        "object",
                                        {
                                          "key": "string",
                                          "secretName": "string"
                                        }
                                      ],
                                      "connectTimeoutSeconds": "number",
                                      "customClaimCheck": "string",
                                      "disableTlsHostnameVerification": "bool",
                                      "enableECDSA": "bool",
                                      "enableMetrics": "bool",
                                      "enableOauthBearer": "bool",
                                      "enablePlain": "bool",
                                      "failFast": "bool",
                                      "fallbackUserNameClaim": "string",
                                      "fallbackUserNamePrefix": "string",
                                      "groupsClaim": "string",
                                      "groupsClaimDelimiter": "string",
                                      "introspectionEndpointUri": "string",
                                      "jwksEndpointUri": "string",
                                      "jwksExpirySeconds": "number",
                                      "jwksIgnoreKeyUse": "bool",
                                      "jwksMinRefreshPauseSeconds": "number",
                                      "jwksRefreshSeconds": "number",
                                      "listenerConfig": "dynamic",
                                      "maxSecondsWithoutReauthentication": "number",
                                      "readTimeoutSeconds": "number",
                                      "sasl": "bool",
                                      "secrets": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "key": "string",
                                            "secretName": "string"
                                          }
                                        ]
                                      ],
                                      "tlsTrustedCertificates": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "certificate": "string",
                                            "secretName": "string"
                                          }
                                        ]
                                      ],
                                      "tokenEndpointUri": "string",
                                      "type": "string",
                                      "userInfoEndpointUri": "string",
                                      "userNameClaim": "string",
                                      "validIssuerUri": "string",
                                      "validTokenType": "string"
                                    }
                                  ],
                                  "configuration": [
                                    "object",
                                    {
                                      "bootstrap": [
                                        "object",
                                        {
                                          "alternativeNames": [
                                            "list",
                                            "string"
                                          ],
                                          "annotations": "dynamic",
                                          "host": "string",
                                          "labels": "dynamic",
                                          "loadBalancerIP": "string",
                                          "nodePort": "number"
                                        }
                                      ],
                                      "brokerCertChainAndKey": [
                                        "object",
                                        {
                                          "certificate": "string",
                                          "key": "string",
                                          "secretName": "string"
                                        }
                                      ],
                                      "brokers": [
                                        "tuple",
                                        [
                                          [
                                            "object",
                                            {
                                              "advertisedHost": "string",
                                              "advertisedPort": "number",
                                              "annotations": "dynamic",
                                              "broker": "number",
                                              "host": "string",
                                              "labels": "dynamic",
                                              "loadBalancerIP": "string",
                                              "nodePort": "number"
                                            }
                                          ]
                                        ]
                                      ],
                                      "class": "string",
                                      "createBootstrapService": "bool",
                                      "externalTrafficPolicy": "string",
                                      "finalizers": [
                                        "list",
                                        "string"
                                      ],
                                      "ipFamilies": [
                                        "list",
                                        "string"
                                      ],
                                      "ipFamilyPolicy": "string",
                                      "loadBalancerSourceRanges": [
                                        "list",
                                        "string"
                                      ],
                                      "maxConnectionCreationRate": "number",
                                      "maxConnections": "number",
                                      "preferredNodePortAddressType": "string",
                                      "useServiceDnsDomain": "bool"
                                    }
                                  ],
                                  "name": "string",
                                  "networkPolicyPeers": [
                                    "tuple",
                                    [
                                      [
                                        "object",
                                        {
                                          "ipBlock": [
                                            "object",
                                            {
                                              "cidr": "string",
                                              "except": [
                                                "list",
                                                "string"
                                              ]
                                            }
                                          ],
                                          "namespaceSelector": [
                                            "object",
                                            {
                                              "matchExpressions": [
                                                "list",
                                                [
                                                  "object",
                                                  {
                                                    "key": "string",
                                                    "operator": "string",
                                                    "values": [
                                                      "list",
                                                      "string"
                                                    ]
                                                  }
                                                ]
                                              ],
                                              "matchLabels": "dynamic"
                                            }
                                          ],
                                          "podSelector": [
                                            "object",
                                            {
                                              "matchExpressions": [
                                                "list",
                                                [
                                                  "object",
                                                  {
                                                    "key": "string",
                                                    "operator": "string",
                                                    "values": [
                                                      "list",
                                                      "string"
                                                    ]
                                                  }
                                                ]
                                              ],
                                              "matchLabels": "dynamic"
                                            }
                                          ]
                                        }
                                      ]
                                    ]
                                  ],
                                  "port": "number",
                                  "tls": "bool",
                                  "type": "string"
                                }
                              ]
                            ]
                          ],
                          "livenessProbe": [
                            "object",
                            {
                              "failureThreshold": "number",
                              "initialDelaySeconds": "number",
                              "periodSeconds": "number",
                              "successThreshold": "number",
                              "timeoutSeconds": "number"
                            }
                          ],
                          "logging": [
                            "object",
                            {
                              "loggers": "dynamic",
                              "type": "string",
                              "valueFrom": [
                                "object",
                                {
                                  "configMapKeyRef": [
                                    "object",
                                    {
                                      "key": "string",
                                      "name": "string",
                                      "optional": "bool"
                                    }
                                  ]
                                }
                              ]
                            }
                          ],
                          "metricsConfig": [
                            "object",
                            {
                              "type": "string",
                              "valueFrom": [
                                "object",
                                {
                                  "configMapKeyRef": [
                                    "object",
                                    {
                                      "key": "string",
                                      "name": "string",
                                      "optional": "bool"
                                    }
                                  ]
                                }
                              ]
                            }
                          ],
                          "rack": [
                            "object",
                            {
                              "topologyKey": "string"
                            }
                          ],
                          "readinessProbe": [
                            "object",
                            {
                              "failureThreshold": "number",
                              "initialDelaySeconds": "number",
                              "periodSeconds": "number",
                              "successThreshold": "number",
                              "timeoutSeconds": "number"
                            }
                          ],
                          "replicas": "number",
                          "resources": [
                            "object",
                            {
                              "limits": "dynamic",
                              "requests": "dynamic"
                            }
                          ],
                          "storage": [
                            "object",
                            {
                              "class": "string",
                              "deleteClaim": "bool",
                              "id": "number",
                              "overrides": [
                                "list",
                                [
                                  "object",
                                  {
                                    "broker": "number",
                                    "class": "string"
                                  }
                                ]
                              ],
                              "selector": "dynamic",
                              "size": "string",
                              "sizeLimit": "string",
                              "type": "string",
                              "volumes": [
                                "tuple",
                                [
                                  [
                                    "object",
                                    {
                                      "class": "string",
                                      "deleteClaim": "bool",
                                      "id": "number",
                                      "overrides": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "broker": "number",
                                            "class": "string"
                                          }
                                        ]
                                      ],
                                      "selector": "dynamic",
                                      "size": "string",
                                      "sizeLimit": "string",
                                      "type": "string"
                                    }
                                  ]
                                ]
                              ]
                            }
                          ],
                          "template": [
                            "object",
                            {
                              "bootstrapService": [
                                "object",
                                {
                                  "ipFamilies": [
                                    "list",
                                    "string"
                                  ],
                                  "ipFamilyPolicy": "string",
                                  "metadata": [
                                    "object",
                                    {
                                      "annotations": "dynamic",
                                      "labels": "dynamic"
                                    }
                                  ]
                                }
                              ],
                              "brokersService": [
                                "object",
                                {
                                  "ipFamilies": [
                                    "list",
                                    "string"
                                  ],
                                  "ipFamilyPolicy": "string",
                                  "metadata": [
                                    "object",
                                    {
                                      "annotations": "dynamic",
                                      "labels": "dynamic"
                                    }
                                  ]
                                }
                              ],
                              "clusterCaCert": [
                                "object",
                                {
                                  "metadata": [
                                    "object",
                                    {
                                      "annotations": "dynamic",
                                      "labels": "dynamic"
                                    }
                                  ]
                                }
                              ],
                              "clusterRoleBinding": [
                                "object",
                                {
                                  "metadata": [
                                    "object",
                                    {
                                      "annotations": "dynamic",
                                      "labels": "dynamic"
                                    }
                                  ]
                                }
                              ],
                              "externalBootstrapIngress": [
                                "object",
                                {
                                  "metadata": [
                                    "object",
                                    {
                                      "annotations": "dynamic",
                                      "labels": "dynamic"
                                    }
                                  ]
                                }
                              ],
                              "externalBootstrapRoute": [
                                "object",
                                {
                                  "metadata": [
                                    "object",
                                    {
                                      "annotations": "dynamic",
                                      "labels": "dynamic"
                                    }
                                  ]
                                }
                              ],
                              "externalBootstrapService": [
                                "object",
                                {
                                  "metadata": [
                                    "object",
                                    {
                                      "annotations": "dynamic",
                                      "labels": "dynamic"
                                    }
                                  ]
                                }
                              ],
                              "initContainer": [
                                "object",
                                {
                                  "env": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "name": "string",
                                        "value": "string"
                                      }
                                    ]
                                  ],
                                  "securityContext": [
                                    "object",
                                    {
                                      "allowPrivilegeEscalation": "bool",
                                      "capabilities": [
                                        "object",
                                        {
                                          "add": [
                                            "list",
                                            "string"
                                          ],
                                          "drop": [
                                            "list",
                                            "string"
                                          ]
                                        }
                                      ],
                                      "privileged": "bool",
                                      "procMount": "string",
                                      "readOnlyRootFilesystem": "bool",
                                      "runAsGroup": "number",
                                      "runAsNonRoot": "bool",
                                      "runAsUser": "number",
                                      "seLinuxOptions": [
                                        "object",
                                        {
                                          "level": "string",
                                          "role": "string",
                                          "type": "string",
                                          "user": "string"
                                        }
                                      ],
                                      "seccompProfile": [
                                        "object",
                                        {
                                          "localhostProfile": "string",
                                          "type": "string"
                                        }
                                      ],
                                      "windowsOptions": [
                                        "object",
                                        {
                                          "gmsaCredentialSpec": "string",
                                          "gmsaCredentialSpecName": "string",
                                          "hostProcess": "bool",
                                          "runAsUserName": "string"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "jmxSecret": [
                                "object",
                                {
                                  "metadata": [
                                    "object",
                                    {
                                      "annotations": "dynamic",
                                      "labels": "dynamic"
                                    }
                                  ]
                                }
                              ],
                              "kafkaContainer": [
                                "object",
                                {
                                  "env": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "name": "string",
                                        "value": "string"
                                      }
                                    ]
                                  ],
                                  "securityContext": [
                                    "object",
                                    {
                                      "allowPrivilegeEscalation": "bool",
                                      "capabilities": [
                                        "object",
                                        {
                                          "add": [
                                            "list",
                                            "string"
                                          ],
                                          "drop": [
                                            "list",
                                            "string"
                                          ]
                                        }
                                      ],
                                      "privileged": "bool",
                                      "procMount": "string",
                                      "readOnlyRootFilesystem": "bool",
                                      "runAsGroup": "number",
                                      "runAsNonRoot": "bool",
                                      "runAsUser": "number",
                                      "seLinuxOptions": [
                                        "object",
                                        {
                                          "level": "string",
                                          "role": "string",
                                          "type": "string",
                                          "user": "string"
                                        }
                                      ],
                                      "seccompProfile": [
                                        "object",
                                        {
                                          "localhostProfile": "string",
                                          "type": "string"
                                        }
                                      ],
                                      "windowsOptions": [
                                        "object",
                                        {
                                          "gmsaCredentialSpec": "string",
                                          "gmsaCredentialSpecName": "string",
                                          "hostProcess": "bool",
                                          "runAsUserName": "string"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "perPodIngress": [
                                "object",
                                {
                                  "metadata": [
                                    "object",
                                    {
                                      "annotations": "dynamic",
                                      "labels": "dynamic"
                                    }
                                  ]
                                }
                              ],
                              "perPodRoute": [
                                "object",
                                {
                                  "metadata": [
                                    "object",
                                    {
                                      "annotations": "dynamic",
                                      "labels": "dynamic"
                                    }
                                  ]
                                }
                              ],
                              "perPodService": [
                                "object",
                                {
                                  "metadata": [
                                    "object",
                                    {
                                      "annotations": "dynamic",
                                      "labels": "dynamic"
                                    }
                                  ]
                                }
                              ],
                              "persistentVolumeClaim": [
                                "object",
                                {
                                  "metadata": [
                                    "object",
                                    {
                                      "annotations": "dynamic",
                                      "labels": "dynamic"
                                    }
                                  ]
                                }
                              ],
                              "pod": [
                                "object",
                                {
                                  "affinity": [
                                    "object",
                                    {
                                      "nodeAffinity": [
                                        "object",
                                        {
                                          "preferredDuringSchedulingIgnoredDuringExecution": [
                                            "list",
                                            [
                                              "object",
                                              {
                                                "preference": [
                                                  "object",
                                                  {
                                                    "matchExpressions": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "key": "string",
                                                          "operator": "string",
                                                          "values": [
                                                            "list",
                                                            "string"
                                                          ]
                                                        }
                                                      ]
                                                    ],
                                                    "matchFields": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "key": "string",
                                                          "operator": "string",
                                                          "values": [
                                                            "list",
                                                            "string"
                                                          ]
                                                        }
                                                      ]
                                                    ]
                                                  }
                                                ],
                                                "weight": "number"
                                              }
                                            ]
                                          ],
                                          "requiredDuringSchedulingIgnoredDuringExecution": [
                                            "object",
                                            {
                                              "nodeSelectorTerms": [
                                                "list",
                                                [
                                                  "object",
                                                  {
                                                    "matchExpressions": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "key": "string",
                                                          "operator": "string",
                                                          "values": [
                                                            "list",
                                                            "string"
                                                          ]
                                                        }
                                                      ]
                                                    ],
                                                    "matchFields": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "key": "string",
                                                          "operator": "string",
                                                          "values": [
                                                            "list",
                                                            "string"
                                                          ]
                                                        }
                                                      ]
                                                    ]
                                                  }
                                                ]
                                              ]
                                            }
                                          ]
                                        }
                                      ],
                                      "podAffinity": [
                                        "object",
                                        {
                                          "preferredDuringSchedulingIgnoredDuringExecution": [
                                            "tuple",
                                            [
                                              [
                                                "object",
                                                {
                                                  "podAffinityTerm": [
                                                    "object",
                                                    {
                                                      "labelSelector": [
                                                        "object",
                                                        {
                                                          "matchExpressions": [
                                                            "list",
                                                            [
                                                              "object",
                                                              {
                                                                "key": "string",
                                                                "operator": "string",
                                                                "values": [
                                                                  "list",
                                                                  "string"
                                                                ]
                                                              }
                                                            ]
                                                          ],
                                                          "matchLabels": "dynamic"
                                                        }
                                                      ],
                                                      "namespaceSelector": [
                                                        "object",
                                                        {
                                                          "matchExpressions": [
                                                            "list",
                                                            [
                                                              "object",
                                                              {
                                                                "key": "string",
                                                                "operator": "string",
                                                                "values": [
                                                                  "list",
                                                                  "string"
                                                                ]
                                                              }
                                                            ]
                                                          ],
                                                          "matchLabels": "dynamic"
                                                        }
                                                      ],
                                                      "namespaces": [
                                                        "list",
                                                        "string"
                                                      ],
                                                      "topologyKey": "string"
                                                    }
                                                  ],
                                                  "weight": "number"
                                                }
                                              ]
                                            ]
                                          ],
                                          "requiredDuringSchedulingIgnoredDuringExecution": [
                                            "tuple",
                                            [
                                              [
                                                "object",
                                                {
                                                  "labelSelector": [
                                                    "object",
                                                    {
                                                      "matchExpressions": [
                                                        "list",
                                                        [
                                                          "object",
                                                          {
                                                            "key": "string",
                                                            "operator": "string",
                                                            "values": [
                                                              "list",
                                                              "string"
                                                            ]
                                                          }
                                                        ]
                                                      ],
                                                      "matchLabels": "dynamic"
                                                    }
                                                  ],
                                                  "namespaceSelector": [
                                                    "object",
                                                    {
                                                      "matchExpressions": [
                                                        "list",
                                                        [
                                                          "object",
                                                          {
                                                            "key": "string",
                                                            "operator": "string",
                                                            "values": [
                                                              "list",
                                                              "string"
                                                            ]
                                                          }
                                                        ]
                                                      ],
                                                      "matchLabels": "dynamic"
                                                    }
                                                  ],
                                                  "namespaces": [
                                                    "list",
                                                    "string"
                                                  ],
                                                  "topologyKey": "string"
                                                }
                                              ]
                                            ]
                                          ]
                                        }
                                      ],
                                      "podAntiAffinity": [
                                        "object",
                                        {
                                          "preferredDuringSchedulingIgnoredDuringExecution": [
                                            "tuple",
                                            [
                                              [
                                                "object",
                                                {
                                                  "podAffinityTerm": [
                                                    "object",
                                                    {
                                                      "labelSelector": [
                                                        "object",
                                                        {
                                                          "matchExpressions": [
                                                            "list",
                                                            [
                                                              "object",
                                                              {
                                                                "key": "string",
                                                                "operator": "string",
                                                                "values": [
                                                                  "list",
                                                                  "string"
                                                                ]
                                                              }
                                                            ]
                                                          ],
                                                          "matchLabels": "dynamic"
                                                        }
                                                      ],
                                                      "namespaceSelector": [
                                                        "object",
                                                        {
                                                          "matchExpressions": [
                                                            "list",
                                                            [
                                                              "object",
                                                              {
                                                                "key": "string",
                                                                "operator": "string",
                                                                "values": [
                                                                  "list",
                                                                  "string"
                                                                ]
                                                              }
                                                            ]
                                                          ],
                                                          "matchLabels": "dynamic"
                                                        }
                                                      ],
                                                      "namespaces": [
                                                        "list",
                                                        "string"
                                                      ],
                                                      "topologyKey": "string"
                                                    }
                                                  ],
                                                  "weight": "number"
                                                }
                                              ]
                                            ]
                                          ],
                                          "requiredDuringSchedulingIgnoredDuringExecution": [
                                            "tuple",
                                            [
                                              [
                                                "object",
                                                {
                                                  "labelSelector": [
                                                    "object",
                                                    {
                                                      "matchExpressions": [
                                                        "list",
                                                        [
                                                          "object",
                                                          {
                                                            "key": "string",
                                                            "operator": "string",
                                                            "values": [
                                                              "list",
                                                              "string"
                                                            ]
                                                          }
                                                        ]
                                                      ],
                                                      "matchLabels": "dynamic"
                                                    }
                                                  ],
                                                  "namespaceSelector": [
                                                    "object",
                                                    {
                                                      "matchExpressions": [
                                                        "list",
                                                        [
                                                          "object",
                                                          {
                                                            "key": "string",
                                                            "operator": "string",
                                                            "values": [
                                                              "list",
                                                              "string"
                                                            ]
                                                          }
                                                        ]
                                                      ],
                                                      "matchLabels": "dynamic"
                                                    }
                                                  ],
                                                  "namespaces": [
                                                    "list",
                                                    "string"
                                                  ],
                                                  "topologyKey": "string"
                                                }
                                              ]
                                            ]
                                          ]
                                        }
                                      ]
                                    }
                                  ],
                                  "enableServiceLinks": "bool",
                                  "hostAliases": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "hostnames": [
                                          "list",
                                          "string"
                                        ],
                                        "ip": "string"
                                      }
                                    ]
                                  ],
                                  "imagePullSecrets": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "name": "string"
                                      }
                                    ]
                                  ],
                                  "metadata": [
                                    "object",
                                    {
                                      "annotations": "dynamic",
                                      "labels": "dynamic"
                                    }
                                  ],
                                  "priorityClassName": "string",
                                  "schedulerName": "string",
                                  "securityContext": [
                                    "object",
                                    {
                                      "fsGroup": "number",
                                      "fsGroupChangePolicy": "string",
                                      "runAsGroup": "number",
                                      "runAsNonRoot": "bool",
                                      "runAsUser": "number",
                                      "seLinuxOptions": [
                                        "object",
                                        {
                                          "level": "string",
                                          "role": "string",
                                          "type": "string",
                                          "user": "string"
                                        }
                                      ],
                                      "seccompProfile": [
                                        "object",
                                        {
                                          "localhostProfile": "string",
                                          "type": "string"
                                        }
                                      ],
                                      "supplementalGroups": [
                                        "list",
                                        "number"
                                      ],
                                      "sysctls": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "name": "string",
                                            "value": "string"
                                          }
                                        ]
                                      ],
                                      "windowsOptions": [
                                        "object",
                                        {
                                          "gmsaCredentialSpec": "string",
                                          "gmsaCredentialSpecName": "string",
                                          "hostProcess": "bool",
                                          "runAsUserName": "string"
                                        }
                                      ]
                                    }
                                  ],
                                  "terminationGracePeriodSeconds": "number",
                                  "tmpDirSizeLimit": "string",
                                  "tolerations": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "effect": "string",
                                        "key": "string",
                                        "operator": "string",
                                        "tolerationSeconds": "number",
                                        "value": "string"
                                      }
                                    ]
                                  ],
                                  "topologySpreadConstraints": [
                                    "tuple",
                                    [
                                      [
                                        "object",
                                        {
                                          "labelSelector": [
                                            "object",
                                            {
                                              "matchExpressions": [
                                                "list",
                                                [
                                                  "object",
                                                  {
                                                    "key": "string",
                                                    "operator": "string",
                                                    "values": [
                                                      "list",
                                                      "string"
                                                    ]
                                                  }
                                                ]
                                              ],
                                              "matchLabels": "dynamic"
                                            }
                                          ],
                                          "matchLabelKeys": [
                                            "list",
                                            "string"
                                          ],
                                          "maxSkew": "number",
                                          "minDomains": "number",
                                          "nodeAffinityPolicy": "string",
                                          "nodeTaintsPolicy": "string",
                                          "topologyKey": "string",
                                          "whenUnsatisfiable": "string"
                                        }
                                      ]
                                    ]
                                  ]
                                }
                              ],
                              "podDisruptionBudget": [
                                "object",
                                {
                                  "maxUnavailable": "number",
                                  "metadata": [
                                    "object",
                                    {
                                      "annotations": "dynamic",
                                      "labels": "dynamic"
                                    }
                                  ]
                                }
                              ],
                              "podSet": [
                                "object",
                                {
                                  "metadata": [
                                    "object",
                                    {
                                      "annotations": "dynamic",
                                      "labels": "dynamic"
                                    }
                                  ]
                                }
                              ],
                              "serviceAccount": [
                                "object",
                                {
                                  "metadata": [
                                    "object",
                                    {
                                      "annotations": "dynamic",
                                      "labels": "dynamic"
                                    }
                                  ]
                                }
                              ],
                              "statefulset": [
                                "object",
                                {
                                  "metadata": [
                                    "object",
                                    {
                                      "annotations": "dynamic",
                                      "labels": "dynamic"
                                    }
                                  ],
                                  "podManagementPolicy": "string"
                                }
                              ]
                            }
                          ],
                          "version": "string"
                        }
                      ],
                      "kafkaExporter": [
                        "object",
                        {
                          "enableSaramaLogging": "bool",
                          "groupRegex": "string",
                          "image": "string",
                          "livenessProbe": [
                            "object",
                            {
                              "failureThreshold": "number",
                              "initialDelaySeconds": "number",
                              "periodSeconds": "number",
                              "successThreshold": "number",
                              "timeoutSeconds": "number"
                            }
                          ],
                          "logging": "string",
                          "readinessProbe": [
                            "object",
                            {
                              "failureThreshold": "number",
                              "initialDelaySeconds": "number",
                              "periodSeconds": "number",
                              "successThreshold": "number",
                              "timeoutSeconds": "number"
                            }
                          ],
                          "resources": [
                            "object",
                            {
                              "limits": "dynamic",
                              "requests": "dynamic"
                            }
                          ],
                          "template": [
                            "object",
                            {
                              "container": [
                                "object",
                                {
                                  "env": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "name": "string",
                                        "value": "string"
                                      }
                                    ]
                                  ],
                                  "securityContext": [
                                    "object",
                                    {
                                      "allowPrivilegeEscalation": "bool",
                                      "capabilities": [
                                        "object",
                                        {
                                          "add": [
                                            "list",
                                            "string"
                                          ],
                                          "drop": [
                                            "list",
                                            "string"
                                          ]
                                        }
                                      ],
                                      "privileged": "bool",
                                      "procMount": "string",
                                      "readOnlyRootFilesystem": "bool",
                                      "runAsGroup": "number",
                                      "runAsNonRoot": "bool",
                                      "runAsUser": "number",
                                      "seLinuxOptions": [
                                        "object",
                                        {
                                          "level": "string",
                                          "role": "string",
                                          "type": "string",
                                          "user": "string"
                                        }
                                      ],
                                      "seccompProfile": [
                                        "object",
                                        {
                                          "localhostProfile": "string",
                                          "type": "string"
                                        }
                                      ],
                                      "windowsOptions": [
                                        "object",
                                        {
                                          "gmsaCredentialSpec": "string",
                                          "gmsaCredentialSpecName": "string",
                                          "hostProcess": "bool",
                                          "runAsUserName": "string"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ],
                              "deployment": [
                                "object",
                                {
                                  "deploymentStrategy": "string",
                                  "metadata": [
                                    "object",
                                    {
                                      "annotations": "dynamic",
                                      "labels": "dynamic"
                                    }
                                  ]
                                }
                              ],
                              "pod": [
                                "object",
                                {
                                  "affinity": [
                                    "object",
                                    {
                                      "nodeAffinity": [
                                        "object",
                                        {
                                          "preferredDuringSchedulingIgnoredDuringExecution": [
                                            "list",
                                            [
                                              "object",
                                              {
                                                "preference": [
                                                  "object",
                                                  {
                                                    "matchExpressions": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "key": "string",
                                                          "operator": "string",
                                                          "values": [
                                                            "list",
                                                            "string"
                                                          ]
                                                        }
                                                      ]
                                                    ],
                                                    "matchFields": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "key": "string",
                                                          "operator": "string",
                                                          "values": [
                                                            "list",
                                                            "string"
                                                          ]
                                                        }
                                                      ]
                                                    ]
                                                  }
                                                ],
                                                "weight": "number"
                                              }
                                            ]
                                          ],
                                          "requiredDuringSchedulingIgnoredDuringExecution": [
                                            "object",
                                            {
                                              "nodeSelectorTerms": [
                                                "list",
                                                [
                                                  "object",
                                                  {
                                                    "matchExpressions": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "key": "string",
                                                          "operator": "string",
                                                          "values": [
                                                            "list",
                                                            "string"
                                                          ]
                                                        }
                                                      ]
                                                    ],
                                                    "matchFields": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "key": "string",
                                                          "operator": "string",
                                                          "values": [
                                                            "list",
                                                            "string"
                                                          ]
                                                        }
                                                      ]
                                                    ]
                                                  }
                                                ]
                                              ]
                                            }
                                          ]
                                        }
                                      ],
                                      "podAffinity": [
                                        "object",
                                        {
                                          "preferredDuringSchedulingIgnoredDuringExecution": [
                                            "tuple",
                                            [
                                              [
                                                "object",
                                                {
                                                  "podAffinityTerm": [
                                                    "object",
                                                    {
                                                      "labelSelector": [
                                                        "object",
                                                        {
                                                          "matchExpressions": [
                                                            "list",
                                                            [
                                                              "object",
                                                              {
                                                                "key": "string",
                                                                "operator": "string",
                                                                "values": [
                                                                  "list",
                                                                  "string"
                                                                ]
                                                              }
                                                            ]
                                                          ],
                                                          "matchLabels": "dynamic"
                                                        }
                                                      ],
                                                      "namespaceSelector": [
                                                        "object",
                                                        {
                                                          "matchExpressions": [
                                                            "list",
                                                            [
                                                              "object",
                                                              {
                                                                "key": "string",
                                                                "operator": "string",
                                                                "values": [
                                                                  "list",
                                                                  "string"
                                                                ]
                                                              }
                                                            ]
                                                          ],
                                                          "matchLabels": "dynamic"
                                                        }
                                                      ],
                                                      "namespaces": [
                                                        "list",
                                                        "string"
                                                      ],
                                                      "topologyKey": "string"
                                                    }
                                                  ],
                                                  "weight": "number"
                                                }
                                              ]
                                            ]
                                          ],
                                          "requiredDuringSchedulingIgnoredDuringExecution": [
                                            "tuple",
                                            [
                                              [
                                                "object",
                                                {
                                                  "labelSelector": [
                                                    "object",
                                                    {
                                                      "matchExpressions": [
                                                        "list",
                                                        [
                                                          "object",
                                                          {
                                                            "key": "string",
                                                            "operator": "string",
                                                            "values": [
                                                              "list",
                                                              "string"
                                                            ]
                                                          }
                                                        ]
                                                      ],
                                                      "matchLabels": "dynamic"
                                                    }
                                                  ],
                                                  "namespaceSelector": [
                                                    "object",
                                                    {
                                                      "matchExpressions": [
                                                        "list",
                                                        [
                                                          "object",
                                                          {
                                                            "key": "string",
                                                            "operator": "string",
                                                            "values": [
                                                              "list",
                                                              "string"
                                                            ]
                                                          }
                                                        ]
                                                      ],
                                                      "matchLabels": "dynamic"
                                                    }
                                                  ],
                                                  "namespaces": [
                                                    "list",
                                                    "string"
                                                  ],
                                                  "topologyKey": "string"
                                                }
                                              ]
                                            ]
                                          ]
                                        }
                                      ],
                                      "podAntiAffinity": [
                                        "object",
                                        {
                                          "preferredDuringSchedulingIgnoredDuringExecution": [
                                            "tuple",
                                            [
                                              [
                                                "object",
                                                {
                                                  "podAffinityTerm": [
                                                    "object",
                                                    {
                                                      "labelSelector": [
                                                        "object",
                                                        {
                                                          "matchExpressions": [
                                                            "list",
                                                            [
                                                              "object",
                                                              {
                                                                "key": "string",
                                                                "operator": "string",
                                                                "values": [
                                                                  "list",
                                                                  "string"
                                                                ]
                                                              }
                                                            ]
                                                          ],
                                                          "matchLabels": "dynamic"
                                                        }
                                                      ],
                                                      "namespaceSelector": [
                                                        "object",
                                                        {
                                                          "matchExpressions": [
                                                            "list",
                                                            [
                                                              "object",
                                                              {
                                                                "key": "string",
                                                                "operator": "string",
                                                                "values": [
                                                                  "list",
                                                                  "string"
                                                                ]
                                                              }
                                                            ]
                                                          ],
                                                          "matchLabels": "dynamic"
                                                        }
                                                      ],
                                                      "namespaces": [
                                                        "list",
                                                        "string"
                                                      ],
                                                      "topologyKey": "string"
                                                    }
                                                  ],
                                                  "weight": "number"
                                                }
                                              ]
                                            ]
                                          ],
                                          "requiredDuringSchedulingIgnoredDuringExecution": [
                                            "tuple",
                                            [
                                              [
                                                "object",
                                                {
                                                  "labelSelector": [
                                                    "object",
                                                    {
                                                      "matchExpressions": [
                                                        "list",
                                                        [
                                                          "object",
                                                          {
                                                            "key": "string",
                                                            "operator": "string",
                                                            "values": [
                                                              "list",
                                                              "string"
                                                            ]
                                                          }
                                                        ]
                                                      ],
                                                      "matchLabels": "dynamic"
                                                    }
                                                  ],
                                                  "namespaceSelector": [
                                                    "object",
                                                    {
                                                      "matchExpressions": [
                                                        "list",
                                                        [
                                                          "object",
                                                          {
                                                            "key": "string",
                                                            "operator": "string",
                                                            "values": [
                                                              "list",
                                                              "string"
                                                            ]
                                                          }
                                                        ]
                                                      ],
                                                      "matchLabels": "dynamic"
                                                    }
                                                  ],
                                                  "namespaces": [
                                                    "list",
                                                    "string"
                                                  ],
                                                  "topologyKey": "string"
                                                }
                                              ]
                                            ]
                                          ]
                                        }
                                      ]
                                    }
                                  ],
                                  "enableServiceLinks": "bool",
                                  "hostAliases": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "hostnames": [
                                          "list",
                                          "string"
                                        ],
                                        "ip": "string"
                                      }
                                    ]
                                  ],
                                  "imagePullSecrets": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "name": "string"
                                      }
                                    ]
                                  ],
                                  "metadata": [
                                    "object",
                                    {
                                      "annotations": "dynamic",
                                      "labels": "dynamic"
                                    }
                                  ],
                                  "priorityClassName": "string",
                                  "schedulerName": "string",
                                  "securityContext": [
                                    "object",
                                    {
                                      "fsGroup": "number",
                                      "fsGroupChangePolicy": "string",
                                      "runAsGroup": "number",
                                      "runAsNonRoot": "bool",
                                      "runAsUser": "number",
                                      "seLinuxOptions": [
                                        "object",
                                        {
                                          "level": "string",
                                          "role": "string",
                                          "type": "string",
                                          "user": "string"
                                        }
                                      ],
                                      "seccompProfile": [
                                        "object",
                                        {
                                          "localhostProfile": "string",
                                          "type": "string"
                                        }
                                      ],
                                      "supplementalGroups": [
                                        "list",
                                        "number"
                                      ],
                                      "sysctls": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "name": "string",
                                            "value": "string"
                                          }
                                        ]
                                      ],
                                      "windowsOptions": [
                                        "object",
                                        {
                                          "gmsaCredentialSpec": "string",
                                          "gmsaCredentialSpecName": "string",
                                          "hostProcess": "bool",
                                          "runAsUserName": "string"
                                        }
                                      ]
                                    }
                                  ],
                                  "terminationGracePeriodSeconds": "number",
                                  "tmpDirSizeLimit": "string",
                                  "tolerations": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "effect": "string",
                                        "key": "string",
                                        "operator": "string",
                                        "tolerationSeconds": "number",
                                        "value": "string"
                                      }
                                    ]
                                  ],
                                  "topologySpreadConstraints": [
                                    "tuple",
                                    [
                                      [
                                        "object",
                                        {
                                          "labelSelector": [
                                            "object",
                                            {
                                              "matchExpressions": [
                                                "list",
                                                [
                                                  "object",
                                                  {
                                                    "key": "string",
                                                    "operator": "string",
                                                    "values": [
                                                      "list",
                                                      "string"
                                                    ]
                                                  }
                                                ]
                                              ],
                                              "matchLabels": "dynamic"
                                            }
                                          ],
                                          "matchLabelKeys": [
                                            "list",
                                            "string"
                                          ],
                                          "maxSkew": "number",
                                          "minDomains": "number",
                                          "nodeAffinityPolicy": "string",
                                          "nodeTaintsPolicy": "string",
                                          "topologyKey": "string",
                                          "whenUnsatisfiable": "string"
                                        }
                                      ]
                                    ]
                                  ]
                                }
                              ],
                              "service": [
                                "object",
                                {
                                  "metadata": [
                                    "object",
                                    {
                                      "annotations": "dynamic",
                                      "labels": "dynamic"
                                    }
                                  ]
                                }
                              ],
                              "serviceAccount": [
                                "object",
                                {
                                  "metadata": [
                                    "object",
                                    {
                                      "annotations": "dynamic",
                                      "labels": "dynamic"
                                    }
                                  ]
                                }
                              ]
                            }
                          ],
                          "topicRegex": "string"
                        }
                      ],
                      "maintenanceTimeWindows": [
                        "list",
                        "string"
                      ],
                      "zookeeper": [
                        "object",
                        {
                          "config": "dynamic",
                          "image": "string",
                          "jmxOptions": [
                            "object",
                            {
                              "authentication": [
                                "object",
                                {
                                  "type": "string"
                                }
                              ]
                            }
                          ],
                          "jvmOptions": [
                            "object",
                            {
                              "-XX": "dynamic",
                              "-Xms": "string",
                              "-Xmx": "string",
                              "gcLoggingEnabled": "bool",
                              "javaSystemProperties": [
                                "list",
                                [
                                  "object",
                                  {
                                    "name": "string",
                                    "value": "string"
                                  }
                                ]
                              ]
                            }
                          ],
                          "livenessProbe": [
                            "object",
                            {
                              "failureThreshold": "number",
                              "initialDelaySeconds": "number",
                              "periodSeconds": "number",
                              "successThreshold": "number",
                              "timeoutSeconds": "number"
                            }
                          ],
                          "logging": [
                            "object",
                            {
                              "loggers": "dynamic",
                              "type": "string",
                              "valueFrom": [
                                "object",
                                {
                                  "configMapKeyRef": [
                                    "object",
                                    {
                                      "key": "string",
                                      "name": "string",
                                      "optional": "bool"
                                    }
                                  ]
                                }
                              ]
                            }
                          ],
                          "metricsConfig": [
                            "object",
                            {
                              "type": "string",
                              "valueFrom": [
                                "object",
                                {
                                  "configMapKeyRef": [
                                    "object",
                                    {
                                      "key": "string",
                                      "name": "string",
                                      "optional": "bool"
                                    }
                                  ]
                                }
                              ]
                            }
                          ],
                          "readinessProbe": [
                            "object",
                            {
                              "failureThreshold": "number",
                              "initialDelaySeconds": "number",
                              "periodSeconds": "number",
                              "successThreshold": "number",
                              "timeoutSeconds": "number"
                            }
                          ],
                          "replicas": "number",
                          "resources": [
                            "object",
                            {
                              "limits": "dynamic",
                              "requests": "dynamic"
                            }
                          ],
                          "storage": [
                            "object",
                            {
                              "class": "string",
                              "deleteClaim": "bool",
                              "id": "number",
                              "overrides": [
                                "list",
                                [
                                  "object",
                                  {
                                    "broker": "number",
                                    "class": "string"
                                  }
                                ]
                              ],
                              "selector": "dynamic",
                              "size": "string",
                              "sizeLimit": "string",
                              "type": "string"
                            }
                          ],
                          "template": [
                            "object",
                            {
                              "clientService": [
                                "object",
                                {
                                  "ipFamilies": [
                                    "list",
                                    "string"
                                  ],
                                  "ipFamilyPolicy": "string",
                                  "metadata": [
                                    "object",
                                    {
                                      "annotations": "dynamic",
                                      "labels": "dynamic"
                                    }
                                  ]
                                }
                              ],
                              "jmxSecret": [
                                "object",
                                {
                                  "metadata": [
                                    "object",
                                    {
                                      "annotations": "dynamic",
                                      "labels": "dynamic"
                                    }
                                  ]
                                }
                              ],
                              "nodesService": [
                                "object",
                                {
                                  "ipFamilies": [
                                    "list",
                                    "string"
                                  ],
                                  "ipFamilyPolicy": "string",
                                  "metadata": [
                                    "object",
                                    {
                                      "annotations": "dynamic",
                                      "labels": "dynamic"
                                    }
                                  ]
                                }
                              ],
                              "persistentVolumeClaim": [
                                "object",
                                {
                                  "metadata": [
                                    "object",
                                    {
                                      "annotations": "dynamic",
                                      "labels": "dynamic"
                                    }
                                  ]
                                }
                              ],
                              "pod": [
                                "object",
                                {
                                  "affinity": [
                                    "object",
                                    {
                                      "nodeAffinity": [
                                        "object",
                                        {
                                          "preferredDuringSchedulingIgnoredDuringExecution": [
                                            "list",
                                            [
                                              "object",
                                              {
                                                "preference": [
                                                  "object",
                                                  {
                                                    "matchExpressions": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "key": "string",
                                                          "operator": "string",
                                                          "values": [
                                                            "list",
                                                            "string"
                                                          ]
                                                        }
                                                      ]
                                                    ],
                                                    "matchFields": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "key": "string",
                                                          "operator": "string",
                                                          "values": [
                                                            "list",
                                                            "string"
                                                          ]
                                                        }
                                                      ]
                                                    ]
                                                  }
                                                ],
                                                "weight": "number"
                                              }
                                            ]
                                          ],
                                          "requiredDuringSchedulingIgnoredDuringExecution": [
                                            "object",
                                            {
                                              "nodeSelectorTerms": [
                                                "list",
                                                [
                                                  "object",
                                                  {
                                                    "matchExpressions": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "key": "string",
                                                          "operator": "string",
                                                          "values": [
                                                            "list",
                                                            "string"
                                                          ]
                                                        }
                                                      ]
                                                    ],
                                                    "matchFields": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "key": "string",
                                                          "operator": "string",
                                                          "values": [
                                                            "list",
                                                            "string"
                                                          ]
                                                        }
                                                      ]
                                                    ]
                                                  }
                                                ]
                                              ]
                                            }
                                          ]
                                        }
                                      ],
                                      "podAffinity": [
                                        "object",
                                        {
                                          "preferredDuringSchedulingIgnoredDuringExecution": [
                                            "tuple",
                                            [
                                              [
                                                "object",
                                                {
                                                  "podAffinityTerm": [
                                                    "object",
                                                    {
                                                      "labelSelector": [
                                                        "object",
                                                        {
                                                          "matchExpressions": [
                                                            "list",
                                                            [
                                                              "object",
                                                              {
                                                                "key": "string",
                                                                "operator": "string",
                                                                "values": [
                                                                  "list",
                                                                  "string"
                                                                ]
                                                              }
                                                            ]
                                                          ],
                                                          "matchLabels": "dynamic"
                                                        }
                                                      ],
                                                      "namespaceSelector": [
                                                        "object",
                                                        {
                                                          "matchExpressions": [
                                                            "list",
                                                            [
                                                              "object",
                                                              {
                                                                "key": "string",
                                                                "operator": "string",
                                                                "values": [
                                                                  "list",
                                                                  "string"
                                                                ]
                                                              }
                                                            ]
                                                          ],
                                                          "matchLabels": "dynamic"
                                                        }
                                                      ],
                                                      "namespaces": [
                                                        "list",
                                                        "string"
                                                      ],
                                                      "topologyKey": "string"
                                                    }
                                                  ],
                                                  "weight": "number"
                                                }
                                              ]
                                            ]
                                          ],
                                          "requiredDuringSchedulingIgnoredDuringExecution": [
                                            "tuple",
                                            [
                                              [
                                                "object",
                                                {
                                                  "labelSelector": [
                                                    "object",
                                                    {
                                                      "matchExpressions": [
                                                        "list",
                                                        [
                                                          "object",
                                                          {
                                                            "key": "string",
                                                            "operator": "string",
                                                            "values": [
                                                              "list",
                                                              "string"
                                                            ]
                                                          }
                                                        ]
                                                      ],
                                                      "matchLabels": "dynamic"
                                                    }
                                                  ],
                                                  "namespaceSelector": [
                                                    "object",
                                                    {
                                                      "matchExpressions": [
                                                        "list",
                                                        [
                                                          "object",
                                                          {
                                                            "key": "string",
                                                            "operator": "string",
                                                            "values": [
                                                              "list",
                                                              "string"
                                                            ]
                                                          }
                                                        ]
                                                      ],
                                                      "matchLabels": "dynamic"
                                                    }
                                                  ],
                                                  "namespaces": [
                                                    "list",
                                                    "string"
                                                  ],
                                                  "topologyKey": "string"
                                                }
                                              ]
                                            ]
                                          ]
                                        }
                                      ],
                                      "podAntiAffinity": [
                                        "object",
                                        {
                                          "preferredDuringSchedulingIgnoredDuringExecution": [
                                            "tuple",
                                            [
                                              [
                                                "object",
                                                {
                                                  "podAffinityTerm": [
                                                    "object",
                                                    {
                                                      "labelSelector": [
                                                        "object",
                                                        {
                                                          "matchExpressions": [
                                                            "list",
                                                            [
                                                              "object",
                                                              {
                                                                "key": "string",
                                                                "operator": "string",
                                                                "values": [
                                                                  "list",
                                                                  "string"
                                                                ]
                                                              }
                                                            ]
                                                          ],
                                                          "matchLabels": "dynamic"
                                                        }
                                                      ],
                                                      "namespaceSelector": [
                                                        "object",
                                                        {
                                                          "matchExpressions": [
                                                            "list",
                                                            [
                                                              "object",
                                                              {
                                                                "key": "string",
                                                                "operator": "string",
                                                                "values": [
                                                                  "list",
                                                                  "string"
                                                                ]
                                                              }
                                                            ]
                                                          ],
                                                          "matchLabels": "dynamic"
                                                        }
                                                      ],
                                                      "namespaces": [
                                                        "list",
                                                        "string"
                                                      ],
                                                      "topologyKey": "string"
                                                    }
                                                  ],
                                                  "weight": "number"
                                                }
                                              ]
                                            ]
                                          ],
                                          "requiredDuringSchedulingIgnoredDuringExecution": [
                                            "tuple",
                                            [
                                              [
                                                "object",
                                                {
                                                  "labelSelector": [
                                                    "object",
                                                    {
                                                      "matchExpressions": [
                                                        "list",
                                                        [
                                                          "object",
                                                          {
                                                            "key": "string",
                                                            "operator": "string",
                                                            "values": [
                                                              "list",
                                                              "string"
                                                            ]
                                                          }
                                                        ]
                                                      ],
                                                      "matchLabels": "dynamic"
                                                    }
                                                  ],
                                                  "namespaceSelector": [
                                                    "object",
                                                    {
                                                      "matchExpressions": [
                                                        "list",
                                                        [
                                                          "object",
                                                          {
                                                            "key": "string",
                                                            "operator": "string",
                                                            "values": [
                                                              "list",
                                                              "string"
                                                            ]
                                                          }
                                                        ]
                                                      ],
                                                      "matchLabels": "dynamic"
                                                    }
                                                  ],
                                                  "namespaces": [
                                                    "list",
                                                    "string"
                                                  ],
                                                  "topologyKey": "string"
                                                }
                                              ]
                                            ]
                                          ]
                                        }
                                      ]
                                    }
                                  ],
                                  "enableServiceLinks": "bool",
                                  "hostAliases": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "hostnames": [
                                          "list",
                                          "string"
                                        ],
                                        "ip": "string"
                                      }
                                    ]
                                  ],
                                  "imagePullSecrets": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "name": "string"
                                      }
                                    ]
                                  ],
                                  "metadata": [
                                    "object",
                                    {
                                      "annotations": "dynamic",
                                      "labels": "dynamic"
                                    }
                                  ],
                                  "priorityClassName": "string",
                                  "schedulerName": "string",
                                  "securityContext": [
                                    "object",
                                    {
                                      "fsGroup": "number",
                                      "fsGroupChangePolicy": "string",
                                      "runAsGroup": "number",
                                      "runAsNonRoot": "bool",
                                      "runAsUser": "number",
                                      "seLinuxOptions": [
                                        "object",
                                        {
                                          "level": "string",
                                          "role": "string",
                                          "type": "string",
                                          "user": "string"
                                        }
                                      ],
                                      "seccompProfile": [
                                        "object",
                                        {
                                          "localhostProfile": "string",
                                          "type": "string"
                                        }
                                      ],
                                      "supplementalGroups": [
                                        "list",
                                        "number"
                                      ],
                                      "sysctls": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "name": "string",
                                            "value": "string"
                                          }
                                        ]
                                      ],
                                      "windowsOptions": [
                                        "object",
                                        {
                                          "gmsaCredentialSpec": "string",
                                          "gmsaCredentialSpecName": "string",
                                          "hostProcess": "bool",
                                          "runAsUserName": "string"
                                        }
                                      ]
                                    }
                                  ],
                                  "terminationGracePeriodSeconds": "number",
                                  "tmpDirSizeLimit": "string",
                                  "tolerations": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "effect": "string",
                                        "key": "string",
                                        "operator": "string",
                                        "tolerationSeconds": "number",
                                        "value": "string"
                                      }
                                    ]
                                  ],
                                  "topologySpreadConstraints": [
                                    "tuple",
                                    [
                                      [
                                        "object",
                                        {
                                          "labelSelector": [
                                            "object",
                                            {
                                              "matchExpressions": [
                                                "list",
                                                [
                                                  "object",
                                                  {
                                                    "key": "string",
                                                    "operator": "string",
                                                    "values": [
                                                      "list",
                                                      "string"
                                                    ]
                                                  }
                                                ]
                                              ],
                                              "matchLabels": "dynamic"
                                            }
                                          ],
                                          "matchLabelKeys": [
                                            "list",
                                            "string"
                                          ],
                                          "maxSkew": "number",
                                          "minDomains": "number",
                                          "nodeAffinityPolicy": "string",
                                          "nodeTaintsPolicy": "string",
                                          "topologyKey": "string",
                                          "whenUnsatisfiable": "string"
                                        }
                                      ]
                                    ]
                                  ]
                                }
                              ],
                              "podDisruptionBudget": [
                                "object",
                                {
                                  "maxUnavailable": "number",
                                  "metadata": [
                                    "object",
                                    {
                                      "annotations": "dynamic",
                                      "labels": "dynamic"
                                    }
                                  ]
                                }
                              ],
                              "podSet": [
                                "object",
                                {
                                  "metadata": [
                                    "object",
                                    {
                                      "annotations": "dynamic",
                                      "labels": "dynamic"
                                    }
                                  ]
                                }
                              ],
                              "serviceAccount": [
                                "object",
                                {
                                  "metadata": [
                                    "object",
                                    {
                                      "annotations": "dynamic",
                                      "labels": "dynamic"
                                    }
                                  ]
                                }
                              ],
                              "statefulset": [
                                "object",
                                {
                                  "metadata": [
                                    "object",
                                    {
                                      "annotations": "dynamic",
                                      "labels": "dynamic"
                                    }
                                  ],
                                  "podManagementPolicy": "string"
                                }
                              ],
                              "zookeeperContainer": [
                                "object",
                                {
                                  "env": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "name": "string",
                                        "value": "string"
                                      }
                                    ]
                                  ],
                                  "securityContext": [
                                    "object",
                                    {
                                      "allowPrivilegeEscalation": "bool",
                                      "capabilities": [
                                        "object",
                                        {
                                          "add": [
                                            "list",
                                            "string"
                                          ],
                                          "drop": [
                                            "list",
                                            "string"
                                          ]
                                        }
                                      ],
                                      "privileged": "bool",
                                      "procMount": "string",
                                      "readOnlyRootFilesystem": "bool",
                                      "runAsGroup": "number",
                                      "runAsNonRoot": "bool",
                                      "runAsUser": "number",
                                      "seLinuxOptions": [
                                        "object",
                                        {
                                          "level": "string",
                                          "role": "string",
                                          "type": "string",
                                          "user": "string"
                                        }
                                      ],
                                      "seccompProfile": [
                                        "object",
                                        {
                                          "localhostProfile": "string",
                                          "type": "string"
                                        }
                                      ],
                                      "windowsOptions": [
                                        "object",
                                        {
                                          "gmsaCredentialSpec": "string",
                                          "gmsaCredentialSpecName": "string",
                                          "hostProcess": "bool",
                                          "runAsUserName": "string"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "helm_release.strimzi-kafka-operator"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_namespace_v1",
      "name": "operator-namespace",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "operator",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "operator",
                "resource_version": "44106",
                "uid": "6d8f651d-ae04-480a-9df0-f3ad95958138"
              }
            ],
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_service_v1",
      "name": "quine-io",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "default/quine-io",
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 0,
                "labels": null,
                "name": "quine-io",
                "namespace": "default",
                "resource_version": "63281",
                "uid": "d7218b65-f016-47a7-8689-779031b37e9c"
              }
            ],
            "spec": [
              {
                "allocate_load_balancer_node_ports": true,
                "cluster_ip": "10.96.20.161",
                "cluster_ips": [
                  "10.96.20.161"
                ],
                "external_ips": null,
                "external_name": "",
                "external_traffic_policy": "Cluster",
                "health_check_node_port": 0,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": null,
                "port": [
                  {
                    "app_protocol": "",
                    "name": "http",
                    "node_port": 31377,
                    "port": 8080,
                    "protocol": "TCP",
                    "target_port": "8080"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app": "quineio"
                },
                "session_affinity": "None",
                "session_affinity_config": [],
                "type": "NodePort"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    }
  ],
  "check_results": null
}
