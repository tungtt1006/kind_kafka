* 
* ==> Audit <==
* |---------|---------|----------|------|---------|---------------------|---------------------|
| Command |  Args   | Profile  | User | Version |     Start Time      |      End Time       |
|---------|---------|----------|------|---------|---------------------|---------------------|
| start   |         | minikube | aro  | v1.28.0 | 07 Dec 22 16:41 +04 |                     |
| start   |         | minikube | aro  | v1.28.0 | 07 Dec 22 16:45 +04 |                     |
| start   |         | minikube | aro  | v1.28.0 | 07 Dec 22 16:52 +04 |                     |
| start   |         | minikube | aro  | v1.28.0 | 07 Dec 22 16:56 +04 | 07 Dec 22 16:56 +04 |
| start   | --force | minikube | aro  | v1.28.0 | 04 Jan 23 17:09 +04 |                     |
|---------|---------|----------|------|---------|---------------------|---------------------|

* 
* ==> Last Start <==
* Log file created at: 2023/01/04 17:09:23
Running on machine: dev
Binary: Built with gc go1.19.2 for linux/amd64
Log line format: [IWEF]mmdd hh:mm:ss.uuuuuu threadid file:line] msg
I0104 17:09:23.500671   30961 out.go:296] Setting OutFile to fd 1 ...
I0104 17:09:23.500780   30961 out.go:348] isatty.IsTerminal(1) = true
I0104 17:09:23.500783   30961 out.go:309] Setting ErrFile to fd 2...
I0104 17:09:23.500787   30961 out.go:348] isatty.IsTerminal(2) = true
I0104 17:09:23.500879   30961 root.go:334] Updating PATH: /home/aro/.minikube/bin
W0104 17:09:23.500990   30961 root.go:311] Error reading config file at /home/aro/.minikube/config/config.json: open /home/aro/.minikube/config/config.json: no such file or directory
I0104 17:09:23.501697   30961 out.go:303] Setting JSON to false
I0104 17:09:23.522099   30961 start.go:116] hostinfo: {"hostname":"dev","uptime":16997,"bootTime":1672820767,"procs":412,"os":"linux","platform":"ubuntu","platformFamily":"debian","platformVersion":"20.04","kernelVersion":"5.15.0-56-generic","kernelArch":"x86_64","virtualizationSystem":"kvm","virtualizationRole":"host","hostId":"ac9dd73d-7b13-489e-947e-32f38a181aff"}
I0104 17:09:23.522207   30961 start.go:126] virtualization: kvm host
I0104 17:09:23.531697   30961 out.go:177] 😄  minikube v1.28.0 on Ubuntu 20.04
I0104 17:09:23.544095   30961 notify.go:220] Checking for updates...
W0104 17:09:23.544119   30961 out.go:239] ❗  minikube skips various validations when --force is supplied; this may lead to unexpected behavior
I0104 17:09:23.544881   30961 config.go:180] Loaded profile config "minikube": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.25.3
I0104 17:09:23.552143   30961 driver.go:365] Setting default libvirt URI to qemu:///system
W0104 17:09:23.579163   30961 docker.go:113] docker version returned error: exit status 1
I0104 17:09:23.586787   30961 out.go:177] ✨  Using the docker driver based on existing profile
I0104 17:09:23.593348   30961 start.go:282] selected driver: docker
I0104 17:09:23.593353   30961 start.go:808] validating driver "docker" against &{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.36@sha256:8debc1b6a335075c5f99bfbf131b4f5566f68c6500dc5991817832e55fcc9456 Memory:3900 CPUs:2 DiskSize:20000 VMDriver: Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.25.3 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin: FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.25.3 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[default-storageclass:true storage-provisioner:true] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/home/aro:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet}
I0104 17:09:23.593435   30961 start.go:819] status for docker: {Installed:true Healthy:false Running:false NeedsImprovement:false Error:"docker version --format {{.Server.Os}}-{{.Server.Version}}" exit status 1: Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running? Reason:PROVIDER_DOCKER_NOT_RUNNING Fix:Start the Docker service Doc:https://minikube.sigs.k8s.io/docs/drivers/docker/ Version:}
I0104 17:09:23.600464   30961 out.go:177] 
W0104 17:09:23.610755   30961 out.go:239] 💣  "docker version --format {{.Server.Os}}-{{.Server.Version}}" exit status 1: Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
W0104 17:09:23.610839   30961 out.go:239] 💡  Suggestion: Start the Docker service
W0104 17:09:23.610894   30961 out.go:239] 📘  Documentation: https://minikube.sigs.k8s.io/docs/drivers/docker/
I0104 17:09:23.617673   30961 out.go:177] 
I0104 17:09:23.633182   30961 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I0104 17:09:24.758493   30961 cli_runner.go:217] Completed: docker system info --format "{{json .}}": (1.125276253s)
I0104 17:09:24.758832   30961 info.go:266] docker info: {ID: Containers:0 ContainersRunning:0 ContainersPaused:0 ContainersStopped:0 Images:0 Driver: DriverStatus:[] SystemStatus:<nil> Plugins:{Volume:[] Network:[] Authorization:<nil> Log:[]} MemoryLimit:false SwapLimit:false KernelMemory:false KernelMemoryTCP:false CPUCfsPeriod:false CPUCfsQuota:false CPUShares:false CPUSet:false PidsLimit:false IPv4Forwarding:false BridgeNfIptables:false BridgeNfIP6Tables:false Debug:false NFd:0 OomKillDisable:false NGoroutines:0 SystemTime:0001-01-01 00:00:00 +0000 UTC LoggingDriver: CgroupDriver: NEventsListener:0 KernelVersion: OperatingSystem: OSType: Architecture: IndexServerAddress: RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[] IndexConfigs:{DockerIo:{Name: Mirrors:[] Secure:false Official:false}} Mirrors:[]} NCPU:0 MemTotal:0 GenericResources:<nil> DockerRootDir: HTTPProxy: HTTPSProxy: NoProxy: Name: Labels:[] ExperimentalBuild:false ServerVersion: ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:}} DefaultRuntime: Swarm:{NodeID: NodeAddr: LocalNodeState: ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary: ContainerdCommit:{ID: Expected:} RuncCommit:{ID: Expected:} InitCommit:{ID: Expected:} SecurityOptions:[] ProductLicense: Warnings:<nil> ServerErrors:[Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?] ClientInfo:{Debug:false Plugins:[map[Experimental:true Name:app Path:/usr/libexec/docker/cli-plugins/docker-app SchemaVersion:0.1.0 ShortDescription:Docker App Vendor:Docker Inc. Version:v0.9.1-beta3] map[Name:buildx Path:/usr/libexec/docker/cli-plugins/docker-buildx SchemaVersion:0.1.0 ShortDescription:Docker Buildx Vendor:Docker Inc. Version:v0.9.1-docker] map[Name:compose Path:/usr/libexec/docker/cli-plugins/docker-compose SchemaVersion:0.1.0 ShortDescription:Docker Compose Vendor:Docker Inc. Version:v2.12.2] map[Name:scan Path:/usr/libexec/docker/cli-plugins/docker-scan SchemaVersion:0.1.0 ShortDescription:Docker Scan Vendor:Docker Inc. Version:v0.21.0]] Warnings:<nil>}}
I0104 17:09:24.765493   30961 out.go:177] 
W0104 17:09:24.771919   30961 out.go:239] ⛔  Requested cpu count 2 is greater than the available cpus of 0
I0104 17:09:24.778233   30961 out.go:177] 
I0104 17:09:24.784798   30961 out.go:177] 
W0104 17:09:24.791303   30961 out.go:239] ⛔   has less than 2 CPUs available, but Kubernetes requires at least 2 to be available
I0104 17:09:24.797663   30961 out.go:177] 
I0104 17:09:24.804092   30961 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I0104 17:09:24.908358   30961 info.go:266] docker info: {ID: Containers:0 ContainersRunning:0 ContainersPaused:0 ContainersStopped:0 Images:0 Driver: DriverStatus:[] SystemStatus:<nil> Plugins:{Volume:[] Network:[] Authorization:<nil> Log:[]} MemoryLimit:false SwapLimit:false KernelMemory:false KernelMemoryTCP:false CPUCfsPeriod:false CPUCfsQuota:false CPUShares:false CPUSet:false PidsLimit:false IPv4Forwarding:false BridgeNfIptables:false BridgeNfIP6Tables:false Debug:false NFd:0 OomKillDisable:false NGoroutines:0 SystemTime:0001-01-01 00:00:00 +0000 UTC LoggingDriver: CgroupDriver: NEventsListener:0 KernelVersion: OperatingSystem: OSType: Architecture: IndexServerAddress: RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[] IndexConfigs:{DockerIo:{Name: Mirrors:[] Secure:false Official:false}} Mirrors:[]} NCPU:0 MemTotal:0 GenericResources:<nil> DockerRootDir: HTTPProxy: HTTPSProxy: NoProxy: Name: Labels:[] ExperimentalBuild:false ServerVersion: ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:}} DefaultRuntime: Swarm:{NodeID: NodeAddr: LocalNodeState: ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary: ContainerdCommit:{ID: Expected:} RuncCommit:{ID: Expected:} InitCommit:{ID: Expected:} SecurityOptions:[] ProductLicense: Warnings:<nil> ServerErrors:[Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?] ClientInfo:{Debug:false Plugins:[map[Experimental:true Name:app Path:/usr/libexec/docker/cli-plugins/docker-app SchemaVersion:0.1.0 ShortDescription:Docker App Vendor:Docker Inc. Version:v0.9.1-beta3] map[Name:buildx Path:/usr/libexec/docker/cli-plugins/docker-buildx SchemaVersion:0.1.0 ShortDescription:Docker Buildx Vendor:Docker Inc. Version:v0.9.1-docker] map[Name:compose Path:/usr/libexec/docker/cli-plugins/docker-compose SchemaVersion:0.1.0 ShortDescription:Docker Compose Vendor:Docker Inc. Version:v2.12.2] map[Name:scan Path:/usr/libexec/docker/cli-plugins/docker-scan SchemaVersion:0.1.0 ShortDescription:Docker Scan Vendor:Docker Inc. Version:v0.21.0]] Warnings:<nil>}}
W0104 17:09:24.908534   30961 out.go:239] ❗  docker is currently using the  storage driver, consider switching to overlay2 for better performance
I0104 17:09:24.920999   30961 out.go:177] 
W0104 17:09:24.927397   30961 out.go:239] ⛔  Requested cpu count 2 is greater than the available cpus of 0
I0104 17:09:24.933753   30961 out.go:177] 
I0104 17:09:24.940385   30961 out.go:177] 
W0104 17:09:24.946873   30961 out.go:239] ⛔   has less than 2 CPUs available, but Kubernetes requires at least 2 to be available
I0104 17:09:24.953198   30961 out.go:177] 
I0104 17:09:24.980567   30961 out.go:177] 
W0104 17:09:24.987004   30961 out.go:239] ⛔  docker only has 0MiB available, less than the required 1800MiB for Kubernetes
I0104 17:09:24.993276   30961 out.go:177] 
I0104 17:09:25.005497   30961 cni.go:95] Creating CNI manager for ""
I0104 17:09:25.005518   30961 cni.go:169] CNI unnecessary in this configuration, recommending no CNI
I0104 17:09:25.005528   30961 start_flags.go:317] config:
{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.36@sha256:8debc1b6a335075c5f99bfbf131b4f5566f68c6500dc5991817832e55fcc9456 Memory:3900 CPUs:2 DiskSize:20000 VMDriver: Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.25.3 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin: FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.25.3 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[default-storageclass:true storage-provisioner:true] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/home/aro:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath:/opt/socket_vmnet/bin/socket_vmnet_client SocketVMnetPath:/var/run/socket_vmnet}
I0104 17:09:25.012094   30961 out.go:177] 👍  Starting control plane node minikube in cluster minikube
I0104 17:09:25.018479   30961 cache.go:120] Beginning downloading kic base image for docker with docker
I0104 17:09:25.024829   30961 out.go:177] 🚜  Pulling base image ...
I0104 17:09:25.037284   30961 preload.go:132] Checking if preload exists for k8s version v1.25.3 and runtime docker
I0104 17:09:25.037303   30961 image.go:76] Checking for gcr.io/k8s-minikube/kicbase:v0.0.36@sha256:8debc1b6a335075c5f99bfbf131b4f5566f68c6500dc5991817832e55fcc9456 in local docker daemon
I0104 17:09:25.037408   30961 profile.go:148] Saving config to /home/aro/.minikube/profiles/minikube/config.json ...
I0104 17:09:25.037467   30961 cache.go:107] acquiring lock: {Name:mkb7d8f705ce9320fe770d8ce254feb473e657ab Clock:{} Delay:500ms Timeout:10m0s Cancel:<nil>}
I0104 17:09:25.037619   30961 cache.go:107] acquiring lock: {Name:mkfb45452001135b921fb058a5c1504439d40b0b Clock:{} Delay:500ms Timeout:10m0s Cancel:<nil>}
I0104 17:09:25.037859   30961 cache.go:107] acquiring lock: {Name:mk2c095193f20cfd47fb25412a05bdd5e11e39c2 Clock:{} Delay:500ms Timeout:10m0s Cancel:<nil>}
I0104 17:09:25.037901   30961 cache.go:107] acquiring lock: {Name:mk8ba8232a4c96625a2ae1ad9c186dd8ee1cd2bc Clock:{} Delay:500ms Timeout:10m0s Cancel:<nil>}
I0104 17:09:25.037966   30961 cache.go:107] acquiring lock: {Name:mk4010aacf0b94e8ff4ca51bd06df2843a87c566 Clock:{} Delay:500ms Timeout:10m0s Cancel:<nil>}
I0104 17:09:25.037996   30961 cache.go:107] acquiring lock: {Name:mk9729b4259c86e1d77e9e9acd321427a501aa7f Clock:{} Delay:500ms Timeout:10m0s Cancel:<nil>}
I0104 17:09:25.038200   30961 cache.go:107] acquiring lock: {Name:mk434d390c135ba7fd28e2db607314a396b2887a Clock:{} Delay:500ms Timeout:10m0s Cancel:<nil>}
I0104 17:09:25.038278   30961 cache.go:107] acquiring lock: {Name:mke3bc4f1023f8a1852026d77a0d6040864c2a3b Clock:{} Delay:500ms Timeout:10m0s Cancel:<nil>}
I0104 17:09:25.041080   30961 image.go:134] retrieving image: gcr.io/k8s-minikube/storage-provisioner:v5
I0104 17:09:25.041084   30961 image.go:134] retrieving image: registry.k8s.io/kube-proxy:v1.25.3
I0104 17:09:25.041087   30961 image.go:134] retrieving image: registry.k8s.io/pause:3.8
I0104 17:09:25.041095   30961 image.go:134] retrieving image: registry.k8s.io/etcd:3.5.4-0
I0104 17:09:25.042174   30961 image.go:177] daemon lookup for registry.k8s.io/kube-proxy:v1.25.3: Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
I0104 17:09:25.042195   30961 image.go:177] daemon lookup for registry.k8s.io/pause:3.8: Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
I0104 17:09:25.042245   30961 image.go:134] retrieving image: registry.k8s.io/kube-apiserver:v1.25.3
I0104 17:09:25.042345   30961 image.go:177] daemon lookup for registry.k8s.io/kube-apiserver:v1.25.3: Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
I0104 17:09:25.042430   30961 image.go:134] retrieving image: registry.k8s.io/coredns/coredns:v1.9.3
I0104 17:09:25.042603   30961 image.go:177] daemon lookup for registry.k8s.io/etcd:3.5.4-0: Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
I0104 17:09:25.042605   30961 image.go:177] daemon lookup for registry.k8s.io/coredns/coredns:v1.9.3: Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
I0104 17:09:25.042624   30961 image.go:134] retrieving image: registry.k8s.io/kube-controller-manager:v1.25.3
I0104 17:09:25.042704   30961 image.go:134] retrieving image: registry.k8s.io/kube-scheduler:v1.25.3
I0104 17:09:25.042707   30961 image.go:177] daemon lookup for registry.k8s.io/kube-controller-manager:v1.25.3: Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
I0104 17:09:25.042808   30961 image.go:177] daemon lookup for registry.k8s.io/kube-scheduler:v1.25.3: Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
I0104 17:09:25.042812   30961 image.go:177] daemon lookup for gcr.io/k8s-minikube/storage-provisioner:v5: Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
I0104 17:09:25.060597   30961 cache.go:147] Downloading gcr.io/k8s-minikube/kicbase:v0.0.36@sha256:8debc1b6a335075c5f99bfbf131b4f5566f68c6500dc5991817832e55fcc9456 to local cache
I0104 17:09:25.060778   30961 image.go:60] Checking for gcr.io/k8s-minikube/kicbase:v0.0.36@sha256:8debc1b6a335075c5f99bfbf131b4f5566f68c6500dc5991817832e55fcc9456 in local cache directory
I0104 17:09:25.061242   30961 image.go:63] Found gcr.io/k8s-minikube/kicbase:v0.0.36@sha256:8debc1b6a335075c5f99bfbf131b4f5566f68c6500dc5991817832e55fcc9456 in local cache directory, skipping pull
I0104 17:09:25.061247   30961 image.go:104] gcr.io/k8s-minikube/kicbase:v0.0.36@sha256:8debc1b6a335075c5f99bfbf131b4f5566f68c6500dc5991817832e55fcc9456 exists in cache, skipping pull
I0104 17:09:25.061266   30961 cache.go:150] successfully saved gcr.io/k8s-minikube/kicbase:v0.0.36@sha256:8debc1b6a335075c5f99bfbf131b4f5566f68c6500dc5991817832e55fcc9456 as a tarball
I0104 17:09:25.061270   30961 cache.go:161] Loading gcr.io/k8s-minikube/kicbase:v0.0.36@sha256:8debc1b6a335075c5f99bfbf131b4f5566f68c6500dc5991817832e55fcc9456 from local cache
I0104 17:09:25.070487   30961 cache.go:170] Downloading gcr.io/k8s-minikube/kicbase:v0.0.36@sha256:8debc1b6a335075c5f99bfbf131b4f5566f68c6500dc5991817832e55fcc9456 to local daemon
I0104 17:09:25.070609   30961 image.go:76] Checking for gcr.io/k8s-minikube/kicbase:v0.0.36@sha256:8debc1b6a335075c5f99bfbf131b4f5566f68c6500dc5991817832e55fcc9456 in local docker daemon
I0104 17:09:25.089017   30961 image.go:244] Writing gcr.io/k8s-minikube/kicbase:v0.0.36@sha256:8debc1b6a335075c5f99bfbf131b4f5566f68c6500dc5991817832e55fcc9456 to local daemon
I0104 17:09:26.221433   30961 cache.go:182] failed to download gcr.io/k8s-minikube/kicbase:v0.0.36@sha256:8debc1b6a335075c5f99bfbf131b4f5566f68c6500dc5991817832e55fcc9456, will try fallback image if available: writing daemon image: error loading image: Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
I0104 17:09:26.221450   30961 image.go:76] Checking for docker.io/kicbase/stable:v0.0.36@sha256:8debc1b6a335075c5f99bfbf131b4f5566f68c6500dc5991817832e55fcc9456 in local docker daemon
I0104 17:09:26.265678   30961 cache.go:147] Downloading docker.io/kicbase/stable:v0.0.36@sha256:8debc1b6a335075c5f99bfbf131b4f5566f68c6500dc5991817832e55fcc9456 to local cache
I0104 17:09:26.265838   30961 image.go:60] Checking for docker.io/kicbase/stable:v0.0.36@sha256:8debc1b6a335075c5f99bfbf131b4f5566f68c6500dc5991817832e55fcc9456 in local cache directory
I0104 17:09:26.265864   30961 image.go:120] Writing docker.io/kicbase/stable:v0.0.36@sha256:8debc1b6a335075c5f99bfbf131b4f5566f68c6500dc5991817832e55fcc9456 to local cache
I0104 17:09:26.534295   30961 cache.go:161] opening:  /home/aro/.minikube/cache/images/amd64/registry.k8s.io/kube-proxy_v1.25.3
I0104 17:09:26.680838   30961 cache.go:161] opening:  /home/aro/.minikube/cache/images/amd64/gcr.io/k8s-minikube/storage-provisioner_v5
I0104 17:09:26.696988   30961 cache.go:161] opening:  /home/aro/.minikube/cache/images/amd64/registry.k8s.io/kube-apiserver_v1.25.3
I0104 17:09:26.719569   30961 cache.go:161] opening:  /home/aro/.minikube/cache/images/amd64/registry.k8s.io/coredns/coredns_v1.9.3
I0104 17:09:26.727856   30961 cache.go:161] opening:  /home/aro/.minikube/cache/images/amd64/registry.k8s.io/pause_3.8
I0104 17:09:26.750888   30961 cache.go:161] opening:  /home/aro/.minikube/cache/images/amd64/registry.k8s.io/etcd_3.5.4-0
I0104 17:09:26.758932   30961 cache.go:161] opening:  /home/aro/.minikube/cache/images/amd64/registry.k8s.io/kube-controller-manager_v1.25.3
I0104 17:09:26.762659   30961 cache.go:161] opening:  /home/aro/.minikube/cache/images/amd64/registry.k8s.io/kube-scheduler_v1.25.3
I0104 17:09:28.106529   30961 cache.go:156] /home/aro/.minikube/cache/images/amd64/registry.k8s.io/pause_3.8 exists
I0104 17:09:28.106571   30961 cache.go:96] cache image "registry.k8s.io/pause:3.8" -> "/home/aro/.minikube/cache/images/amd64/registry.k8s.io/pause_3.8" took 3.068670206s
I0104 17:09:28.106585   30961 cache.go:80] save to tar file registry.k8s.io/pause:3.8 -> /home/aro/.minikube/cache/images/amd64/registry.k8s.io/pause_3.8 succeeded
I0104 17:09:32.449566   30961 cache.go:156] /home/aro/.minikube/cache/images/amd64/gcr.io/k8s-minikube/storage-provisioner_v5 exists
I0104 17:09:32.449622   30961 cache.go:96] cache image "gcr.io/k8s-minikube/storage-provisioner:v5" -> "/home/aro/.minikube/cache/images/amd64/gcr.io/k8s-minikube/storage-provisioner_v5" took 7.412158157s
I0104 17:09:32.449643   30961 cache.go:80] save to tar file gcr.io/k8s-minikube/storage-provisioner:v5 -> /home/aro/.minikube/cache/images/amd64/gcr.io/k8s-minikube/storage-provisioner_v5 succeeded
I0104 17:09:52.563904   30961 cache.go:156] /home/aro/.minikube/cache/images/amd64/registry.k8s.io/coredns/coredns_v1.9.3 exists
I0104 17:09:52.563932   30961 cache.go:96] cache image "registry.k8s.io/coredns/coredns:v1.9.3" -> "/home/aro/.minikube/cache/images/amd64/registry.k8s.io/coredns/coredns_v1.9.3" took 27.525938286s
I0104 17:09:52.563941   30961 cache.go:80] save to tar file registry.k8s.io/coredns/coredns:v1.9.3 -> /home/aro/.minikube/cache/images/amd64/registry.k8s.io/coredns/coredns_v1.9.3 succeeded
I0104 17:10:08.631771   30961 cache.go:156] /home/aro/.minikube/cache/images/amd64/registry.k8s.io/kube-proxy_v1.25.3 exists
I0104 17:10:08.631810   30961 cache.go:96] cache image "registry.k8s.io/kube-proxy:v1.25.3" -> "/home/aro/.minikube/cache/images/amd64/registry.k8s.io/kube-proxy_v1.25.3" took 43.594195293s
I0104 17:10:08.631825   30961 cache.go:80] save to tar file registry.k8s.io/kube-proxy:v1.25.3 -> /home/aro/.minikube/cache/images/amd64/registry.k8s.io/kube-proxy_v1.25.3 succeeded
I0104 17:10:35.450711   30961 cache.go:156] /home/aro/.minikube/cache/images/amd64/registry.k8s.io/kube-scheduler_v1.25.3 exists
I0104 17:10:35.450755   30961 cache.go:96] cache image "registry.k8s.io/kube-scheduler:v1.25.3" -> "/home/aro/.minikube/cache/images/amd64/registry.k8s.io/kube-scheduler_v1.25.3" took 1m10.412477629s
I0104 17:10:35.450771   30961 cache.go:80] save to tar file registry.k8s.io/kube-scheduler:v1.25.3 -> /home/aro/.minikube/cache/images/amd64/registry.k8s.io/kube-scheduler_v1.25.3 succeeded
I0104 17:11:07.904220   30961 cache.go:156] /home/aro/.minikube/cache/images/amd64/registry.k8s.io/kube-controller-manager_v1.25.3 exists
I0104 17:11:07.904246   30961 cache.go:96] cache image "registry.k8s.io/kube-controller-manager:v1.25.3" -> "/home/aro/.minikube/cache/images/amd64/registry.k8s.io/kube-controller-manager_v1.25.3" took 1m42.866049597s
I0104 17:11:07.904255   30961 cache.go:80] save to tar file registry.k8s.io/kube-controller-manager:v1.25.3 -> /home/aro/.minikube/cache/images/amd64/registry.k8s.io/kube-controller-manager_v1.25.3 succeeded
I0104 17:11:10.424600   30961 cache.go:156] /home/aro/.minikube/cache/images/amd64/registry.k8s.io/kube-apiserver_v1.25.3 exists
I0104 17:11:10.424660   30961 cache.go:96] cache image "registry.k8s.io/kube-apiserver:v1.25.3" -> "/home/aro/.minikube/cache/images/amd64/registry.k8s.io/kube-apiserver_v1.25.3" took 1m45.38669263s
I0104 17:11:10.424702   30961 cache.go:80] save to tar file registry.k8s.io/kube-apiserver:v1.25.3 -> /home/aro/.minikube/cache/images/amd64/registry.k8s.io/kube-apiserver_v1.25.3 succeeded
I0104 17:11:42.075894   30961 cache.go:156] /home/aro/.minikube/cache/images/amd64/registry.k8s.io/etcd_3.5.4-0 exists
I0104 17:11:42.075922   30961 cache.go:96] cache image "registry.k8s.io/etcd:3.5.4-0" -> "/home/aro/.minikube/cache/images/amd64/registry.k8s.io/etcd_3.5.4-0" took 2m17.038066588s
I0104 17:11:42.075933   30961 cache.go:80] save to tar file registry.k8s.io/etcd:3.5.4-0 -> /home/aro/.minikube/cache/images/amd64/registry.k8s.io/etcd_3.5.4-0 succeeded
I0104 17:11:42.075942   30961 cache.go:87] Successfully saved all images to host disk.
I0104 17:11:45.955626   30961 cache.go:150] successfully saved docker.io/kicbase/stable:v0.0.36@sha256:8debc1b6a335075c5f99bfbf131b4f5566f68c6500dc5991817832e55fcc9456 as a tarball
I0104 17:11:45.955634   30961 cache.go:161] Loading docker.io/kicbase/stable:v0.0.36@sha256:8debc1b6a335075c5f99bfbf131b4f5566f68c6500dc5991817832e55fcc9456 from local cache
I0104 17:11:45.956442   30961 cache.go:170] Downloading docker.io/kicbase/stable:v0.0.36@sha256:8debc1b6a335075c5f99bfbf131b4f5566f68c6500dc5991817832e55fcc9456 to local daemon
I0104 17:11:45.956561   30961 image.go:76] Checking for docker.io/kicbase/stable:v0.0.36@sha256:8debc1b6a335075c5f99bfbf131b4f5566f68c6500dc5991817832e55fcc9456 in local docker daemon
I0104 17:11:46.242073   30961 image.go:244] Writing docker.io/kicbase/stable:v0.0.36@sha256:8debc1b6a335075c5f99bfbf131b4f5566f68c6500dc5991817832e55fcc9456 to local daemon
I0104 17:11:47.201187   30961 cache.go:182] failed to download docker.io/kicbase/stable:v0.0.36@sha256:8debc1b6a335075c5f99bfbf131b4f5566f68c6500dc5991817832e55fcc9456, will try fallback image if available: writing daemon image: error loading image: Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
I0104 17:11:47.201221   30961 image.go:76] Checking for gcr.io/k8s-minikube/kicbase:v0.0.36 in local docker daemon
I0104 17:11:47.227497   30961 cache.go:147] Downloading gcr.io/k8s-minikube/kicbase:v0.0.36 to local cache
I0104 17:11:47.227651   30961 image.go:60] Checking for gcr.io/k8s-minikube/kicbase:v0.0.36 in local cache directory
I0104 17:11:47.227682   30961 image.go:120] Writing gcr.io/k8s-minikube/kicbase:v0.0.36 to local cache
I0104 17:13:18.827673   30961 cache.go:150] successfully saved gcr.io/k8s-minikube/kicbase:v0.0.36 as a tarball
I0104 17:13:18.827691   30961 cache.go:161] Loading gcr.io/k8s-minikube/kicbase:v0.0.36 from local cache
I0104 17:13:18.829784   30961 cache.go:170] Downloading gcr.io/k8s-minikube/kicbase:v0.0.36 to local daemon
I0104 17:13:18.830049   30961 image.go:76] Checking for gcr.io/k8s-minikube/kicbase:v0.0.36 in local docker daemon
I0104 17:13:18.849696   30961 image.go:244] Writing gcr.io/k8s-minikube/kicbase:v0.0.36 to local daemon
I0104 17:13:19.831950   30961 cache.go:182] failed to download gcr.io/k8s-minikube/kicbase:v0.0.36, will try fallback image if available: writing daemon image: error loading image: Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
I0104 17:13:19.831959   30961 image.go:76] Checking for docker.io/kicbase/stable:v0.0.36 in local docker daemon
I0104 17:13:19.849016   30961 cache.go:147] Downloading docker.io/kicbase/stable:v0.0.36 to local cache
I0104 17:13:19.849185   30961 image.go:60] Checking for docker.io/kicbase/stable:v0.0.36 in local cache directory
I0104 17:13:19.849212   30961 image.go:120] Writing docker.io/kicbase/stable:v0.0.36 to local cache
I0104 17:14:51.434464   30961 cache.go:150] successfully saved docker.io/kicbase/stable:v0.0.36 as a tarball
I0104 17:14:51.434475   30961 cache.go:161] Loading docker.io/kicbase/stable:v0.0.36 from local cache
I0104 17:14:51.435596   30961 cache.go:170] Downloading docker.io/kicbase/stable:v0.0.36 to local daemon
I0104 17:14:51.435767   30961 image.go:76] Checking for docker.io/kicbase/stable:v0.0.36 in local docker daemon
I0104 17:14:51.457564   30961 image.go:244] Writing docker.io/kicbase/stable:v0.0.36 to local daemon
I0104 17:14:52.475262   30961 cache.go:182] failed to download docker.io/kicbase/stable:v0.0.36, will try fallback image if available: writing daemon image: error loading image: Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
W0104 17:14:52.475288   30961 out.go:239] ❗  minikube was unable to download gcr.io/k8s-minikube/kicbase:v0.0.36, but successfully downloaded docker.io/kicbase/stable:v0.0.36 as a fallback image
E0104 17:14:52.475315   30961 cache.go:203] Error downloading kic artifacts:  failed to download kic base image or any fallback image
I0104 17:14:52.475328   30961 cache.go:208] Successfully downloaded all kic artifacts
I0104 17:14:52.475361   30961 start.go:364] acquiring machines lock for minikube: {Name:mk14a3ea7d938fb18e383a516a26d8e3e74584e3 Clock:{} Delay:500ms Timeout:10m0s Cancel:<nil>}
I0104 17:14:52.475515   30961 start.go:368] acquired machines lock for "minikube" in 138.818µs
I0104 17:14:52.475536   30961 start.go:96] Skipping create...Using existing machine configuration
I0104 17:14:52.475544   30961 fix.go:55] fixHost starting: 
I0104 17:14:52.475914   30961 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
W0104 17:14:52.498463   30961 cli_runner.go:211] docker container inspect minikube --format={{.State.Status}} returned with exit code 1
I0104 17:14:52.498495   30961 fix.go:103] recreateIfNeeded on minikube: state= err=unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
I0104 17:14:52.498507   30961 fix.go:108] machineExists: false. err=machine does not exist
I0104 17:14:52.506178   30961 out.go:177] 🤷  docker "minikube" container is missing, will recreate.
I0104 17:14:52.520783   30961 delete.go:124] DEMOLISHING minikube ...
I0104 17:14:52.520894   30961 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
W0104 17:14:52.537312   30961 cli_runner.go:211] docker container inspect minikube --format={{.State.Status}} returned with exit code 1
W0104 17:14:52.537351   30961 stop.go:75] unable to get state: unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
I0104 17:14:52.537364   30961 delete.go:129] stophost failed (probably ok): ssh power off: unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
I0104 17:14:52.537718   30961 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
W0104 17:14:52.555251   30961 cli_runner.go:211] docker container inspect minikube --format={{.State.Status}} returned with exit code 1
I0104 17:14:52.555305   30961 delete.go:82] Unable to get host status for minikube, assuming it has already been deleted: state: unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
I0104 17:14:52.555374   30961 cli_runner.go:164] Run: docker container inspect -f {{.Id}} minikube
W0104 17:14:52.571865   30961 cli_runner.go:211] docker container inspect -f {{.Id}} minikube returned with exit code 1
I0104 17:14:52.571884   30961 kic.go:356] could not find the container minikube to remove it. will try anyways
I0104 17:14:52.571955   30961 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
W0104 17:14:52.591383   30961 cli_runner.go:211] docker container inspect minikube --format={{.State.Status}} returned with exit code 1
W0104 17:14:52.591432   30961 oci.go:84] error getting container status, will try to delete anyways: unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
I0104 17:14:52.591523   30961 cli_runner.go:164] Run: docker exec --privileged -t minikube /bin/bash -c "sudo init 0"
W0104 17:14:52.611150   30961 cli_runner.go:211] docker exec --privileged -t minikube /bin/bash -c "sudo init 0" returned with exit code 1
I0104 17:14:52.611170   30961 oci.go:646] error shutdown minikube: docker exec --privileged -t minikube /bin/bash -c "sudo init 0": exit status 1
stdout:

stderr:
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
I0104 17:14:53.611654   30961 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
W0104 17:14:53.800691   30961 cli_runner.go:211] docker container inspect minikube --format={{.State.Status}} returned with exit code 1
I0104 17:14:53.800739   30961 oci.go:658] temporary error verifying shutdown: unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
I0104 17:14:53.800744   30961 oci.go:660] temporary error: container minikube status is  but expect it to be exited
I0104 17:14:53.800765   30961 retry.go:31] will retry after 720.254544ms: couldn't verify container is exited. %!v(MISSING): unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
I0104 17:14:54.521677   30961 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
W0104 17:14:54.538189   30961 cli_runner.go:211] docker container inspect minikube --format={{.State.Status}} returned with exit code 1
I0104 17:14:54.538228   30961 oci.go:658] temporary error verifying shutdown: unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
I0104 17:14:54.538235   30961 oci.go:660] temporary error: container minikube status is  but expect it to be exited
I0104 17:14:54.538254   30961 retry.go:31] will retry after 873.42004ms: couldn't verify container is exited. %!v(MISSING): unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
I0104 17:14:55.412204   30961 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
W0104 17:14:55.427685   30961 cli_runner.go:211] docker container inspect minikube --format={{.State.Status}} returned with exit code 1
I0104 17:14:55.427721   30961 oci.go:658] temporary error verifying shutdown: unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
I0104 17:14:55.427731   30961 oci.go:660] temporary error: container minikube status is  but expect it to be exited
I0104 17:14:55.427748   30961 retry.go:31] will retry after 1.054928461s: couldn't verify container is exited. %!v(MISSING): unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
I0104 17:14:56.482950   30961 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
W0104 17:14:56.617521   30961 cli_runner.go:211] docker container inspect minikube --format={{.State.Status}} returned with exit code 1
I0104 17:14:56.617556   30961 oci.go:658] temporary error verifying shutdown: unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
I0104 17:14:56.617574   30961 oci.go:660] temporary error: container minikube status is  but expect it to be exited
I0104 17:14:56.617591   30961 retry.go:31] will retry after 1.560325776s: couldn't verify container is exited. %!v(MISSING): unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
I0104 17:14:58.178579   30961 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
W0104 17:14:58.198809   30961 cli_runner.go:211] docker container inspect minikube --format={{.State.Status}} returned with exit code 1
I0104 17:14:58.198846   30961 oci.go:658] temporary error verifying shutdown: unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
I0104 17:14:58.198852   30961 oci.go:660] temporary error: container minikube status is  but expect it to be exited
I0104 17:14:58.198868   30961 retry.go:31] will retry after 3.004145903s: couldn't verify container is exited. %!v(MISSING): unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
I0104 17:15:01.204398   30961 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
W0104 17:15:01.230401   30961 cli_runner.go:211] docker container inspect minikube --format={{.State.Status}} returned with exit code 1
I0104 17:15:01.230439   30961 oci.go:658] temporary error verifying shutdown: unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
I0104 17:15:01.230445   30961 oci.go:660] temporary error: container minikube status is  but expect it to be exited
I0104 17:15:01.230465   30961 retry.go:31] will retry after 2.147653057s: couldn't verify container is exited. %!v(MISSING): unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
I0104 17:15:03.379942   30961 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
W0104 17:15:03.402469   30961 cli_runner.go:211] docker container inspect minikube --format={{.State.Status}} returned with exit code 1
I0104 17:15:03.402514   30961 oci.go:658] temporary error verifying shutdown: unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
I0104 17:15:03.402520   30961 oci.go:660] temporary error: container minikube status is  but expect it to be exited
I0104 17:15:03.402540   30961 retry.go:31] will retry after 3.739082318s: couldn't verify container is exited. %!v(MISSING): unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
I0104 17:15:07.144308   30961 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
W0104 17:15:07.165701   30961 cli_runner.go:211] docker container inspect minikube --format={{.State.Status}} returned with exit code 1
I0104 17:15:07.165740   30961 oci.go:658] temporary error verifying shutdown: unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
I0104 17:15:07.165746   30961 oci.go:660] temporary error: container minikube status is  but expect it to be exited
I0104 17:15:07.165768   30961 retry.go:31] will retry after 5.099891944s: couldn't verify container is exited. %!v(MISSING): unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
I0104 17:15:12.268211   30961 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
W0104 17:15:12.289340   30961 cli_runner.go:211] docker container inspect minikube --format={{.State.Status}} returned with exit code 1
I0104 17:15:12.289377   30961 oci.go:658] temporary error verifying shutdown: unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
I0104 17:15:12.289383   30961 oci.go:660] temporary error: container minikube status is  but expect it to be exited
I0104 17:15:12.289404   30961 oci.go:88] couldn't shut down minikube (might be okay): verify shutdown: couldn't verify container is exited. %!v(MISSING): unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
 
I0104 17:15:12.289480   30961 cli_runner.go:164] Run: docker rm -f -v minikube
W0104 17:15:12.313279   30961 cli_runner.go:211] docker rm -f -v minikube returned with exit code 1
I0104 17:15:12.313381   30961 cli_runner.go:164] Run: docker container inspect -f {{.Id}} minikube
W0104 17:15:12.344825   30961 cli_runner.go:211] docker container inspect -f {{.Id}} minikube returned with exit code 1
I0104 17:15:12.344908   30961 cli_runner.go:164] Run: docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
W0104 17:15:12.366746   30961 cli_runner.go:211] docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}" returned with exit code 1
I0104 17:15:12.366844   30961 network_create.go:272] running [docker network inspect minikube] to gather additional debugging logs...
I0104 17:15:12.366857   30961 cli_runner.go:164] Run: docker network inspect minikube
W0104 17:15:12.386606   30961 cli_runner.go:211] docker network inspect minikube returned with exit code 1
I0104 17:15:12.386626   30961 network_create.go:275] error running [docker network inspect minikube]: docker network inspect minikube: exit status 1
stdout:
[]

stderr:
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
I0104 17:15:12.386636   30961 network_create.go:277] output of [docker network inspect minikube]: -- stdout --
[]

-- /stdout --
** stderr ** 
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?

** /stderr **
W0104 17:15:12.388450   30961 network_create.go:302] Error inspecting docker network minikube: docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}": exit status 1
stdout:


stderr:
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
W0104 17:15:12.389256   30961 delete.go:139] delete failed (probably ok) <nil>
I0104 17:15:12.389265   30961 fix.go:115] Sleeping 1 second for extra luck!
I0104 17:15:13.389437   30961 start.go:125] createHost starting for "" (driver="docker")
I0104 17:15:13.398819   30961 out.go:204] 🔥  Creating docker container (CPUs=2, Memory=3900MB) ...
I0104 17:15:13.400000   30961 start.go:159] libmachine.API.Create for "minikube" (driver="docker")
I0104 17:15:13.400013   30961 client.go:168] LocalClient.Create starting
I0104 17:15:13.403166   30961 main.go:134] libmachine: Reading certificate data from /home/aro/.minikube/certs/ca.pem
I0104 17:15:13.403515   30961 main.go:134] libmachine: Decoding PEM data...
I0104 17:15:13.403529   30961 main.go:134] libmachine: Parsing certificate...
I0104 17:15:13.403586   30961 main.go:134] libmachine: Reading certificate data from /home/aro/.minikube/certs/cert.pem
I0104 17:15:13.403875   30961 main.go:134] libmachine: Decoding PEM data...
I0104 17:15:13.403884   30961 main.go:134] libmachine: Parsing certificate...
I0104 17:15:13.404670   30961 cli_runner.go:164] Run: docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
W0104 17:15:13.427963   30961 cli_runner.go:211] docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}" returned with exit code 1
I0104 17:15:13.428036   30961 network_create.go:272] running [docker network inspect minikube] to gather additional debugging logs...
I0104 17:15:13.428049   30961 cli_runner.go:164] Run: docker network inspect minikube
W0104 17:15:13.455255   30961 cli_runner.go:211] docker network inspect minikube returned with exit code 1
I0104 17:15:13.455272   30961 network_create.go:275] error running [docker network inspect minikube]: docker network inspect minikube: exit status 1
stdout:
[]

stderr:
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
I0104 17:15:13.455283   30961 network_create.go:277] output of [docker network inspect minikube]: -- stdout --
[]

-- /stdout --
** stderr ** 
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?

** /stderr **
I0104 17:15:13.455354   30961 cli_runner.go:164] Run: docker network inspect bridge --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
W0104 17:15:13.481465   30961 cli_runner.go:211] docker network inspect bridge --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}" returned with exit code 1
I0104 17:15:13.481542   30961 network_create.go:272] running [docker network inspect bridge] to gather additional debugging logs...
I0104 17:15:13.481555   30961 cli_runner.go:164] Run: docker network inspect bridge
W0104 17:15:13.503449   30961 cli_runner.go:211] docker network inspect bridge returned with exit code 1
I0104 17:15:13.507666   30961 network_create.go:275] error running [docker network inspect bridge]: docker network inspect bridge: exit status 1
stdout:
[]

stderr:
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
I0104 17:15:13.507677   30961 network_create.go:277] output of [docker network inspect bridge]: -- stdout --
[]

-- /stdout --
** stderr ** 
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?

** /stderr **
W0104 17:15:13.507684   30961 network_create.go:84] failed to get mtu information from the docker's default network "bridge": docker network inspect bridge --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}": exit status 1
stdout:


stderr:
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
I0104 17:15:13.508032   30961 network.go:295] reserving subnet 192.168.49.0 for 1m0s: &{mu:{state:0 sema:0} read:{v:{m:map[] amended:true}} dirty:map[192.168.49.0:0xc00051c778] misses:0}
I0104 17:15:13.508055   30961 network.go:241] using free private subnet 192.168.49.0/24: &{IP:192.168.49.0 Netmask:255.255.255.0 Prefix:24 CIDR:192.168.49.0/24 Gateway:192.168.49.1 ClientMin:192.168.49.2 ClientMax:192.168.49.254 Broadcast:192.168.49.255 Interface:{IfaceName: IfaceIPv4: IfaceMTU:0 IfaceMAC:}}
I0104 17:15:13.508065   30961 network_create.go:115] attempt to create docker network minikube 192.168.49.0/24 with gateway 192.168.49.1 and MTU of 0 ...
I0104 17:15:13.508164   30961 cli_runner.go:164] Run: docker network create --driver=bridge --subnet=192.168.49.0/24 --gateway=192.168.49.1 -o --ip-masq -o --icc --label=created_by.minikube.sigs.k8s.io=true --label=name.minikube.sigs.k8s.io=minikube minikube
W0104 17:15:13.533614   30961 cli_runner.go:211] docker network create --driver=bridge --subnet=192.168.49.0/24 --gateway=192.168.49.1 -o --ip-masq -o --icc --label=created_by.minikube.sigs.k8s.io=true --label=name.minikube.sigs.k8s.io=minikube minikube returned with exit code 1
E0104 17:15:13.533644   30961 network_create.go:104] error while trying to create docker network minikube 192.168.49.0/24: create docker network minikube 192.168.49.0/24 with gateway 192.168.49.1 and MTU of 0: docker network create --driver=bridge --subnet=192.168.49.0/24 --gateway=192.168.49.1 -o --ip-masq -o --icc --label=created_by.minikube.sigs.k8s.io=true --label=name.minikube.sigs.k8s.io=minikube minikube: exit status 1
stdout:

stderr:
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
W0104 17:15:13.533840   30961 out.go:239] ❗  Unable to create dedicated network, this might result in cluster IP change after restart: un-retryable: create docker network minikube 192.168.49.0/24 with gateway 192.168.49.1 and MTU of 0: docker network create --driver=bridge --subnet=192.168.49.0/24 --gateway=192.168.49.1 -o --ip-masq -o --icc --label=created_by.minikube.sigs.k8s.io=true --label=name.minikube.sigs.k8s.io=minikube minikube: exit status 1
stdout:

stderr:
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?

I0104 17:15:13.536272   30961 cli_runner.go:164] Run: docker ps -a --format {{.Names}}
W0104 17:15:13.565835   30961 cli_runner.go:211] docker ps -a --format {{.Names}} returned with exit code 1
W0104 17:15:13.565852   30961 kic.go:149] failed to check if container already exists: docker ps -a --format {{.Names}}: exit status 1
stdout:

stderr:
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
I0104 17:15:13.565917   30961 cli_runner.go:164] Run: docker volume create minikube --label name.minikube.sigs.k8s.io=minikube --label created_by.minikube.sigs.k8s.io=true
W0104 17:15:13.592845   30961 cli_runner.go:211] docker volume create minikube --label name.minikube.sigs.k8s.io=minikube --label created_by.minikube.sigs.k8s.io=true returned with exit code 1
I0104 17:15:13.592874   30961 client.go:171] LocalClient.Create took 192.856516ms
I0104 17:15:15.593016   30961 start.go:128] duration metric: createHost completed in 2.203562735s
I0104 17:15:15.593035   30961 fix.go:57] fixHost completed within 23.117492433s
I0104 17:15:15.593038   30961 start.go:83] releasing machines lock for "minikube", held for 23.117517553s
W0104 17:15:15.593067   30961 start.go:603] error starting host: recreate: creating host: create: creating: setting up container node: creating volume for minikube container: docker volume create minikube --label name.minikube.sigs.k8s.io=minikube --label created_by.minikube.sigs.k8s.io=true: exit status 1
stdout:

stderr:
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
W0104 17:15:15.593184   30961 out.go:239] 🤦  StartHost failed, but will try again: recreate: creating host: create: creating: setting up container node: creating volume for minikube container: docker volume create minikube --label name.minikube.sigs.k8s.io=minikube --label created_by.minikube.sigs.k8s.io=true: exit status 1
stdout:

stderr:
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?

I0104 17:15:15.593317   30961 start.go:618] Will try again in 5 seconds ...
I0104 17:15:20.593437   30961 start.go:364] acquiring machines lock for minikube: {Name:mk14a3ea7d938fb18e383a516a26d8e3e74584e3 Clock:{} Delay:500ms Timeout:10m0s Cancel:<nil>}
I0104 17:15:20.593534   30961 start.go:368] acquired machines lock for "minikube" in 77.455µs
I0104 17:15:20.593549   30961 start.go:96] Skipping create...Using existing machine configuration
I0104 17:15:20.593552   30961 fix.go:55] fixHost starting: 
I0104 17:15:20.593810   30961 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
W0104 17:15:20.613027   30961 cli_runner.go:211] docker container inspect minikube --format={{.State.Status}} returned with exit code 1
I0104 17:15:20.613065   30961 fix.go:103] recreateIfNeeded on minikube: state= err=unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
I0104 17:15:20.613076   30961 fix.go:108] machineExists: false. err=machine does not exist
I0104 17:15:20.620256   30961 out.go:177] 🤷  docker "minikube" container is missing, will recreate.
I0104 17:15:20.626718   30961 delete.go:124] DEMOLISHING minikube ...
I0104 17:15:20.626842   30961 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
W0104 17:15:20.646659   30961 cli_runner.go:211] docker container inspect minikube --format={{.State.Status}} returned with exit code 1
W0104 17:15:20.646696   30961 stop.go:75] unable to get state: unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
I0104 17:15:20.646708   30961 delete.go:129] stophost failed (probably ok): ssh power off: unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
I0104 17:15:20.647032   30961 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
W0104 17:15:20.665930   30961 cli_runner.go:211] docker container inspect minikube --format={{.State.Status}} returned with exit code 1
I0104 17:15:20.665976   30961 delete.go:82] Unable to get host status for minikube, assuming it has already been deleted: state: unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
I0104 17:15:20.666049   30961 cli_runner.go:164] Run: docker container inspect -f {{.Id}} minikube
W0104 17:15:20.686309   30961 cli_runner.go:211] docker container inspect -f {{.Id}} minikube returned with exit code 1
I0104 17:15:20.686339   30961 kic.go:356] could not find the container minikube to remove it. will try anyways
I0104 17:15:20.686401   30961 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
W0104 17:15:20.705981   30961 cli_runner.go:211] docker container inspect minikube --format={{.State.Status}} returned with exit code 1
W0104 17:15:20.706023   30961 oci.go:84] error getting container status, will try to delete anyways: unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
I0104 17:15:20.706102   30961 cli_runner.go:164] Run: docker exec --privileged -t minikube /bin/bash -c "sudo init 0"
W0104 17:15:20.725498   30961 cli_runner.go:211] docker exec --privileged -t minikube /bin/bash -c "sudo init 0" returned with exit code 1
I0104 17:15:20.725514   30961 oci.go:646] error shutdown minikube: docker exec --privileged -t minikube /bin/bash -c "sudo init 0": exit status 1
stdout:

stderr:
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
I0104 17:15:21.725908   30961 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
W0104 17:15:21.748799   30961 cli_runner.go:211] docker container inspect minikube --format={{.State.Status}} returned with exit code 1
I0104 17:15:21.748842   30961 oci.go:658] temporary error verifying shutdown: unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
I0104 17:15:21.748849   30961 oci.go:660] temporary error: container minikube status is  but expect it to be exited
I0104 17:15:21.748871   30961 retry.go:31] will retry after 507.606314ms: couldn't verify container is exited. %!v(MISSING): unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
I0104 17:15:22.257540   30961 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
W0104 17:15:22.316467   30961 cli_runner.go:211] docker container inspect minikube --format={{.State.Status}} returned with exit code 1
I0104 17:15:22.316505   30961 oci.go:658] temporary error verifying shutdown: unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
I0104 17:15:22.316511   30961 oci.go:660] temporary error: container minikube status is  but expect it to be exited
I0104 17:15:22.316528   30961 retry.go:31] will retry after 985.229971ms: couldn't verify container is exited. %!v(MISSING): unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
I0104 17:15:23.302051   30961 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
W0104 17:15:23.323220   30961 cli_runner.go:211] docker container inspect minikube --format={{.State.Status}} returned with exit code 1
I0104 17:15:23.323256   30961 oci.go:658] temporary error verifying shutdown: unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
I0104 17:15:23.323262   30961 oci.go:660] temporary error: container minikube status is  but expect it to be exited
I0104 17:15:23.323280   30961 retry.go:31] will retry after 803.546856ms: couldn't verify container is exited. %!v(MISSING): unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
I0104 17:15:24.127805   30961 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
W0104 17:15:24.151181   30961 cli_runner.go:211] docker container inspect minikube --format={{.State.Status}} returned with exit code 1
I0104 17:15:24.151217   30961 oci.go:658] temporary error verifying shutdown: unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
I0104 17:15:24.151227   30961 oci.go:660] temporary error: container minikube status is  but expect it to be exited
I0104 17:15:24.151244   30961 retry.go:31] will retry after 1.486109007s: couldn't verify container is exited. %!v(MISSING): unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
I0104 17:15:25.638211   30961 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
W0104 17:15:25.659361   30961 cli_runner.go:211] docker container inspect minikube --format={{.State.Status}} returned with exit code 1
I0104 17:15:25.659397   30961 oci.go:658] temporary error verifying shutdown: unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
I0104 17:15:25.659403   30961 oci.go:660] temporary error: container minikube status is  but expect it to be exited
I0104 17:15:25.659422   30961 retry.go:31] will retry after 2.070709754s: couldn't verify container is exited. %!v(MISSING): unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
I0104 17:15:27.731260   30961 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
W0104 17:15:27.755704   30961 cli_runner.go:211] docker container inspect minikube --format={{.State.Status}} returned with exit code 1
I0104 17:15:27.755740   30961 oci.go:658] temporary error verifying shutdown: unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
I0104 17:15:27.755746   30961 oci.go:660] temporary error: container minikube status is  but expect it to be exited
I0104 17:15:27.755763   30961 retry.go:31] will retry after 3.67875363s: couldn't verify container is exited. %!v(MISSING): unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
I0104 17:15:31.436342   30961 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
W0104 17:15:31.456797   30961 cli_runner.go:211] docker container inspect minikube --format={{.State.Status}} returned with exit code 1
I0104 17:15:31.456835   30961 oci.go:658] temporary error verifying shutdown: unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
I0104 17:15:31.456840   30961 oci.go:660] temporary error: container minikube status is  but expect it to be exited
I0104 17:15:31.456858   30961 retry.go:31] will retry after 4.459624189s: couldn't verify container is exited. %!v(MISSING): unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
I0104 17:15:35.918447   30961 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
W0104 17:15:35.940350   30961 cli_runner.go:211] docker container inspect minikube --format={{.State.Status}} returned with exit code 1
I0104 17:15:35.940392   30961 oci.go:658] temporary error verifying shutdown: unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
I0104 17:15:35.940399   30961 oci.go:660] temporary error: container minikube status is  but expect it to be exited
I0104 17:15:35.940430   30961 oci.go:88] couldn't shut down minikube (might be okay): verify shutdown: couldn't verify container is exited. %!v(MISSING): unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
 
I0104 17:15:35.940506   30961 cli_runner.go:164] Run: docker rm -f -v minikube
W0104 17:15:35.958479   30961 cli_runner.go:211] docker rm -f -v minikube returned with exit code 1
I0104 17:15:35.958569   30961 cli_runner.go:164] Run: docker container inspect -f {{.Id}} minikube
W0104 17:15:35.974377   30961 cli_runner.go:211] docker container inspect -f {{.Id}} minikube returned with exit code 1
I0104 17:15:35.974477   30961 cli_runner.go:164] Run: docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
W0104 17:15:35.993062   30961 cli_runner.go:211] docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}" returned with exit code 1
I0104 17:15:35.993128   30961 network_create.go:272] running [docker network inspect minikube] to gather additional debugging logs...
I0104 17:15:35.993139   30961 cli_runner.go:164] Run: docker network inspect minikube
W0104 17:15:36.009931   30961 cli_runner.go:211] docker network inspect minikube returned with exit code 1
I0104 17:15:36.009947   30961 network_create.go:275] error running [docker network inspect minikube]: docker network inspect minikube: exit status 1
stdout:
[]

stderr:
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
I0104 17:15:36.009956   30961 network_create.go:277] output of [docker network inspect minikube]: -- stdout --
[]

-- /stdout --
** stderr ** 
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?

** /stderr **
W0104 17:15:36.009963   30961 network_create.go:302] Error inspecting docker network minikube: docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}": exit status 1
stdout:


stderr:
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
W0104 17:15:36.010090   30961 delete.go:139] delete failed (probably ok) <nil>
I0104 17:15:36.010096   30961 fix.go:115] Sleeping 1 second for extra luck!
I0104 17:15:37.010255   30961 start.go:125] createHost starting for "" (driver="docker")
I0104 17:15:37.017080   30961 out.go:204] 🔥  Creating docker container (CPUs=2, Memory=3900MB) ...
I0104 17:15:37.017178   30961 start.go:159] libmachine.API.Create for "minikube" (driver="docker")
I0104 17:15:37.017187   30961 client.go:168] LocalClient.Create starting
I0104 17:15:37.017276   30961 main.go:134] libmachine: Reading certificate data from /home/aro/.minikube/certs/ca.pem
I0104 17:15:37.017303   30961 main.go:134] libmachine: Decoding PEM data...
I0104 17:15:37.017314   30961 main.go:134] libmachine: Parsing certificate...
I0104 17:15:37.017361   30961 main.go:134] libmachine: Reading certificate data from /home/aro/.minikube/certs/cert.pem
I0104 17:15:37.017379   30961 main.go:134] libmachine: Decoding PEM data...
I0104 17:15:37.017388   30961 main.go:134] libmachine: Parsing certificate...
I0104 17:15:37.017604   30961 cli_runner.go:164] Run: docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
W0104 17:15:37.036933   30961 cli_runner.go:211] docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}" returned with exit code 1
I0104 17:15:37.037000   30961 network_create.go:272] running [docker network inspect minikube] to gather additional debugging logs...
I0104 17:15:37.037010   30961 cli_runner.go:164] Run: docker network inspect minikube
W0104 17:15:37.053606   30961 cli_runner.go:211] docker network inspect minikube returned with exit code 1
I0104 17:15:37.053621   30961 network_create.go:275] error running [docker network inspect minikube]: docker network inspect minikube: exit status 1
stdout:
[]

stderr:
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
I0104 17:15:37.053630   30961 network_create.go:277] output of [docker network inspect minikube]: -- stdout --
[]

-- /stdout --
** stderr ** 
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?

** /stderr **
I0104 17:15:37.053692   30961 cli_runner.go:164] Run: docker network inspect bridge --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
W0104 17:15:37.069378   30961 cli_runner.go:211] docker network inspect bridge --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}" returned with exit code 1
I0104 17:15:37.069454   30961 network_create.go:272] running [docker network inspect bridge] to gather additional debugging logs...
I0104 17:15:37.069464   30961 cli_runner.go:164] Run: docker network inspect bridge
W0104 17:15:37.085034   30961 cli_runner.go:211] docker network inspect bridge returned with exit code 1
I0104 17:15:37.085051   30961 network_create.go:275] error running [docker network inspect bridge]: docker network inspect bridge: exit status 1
stdout:
[]

stderr:
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
I0104 17:15:37.085060   30961 network_create.go:277] output of [docker network inspect bridge]: -- stdout --
[]

-- /stdout --
** stderr ** 
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?

** /stderr **
W0104 17:15:37.085066   30961 network_create.go:84] failed to get mtu information from the docker's default network "bridge": docker network inspect bridge --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}": exit status 1
stdout:


stderr:
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
I0104 17:15:37.085400   30961 network.go:286] skipping subnet 192.168.49.0 that has unexpired reservation: &{mu:{state:0 sema:0} read:{v:{m:map[192.168.49.0:0xc00051c778] amended:false}} dirty:map[] misses:0}
I0104 17:15:37.085416   30961 network.go:244] skipping subnet 192.168.49.0/24 that is reserved: &{IP:192.168.49.0 Netmask:255.255.255.0 Prefix:24 CIDR:192.168.49.0/24 Gateway:192.168.49.1 ClientMin:192.168.49.2 ClientMax:192.168.49.254 Broadcast:192.168.49.255 Interface:{IfaceName: IfaceIPv4: IfaceMTU:0 IfaceMAC:}}
I0104 17:15:37.085672   30961 network.go:295] reserving subnet 192.168.58.0 for 1m0s: &{mu:{state:0 sema:0} read:{v:{m:map[192.168.49.0:0xc00051c778] amended:true}} dirty:map[192.168.49.0:0xc00051c778 192.168.58.0:0xc00051cac8] misses:0}
I0104 17:15:37.085686   30961 network.go:241] using free private subnet 192.168.58.0/24: &{IP:192.168.58.0 Netmask:255.255.255.0 Prefix:24 CIDR:192.168.58.0/24 Gateway:192.168.58.1 ClientMin:192.168.58.2 ClientMax:192.168.58.254 Broadcast:192.168.58.255 Interface:{IfaceName: IfaceIPv4: IfaceMTU:0 IfaceMAC:}}
I0104 17:15:37.085693   30961 network_create.go:115] attempt to create docker network minikube 192.168.58.0/24 with gateway 192.168.58.1 and MTU of 0 ...
I0104 17:15:37.085752   30961 cli_runner.go:164] Run: docker network create --driver=bridge --subnet=192.168.58.0/24 --gateway=192.168.58.1 -o --ip-masq -o --icc --label=created_by.minikube.sigs.k8s.io=true --label=name.minikube.sigs.k8s.io=minikube minikube
W0104 17:15:37.101984   30961 cli_runner.go:211] docker network create --driver=bridge --subnet=192.168.58.0/24 --gateway=192.168.58.1 -o --ip-masq -o --icc --label=created_by.minikube.sigs.k8s.io=true --label=name.minikube.sigs.k8s.io=minikube minikube returned with exit code 1
E0104 17:15:37.102012   30961 network_create.go:104] error while trying to create docker network minikube 192.168.58.0/24: create docker network minikube 192.168.58.0/24 with gateway 192.168.58.1 and MTU of 0: docker network create --driver=bridge --subnet=192.168.58.0/24 --gateway=192.168.58.1 -o --ip-masq -o --icc --label=created_by.minikube.sigs.k8s.io=true --label=name.minikube.sigs.k8s.io=minikube minikube: exit status 1
stdout:

stderr:
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
W0104 17:15:37.102139   30961 out.go:239] ❗  Unable to create dedicated network, this might result in cluster IP change after restart: un-retryable: create docker network minikube 192.168.58.0/24 with gateway 192.168.58.1 and MTU of 0: docker network create --driver=bridge --subnet=192.168.58.0/24 --gateway=192.168.58.1 -o --ip-masq -o --icc --label=created_by.minikube.sigs.k8s.io=true --label=name.minikube.sigs.k8s.io=minikube minikube: exit status 1
stdout:

stderr:
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?

I0104 17:15:37.102299   30961 cli_runner.go:164] Run: docker ps -a --format {{.Names}}
W0104 17:15:37.124756   30961 cli_runner.go:211] docker ps -a --format {{.Names}} returned with exit code 1
W0104 17:15:37.124775   30961 kic.go:149] failed to check if container already exists: docker ps -a --format {{.Names}}: exit status 1
stdout:

stderr:
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
I0104 17:15:37.124842   30961 cli_runner.go:164] Run: docker volume create minikube --label name.minikube.sigs.k8s.io=minikube --label created_by.minikube.sigs.k8s.io=true
W0104 17:15:37.142446   30961 cli_runner.go:211] docker volume create minikube --label name.minikube.sigs.k8s.io=minikube --label created_by.minikube.sigs.k8s.io=true returned with exit code 1
I0104 17:15:37.142478   30961 client.go:171] LocalClient.Create took 125.286299ms
I0104 17:15:39.143175   30961 start.go:128] duration metric: createHost completed in 2.132890488s
I0104 17:15:39.143224   30961 fix.go:57] fixHost completed within 18.549667886s
I0104 17:15:39.143233   30961 start.go:83] releasing machines lock for "minikube", held for 18.549689765s
W0104 17:15:39.143636   30961 out.go:239] 😿  Failed to start docker container. Running "minikube delete" may fix it: recreate: creating host: create: creating: setting up container node: creating volume for minikube container: docker volume create minikube --label name.minikube.sigs.k8s.io=minikube --label created_by.minikube.sigs.k8s.io=true: exit status 1
stdout:

stderr:
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?

I0104 17:15:39.158075   30961 out.go:177] 
W0104 17:15:39.165093   30961 out.go:239] ❌  Exiting due to GUEST_PROVISION: Failed to start host: recreate: creating host: create: creating: setting up container node: creating volume for minikube container: docker volume create minikube --label name.minikube.sigs.k8s.io=minikube --label created_by.minikube.sigs.k8s.io=true: exit status 1
stdout:

stderr:
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?

W0104 17:15:39.165126   30961 out.go:239] 
W0104 17:15:39.166011   30961 out.go:239] [31m╭───────────────────────────────────────────────────────────────────────────────────────────╮[0m
[31m│[0m                                                                                           [31m│[0m
[31m│[0m    😿  If the above advice does not help, please let us know:                             [31m│[0m
[31m│[0m    👉  https://github.com/kubernetes/minikube/issues/new/choose                           [31m│[0m
[31m│[0m                                                                                           [31m│[0m
[31m│[0m    Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    [31m│[0m
[31m│[0m                                                                                           [31m│[0m
[31m╰───────────────────────────────────────────────────────────────────────────────────────────╯[0m
I0104 17:15:39.178843   30961 out.go:177] 

* 
