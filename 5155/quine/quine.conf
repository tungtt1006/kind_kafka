quine {
    store {
        # store data in an Apache Cassandra instance
        type = cassandra

        # "host:port" strings at which Cassandra nodes can be accessed from
        # the application
        endpoints = [
            ${CASSANDRA_ENDPOINTS}
        ]

        # the keyspace to use
        keyspace = quine

        # whether the application should create the keyspace if it does not
        # yet exist
        should-create-keyspace = false

        # whether the application should create tables in the keyspace if
        # they do not yet exist
        should-create-tables = true

        # how many copies of each datum the Cassandra cluster should retain
        replication-factor = 1

        # how many hosts must agree on a datum for Quine to consider that
        # datum written/read
        write-consistency = LOCAL_QUORUM
        read-consistency = LOCAL_QUORUM

        # passed through to Cassandra
        local-datacenter = "datacenter1"

        # how long to wait before considering a write operation failed
        write-timeout = "10s"

        # how long to wait before considering a read operation failed
        read-timeout = "10s"

        # if set, the number of nodes for which to optimize node creation
        # latency
        # bloom-filter-size =
    }
}
# configuration for which data to save about nodes and when to do so
persistence {
    # whether to save node journals. "true" uses more disk space and
    # enables more functionality, such as historical queries
    journal-enabled = false

    # one of [on-node-sleep, on-node-update, never]. When to save a
    # snapshot of a node's current state, including any SingleId Standing
    # Queries registered on the node
    snapshot-schedule = on-node-sleep

    # whether only a single snapshot should be retained per-node. If false,
    # one snapshot will be saved at each timestamp against which a
    # historical query is made
    snapshot-singleton = true

    # when to save Standing Query partial result (only applies for the
    # `MultipleValues` mode -- `SingleId` Standing Queries always save when
    # a node saves a snapshot, regardless of this setting)
    standing-query-schedule = on-node-sleep
}
datastax-java-driver {
    advanced {
        auth-provider {
          class = PlainTextAuthProvider
          username = ${CASSANDRA_USERNAME}
          password = ${CASSANDRA_PASSWORD}
        }
    }
}